{"title": "PDF", "author": "PDF", "url": "https://cran.csiro.au/web/packages/denvax/denvax.pdf", "hostname": "PDF", "description": "PDF", "sitename": "PDF", "date": "PDF", "cleaned_text": "Package 'denvax' October 13, 2022 Type Package Title Simple Dengue Test and Vaccinate Cost Thresholds Version 0.1.2 Description Provides the mathematical model described by ``Serostatus Testing & Dengue Vaccine Cost- Benet Thresholds'' in <doi:10.1098/rsif.2019.0234>. Using the functions in the package, that analysis can be repeated using sample life histories, either synthesized from local seropreva- lence data using other functions in this package (as in the manuscript) or from some other source. The package provides a vignette which walks through the analysis in the publica- tion, as well as a function to generate a project skeleton for such an analysis. License MIT + le LICENSE Encoding UTF-8 LazyData true Depends (< https://orcid.org/0000-0003-0701-7860 >), Kaja M. Abbas [aut] (< Samuel [aut] (< https://orcid.org/0000-0002-3774-3882 >), Flasche (< J. Hladish [aut] (< build.project Creates an ROI estimation project. Description Creates an ROI estimation project. Usage build.project(targetdir, overwrite = FALSE, copy_pub = TRUE) Arguments targetdir, path to enclosing directory. If this directory does not exist, will attempt to create it (recursively) overwrite, overwrite existing les corresponding to the project skeleton elements? copy_pub, copy the '/pub' folder (which contains the analyses from the publication) Details This function sets up the skeleton of an analysis to go from seroprevalence data to the ROI es- timation surface. That skeleton uses a series of separate scripts for each analytical step (tting, simulation, analysis, and application), connected via the command line build tool make . This ap- proach allows clean substitution for various stages (e.g., using a different model to generate life histories). The following les are created: Makele the dependencies for various analysis stages README.md brief notes about project parts t.R script for tting seroprevalence data synthesize.R script for generating synthetic populations digest.R script for converting life histories into probability coefcients for ROI calculation simple.R a quick example start-to-nish analysisdenvax 3 Value logical, indicating error free creation of the project skeleton; there may still be other warnings Examples require(denvax) tardir <- tempdir() # replace with desired = TRUE) denvax denvax: Simple Dengue Test and Vaccinate Cost Thresholds Description Provides the mathematical model described by \"Serostatus Testing & Dengue Vaccine Cost-Benet Thresholds\" in <doi:10.1098/rsif.2019.0234>. Using the functions in the package, that analysis can be repeated using sample life histories, either synthesized from local seroprevalence data using other functions in this package (as in the manuscript) or from some other source. The package provides a vignette which walks through the analysis in the publication, as well as a function to generate a project skeleton for such an analysis. denvax functions serofit ts serosurvey data against two-risk model synthetic.pop using parameter t data, generate a sample population nPxA estimate dengue infection outcome probabilities based on a synthetic population ROIcoeffs using population outcome probabilities, compute ROI equation coefcients ROI compute ROIs from setting coefcients and cost scenarios build.project create a template project for estimating ROIs lazou2016 The serosurvey data in L'Azou 2016 Description From \"Symptomatic Dengue in Children in 10 Asian and Latin American Countries\", Table 4. Usage lazou20164 morrison2010 Format a data.frame (data.table, if installed) with 20 rows and 4 columns: Country character, common country name (all Peru for this data) Age character, the bounding ages for the sample; format: lower age '-' upper age Number integer, the number of samples Seropositive integer, the in Morrison 2010 Description From \"Epidemiology of Dengue Virus in Iquitos, Peru 1999 to 2005: Interepidemic and Epidemic Patterns of Transmission\", combining information from Fig. 2 and Fig. 3. The data from Fig. 3 were extracted using https://automeris.io/WebPlotDigitizer/ Usage morrison2010 Format a data.frame (data.table, if installed) with 13 rows and 4 columns: Country character, common country name (all Peru for this data) Age integer, the age category Number integer, the number of samples Seropositive integer, the number from a population of life histo- ries Description Compute the nPx(A), C(A) proportions from a population of life histories Usage nPxA(lifehistory) Arguments lifehistory, a matrix with rows (sample individuals) and columns (outcome in year of life); see synthetic.pop return value Details computes the relevant nPx(A) and C(A): the probabilities of the various life trajectories, by age. See <doi:10.1098/rsif.2019.0234>, SI , if available) with columns Ainteger; the reference year of life, from 1 to dim(lifehistory)[2] p_0 numeric; probability of 0 lifetime infections p_1p numeric; probability of 1 or more lifetime infections p_2p numeric; probability of 2 or more lifetime infections p0_1 numeric; probability of 0 infections at age A, and 1 lifetime infection p0_1p numeric; probability of 0 infections at age A, and 1 or more lifetime infections p0_2p numeric; probability of 0 infections at age A, and 2 or more lifetime infections p1_A numeric; probability of 1 infection at age A, and 1 or more lifetime infections p1_2p numeric; probability of 1 infection at age A, and 2 or more lifetime infections p1p_A numeric; probability of 1 or more infections at age A, and 1 or more lifetime infections p2p_A numeric; probability of 2 or more infections at age A, and 2 or more lifetime infections CA numeric; probability of converting from seronegative to seropositive between age A and A+16 ROI Examples require(denvax); data(morrison2010) # has popsize = 10) # small sample size for example have 2\" ) ) ROI Compute the ROI surfaces given test and vaccine cost fractions. Description Compute the ROI surfaces given test and vaccine cost fractions. Usage ROI(rcoeffs, nus = seq(0.3, 0.9, by = 0.05), taus = 10^seq(-2, -0.5, by = 0.05)) Arguments rcoeffs, a data.frame with the ROI surface coefcients from ROIcoeffs nus, the series of normalized vaccine costs to use for ROI calcs taus, the series of normalized test costs to use for ROI calcs Details tabulates ROI Value a 'data.frame' ('data.table', if available) with columns: nunumeric, the normalized vaccine cost used tau numeric, the normalized test cost used mechanism character, either \"ordinal\" or \"binary\" corresponding to the type of test Ainteger; the age when routine test-then-vaccinate strategy starts (from As) Linteger; the maximum number of tests for routine test-then-vaccinate strategy (from Ls)ROIcoeffs 7 cost numeric; the intervention cost (as a fraction of second infection cost) benet numeric; the difference in health outcome cost (as a fraction of second infection cost) minus 'cost'; positive values indicate positive net benet roinumeric; return on investment: 'benet' over 'cost' Examples popsize = 10) # small sample size for example run time m2010lh Return on Investment (ROI) surface coefcients from population probabilities Description Compute the Return on Investment (ROI) surface coefcients from population probabilities Usage ROIcoeffs(probabilities, As = 5:20, Ls = (diff(range(As)) + 1):1) Arguments probabilities, adata.frame (ordata.table ) with the probabilities resulting from nPxA. Rows must correspond to ages, starting with age 1 As, the starting age(s) to consider Ls, the maximum number of tests for each age; should either be an integer per age or a single integer for all ages. The default behavior computes the number of tests (for each age) that makes the maximum of 'As' the maximum testing age Note: results will also be provided for shorter testing intervals, as the intermediate coefcients are calculated as part of computing the value at the maximum L8 ROIcoeffs Details computes the coefcients for the economic adata.frame (data.table , if available) with columns: Ainteger; the age when routine test-then-vaccinate strategy starts (from As) Linteger; the maximum number of tests for routine test-then-vaccinate strategy (from Ls) vacfrac numeric; the fraction of individuals participating in this strategy that get vaccinated pri.offset numeric; the (additive) reduction in vacfrac if using the ordinal test Sfrac numeric; the proportion experiencing second infection costs Fresp numeric; the F/S cost fraction term, when comparing vaccination with and without testing Sgain numeric; the S term, when comparing vaccination with and without testing Examples require(denvax); data(morrison2010) # has counts popsize = 10) # small sample size for example 11) type=\"l\", xlab=\"Max # of Tests samples for each age group; length(seropositive) must be at least 3 N, the total number of samples for each age group; length(N) must equal length(seropositive) age.min, the low age in age groups; defaults to '1:length(seropositive)', i.e. assumes the seropositive data corresponds to yearly cohorts starting at age 1. age.max, the upper age in age groups; defaults to 'age.min', i.e. assumes each category corresponds to a single year Details Fits a constant force of infection, two-risk category model using seroprevalence survey data. i.e.: (1-p_H) $$ This probability is t to the seroprevalence by age category data, using maximum likelihood and optim . Value a list of best-t parameters, all numeric values: f_H force of infection, for the high risk group f_L force of infection, for the low risk group p_H the proportion of the population at high risk Examples require(denvax); data(morrison2010) # has counts by age fit <- with(morrison2010, N=Number, age.min=Age)) if (requireNamespace(\"data.table\", quietly = TRUE)) { data(lazou2016) # has counts by age range, instead of counts for every year # this example uses /grave.Vardata.table /grave.Var/grave.Varfunctions to simplify processing # Country] } synthetic.pop Compute synthetic population trajectories from model parameters Description Compute synthetic population trajectories from model parameters Usage synthetic.pop(pars, runs = 100, popsize = 1000, maxAge = 70, rngseed = NULL) Arguments pars, a list with elements 'f_H', 'f_L', and 'p_H'; see serot return value runs, the of different serotype timelines to simulate popsize, the number of individuals to sample for each run maxAge, the length of each lifetime rngseed, an optional seed for the random number generator Details Using tted parameters for a two-risk, constant force of infection model, simulate a dengue annual exposures model for the requested number of serotype series ('runs') and individuals ('popsize'). The resulting matrix is a collection of integers, 0-4. 0 indicates no infection, 1-4 infection by the corresponding serotype. Value a matrix of integers 0-4, rows 'runs*popsize' x columns 'maxAge' Examples require(denvax); data(morrison2010) popsize = 10) # small sample size for example run time head(m2010pop)Index synthetic.pop ,3,5, 10 11 "}