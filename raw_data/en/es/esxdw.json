{"title": "PDF", "author": "PDF", "url": "https://www.albany.edu/celltracking/papers/Cell%20Population%20Tracking%20and%20Lineage%20Construction%20with%20Spatiotemporal%20Context-2007.pdf", "hostname": "PDF", "description": "PDF", "sitename": "PDF", "date": "PDF", "cleaned_text": "Cell Population Tracking and Lineage Construction with Spatiotemporal Context1 Kang Lia,, Eric D. Millera,M e iC h e nb,T a k e oK a n a d ea, Lee E. Weissa, Phil G. Campbella aCarnegie Mellon University, 5000 Forbes Avenue bIntel Research Pittsburgh, 4720 Forbes Avenue, Suite 410, C M2 Pittsburgh, PA 15213 Abstract Automated visual-tracking of cell populations in vitro using time-lapse phase con- trast microscopy enables quantitative, systematic and hig h-throughput measure- ments of cell behaviors. These measurements include spa tiotemporal quantica- tion of cell migration, mitosis, apoptosis, and the reconst ruction of cell lineages. The combination of low signal-to-noise ratio of phase contrast mi croscopy images, high and varying densities of the cell cultures, topological com plexities of cell shapes, and wide range of cell behaviors poses many challenges to exi sting tracking tech- niques. This paper presents a fully-automated multi-target t racking system that can eciently cope with these challenges while simultaneously tracking and analyzing thousands of cells observed using time-lapse phase contrast microscopy. The system combines bottom-up and top-down image analysis by integratin g multiple collabo- rative modules, which exploit a fast geometric active conto ur tracker in conjunction with adaptive interacting multiple models (IMM) motion lt ering and spatiotem- poral trajectory optimization. The system, which was teste d using a variety of cell populations, achieved tracking accuracy in the range of 86. 9%-92.5%. Key words: Cell tracking, level set, jump Markov systems, IMM lter, qu asi-Bayes estimation, linear programming, phase contrast, time-laps e microscopy, stem cell. Corresponding author. Tel.: 570 Email address: kangl@cmu.edu (Kang Li). 1This work was supported partially by the National Institute of Health Grants R01 EB007369-01 and R01 EB0004343-01, Grant 1C76 HF 00381-01, and an equipment grant from I ntel Corporation. Preprint submitted to Elsevier 23 March 20091I n t r o d u c t i o n Biological discovery and its translation into new clinical th erapies are rapidly advancing through the use of combinatorial, high-throughpu t experimental approaches. Automated tracking of cell populations in vitro in time-lapse mi- croscopy images enables high-throughput spatiotemporal mea surements of a range of cell behaviors, including the quantication of migration (transloca- tion), mitosis (division), apoptosis (death), as well as the reconstruction of cell lineages (mother-daughter relations). This capability is valuable f or several ar- eas including stem cell research, tissue engineering, drug disco very, genomics, and proteomics (Huang et al., 1999; Patrick and Wu, 2003; Brau n et al., 2003; Al-Kofahi et al., 2006; Bao et al., 2006). The automation of cell tracking faces many challenges. These c hallenges in- clude: varying cell population densities due to cells dividi ng/dying and leav- ing/entering the eld-of-view; complex cellular topologi es (shape deformation, close contact, and partial overlap); and in particular, massiv ea m o u n t so fi m - age data. As an example, we have been using computer-aided bioprinting to create complex patterned arrays of growth factors for induc ing and directing the fates of whole cell populations (Weiss et al., 2005; Campb ell et al., 2005; Miller et al., 2006; Phillippia et al., 2008). To quantify ho w these patterns regulate cell behaviors over time and space requires time-la pse phase-contrast microscopy to continuously record the cellular responses over e xtended periods (e.g., 5-10 days), while monitoring multiple experiments in parallel. This pro- cess routinely produces large datasets with low signal-to-noi se ratios (Fig. 1). Typical experiments produce over 100 gigabytes (GB) of imag e data consisting of about 40,000 frames, with up to thousands of cells in each fra me. Manual cell tracking in these images by an experienced microscopist ca n routinely take weeks of tedious work, while the results can be imprecise and sub ject to in- terobserver variability. Therefore, for eciency and accur acy, automated cell tracking and analysis are required. A robust computer vision ba sed system can address the automated tracking requirements. Previously- reported cell tracking systems, however, do not address all the challenges, and are typically validated on short-term and/or small-scale experiments only. In this paper, we present a fully-automated multi-target tra cking system that can successfully cope with the aforementioned challenges, and c an simultane- ously track hundreds to thousands of cells over the duration of a biological experiment. The system exploits a two-level design, integrati ng multiple col- laborative modules. The lower level consists of a cell detector , a fast geometric active contour tracker, and an interacting multiple models (IMM) motion lter adapted for biological behaviors. The higher level is compri sed of two trajec- tory management modules called the track compiler and the tr ack linker. 2Fig. 1. Examples of phase contrast microscopy images of cell populations. (a), (c) MG-63 human osteosarcoma cells. (b) Human amnion epithelial (AE) stem cell population. The images are cropped to 512 \u00d7512 pixels. The system has several features. First, the geometric active cont our tracker simultaneously performs segmentation and data association by in tegrating im- age intensity, edge, motion and shape information with a fast le vel set frame- work. Second, the IMM lter with online parameter adaptatio n enhances the tracking of varying cell dynamics, and provides the addition al capability of motion pattern identication. Third, the spatiotemporal tr ajectory optimiza- tion approach makes the system capable of resolving complete or long-term occlusions. Finally, although multiple algorithms are integ rated in our system, many of its parameters are estimated automatically, while th e remaining ones are intuitive to set. As an example application for the tracking system, we demonstrat e its use to automatically measure stem cell lineages. This task requires lo ng-term tracking of cell locations. The accurate segmentation of cell boundari es is an added benet of our system for other applications, but it is not the emp hasis of the results reported here. 2R e l a t e d W o r k An overview is presented below on the methods currently used for automated tracking of cells in time-series images. These methods can be cl assied as either tracking by detection ortracking by model evolution . 2.1 Tracking by Detection In the tracking-by-detection approach, cells are rst detec ted in each frame based on intensity, texture, or gradient features (Al-Kofahi e ta l . ,2 0 0 6 ) ,a n d 3then the detected cells are associated between two or more conse cutive frames, typically by optimizing certain probabilistic objective fu nctions. This approach is computationally ecient and robust when cell density is low . However, tracking mitosis can be problematic (Kirubarajan et al., 200 1), and segmen- tation errors generally increase with increasing cell density as a result of the inability to discriminate between multiple touching cells. For one example, Bahnson et al report on an automated system for measuring cell motility and proliferation over time (Bahnson et al., 20 05), but the system is unable to distinguish between cells that are not well-separa ted. As another example, Al-Kofahi et al used a seeded watershed method (Vincent and Soille, 1991) to detect cells, which can, to some degree, distinguish tou ching cells. They then perform feature-based cell matching between two fr ames to deter- mine cell trajectories and lineage (Al-Kofahi et al., 2006). They acknowledged that tracking becomes dicult as multiple cells merge into a dense blob, and they did not address cells leaving or entering the image. They also suggest that their methodology could be implemented in real-time sin ce tracking by detection in general requires low computational overhead. In yet another ex- ample, Yang et al used watershed and mean shift (Cheng, 1995) to segment fluorescence-labeled nuclei to track cell cycle progression (Y ang et al., 2005b), but did not address cell lineage construction. Another popular set of techniques (Smal et al., 2006, 2007; God inez et al., 2007) is based on particle ltering (Doucet and Ristic, 2002), which elegantly integrates detection and data association in a Bayesian probab ilistic frame- work. While these techniques tra cking in fluores- cence microscopy image sequences, their extension to cell track ing in phase contrast microscopy images is not straightforward. 2.2 Tracking by Model Evolution In the tracking-by-model-evolution approach, parametric and non-parametric model-based representations of cell appearances or shapes are evolved from frame to frame (Debeir et al., 2005; Zimmer et al., 2002; Zimm er and Olivo- Marin, 2005; Mukherjee et al., or in spatiotemporal vol umes (Padeld et al., 2006a,b, 2008) in order to keep track of moving cells o ver time. Techniques based on parametric active contour models have th e potential to produce better estimates of cell morphologies, but must be adap ted to handle cell-cell contacts and mitosis at the cost of reduced computat ional eciency. For example, Zimmer et al adapted the classic \"snake\" model to track cells by adding repulsive forces between snakes to handle close conta ct of cells and incorporating \"topological operators\" to handle cell divisi on (Zimmer et al., 42002; Zimmer and Olivo-Marin, 2005). However, the computati onal overhead can be prohibitively expensive for tracking a large number of cells. Debeir et alconsidered a simplied problem of tracking only the centroid p ositions, but not the boundaries of the cells (Debeir et al., 2005), which p ermits a mean shift based model (Cheng, 1995) to be used. However, similar to the snake s model, this model cannot handle cell divisions. As a remedy, the author s proposed to track backwards (from the last frame to the rst), which simpl ied the problem but made the tracking unsuitable for real-time proce ssing during image acquisition. Moreover, this method requires manual id entication of cell centroids for initialization, and cannot automatical ly incorporate new cells entering the eld-of-view. Geometric active contour models implemented via the level se t method (Osher and Sethian, 1988) have recently been investigated for cell t racking applica- tions (Mukherjee et al., 2004; Yang et al., et a l., 2005; Padeld et al., 2006a,b, 2008). Geometric models are generally deem ed to be more powerful representations than parametric models. However, th e use of level sets for cell tracking had been dismissed before because, in its cl assic form, it does not prevent two contacting boundaries from merging ( i.e., it will fuse multiple cells that move into close contact as one object), an d it is computa- tionally expensive. Most previous studies on level set cell trac king either did not consider contacting cells (Mukherjee et al., 2004), or re sorted to o-line post-processing to correct cell fusions (Yang et al., 2005a; Bun yak et al., 2006). These methods made little use of temporal contextual informat ion. Padeld et al approached tracking as a spatiotemporal segmentation task (Pa deld et al., 2006a,b, 2008). This method can potentially yield mo re accurate cell segmentation than frame-by-frame processing. However, it requ ires additional post-processing to separate cell clusters and to produce cell tra jectories (Pad- eld et al., 2008). It is also more computational and memory in tensive than frame-by-frame sequential processing. To partially address the problem of cell fusion, Zhang et al proposed a \"coupled geometric active contours\" model (Zhang et al., 2004), which represents each cell by a separate level set function, and enforces a coupling c onstraint that prevents dierent contours from overlapping. Dufour et al further extended this approach to 3-D for tracking fluorescent cells (Dufour et al., 2005). This approach is constrained both by computer memory and computin g power, which makes it unsuitable to handle a large number of cells. Another approach is to incorporate topological constraints, w hich explicitly prohibit cell merging, while allowing cell division. Althoug h the topological control of level sets has been studied extensively for image segm entation prob- lems (Han et al., 2003; S\u00b4 egonne, 2005), its potential for tra cking has yet to be fully exploited. The application of topology-constrained l evel set methods to cell tracking was rst reported by our group (Kanade and Li, 20 05; Li et al., 52006) and more recently, by Nath et al (Nath et al., 2006). The key idea shared by Nath et al 's method and ours is to label the contours of dierent cells using dierent \"colors\", and to prohibit the contours wi th distinct colors from merging. The distinction between the two approaches, how ever, lies in the way this coloring mechanism is implemented. Nath et al 's method relies on the four-color theorem (Appel and Haken, 1977a,b), which states that no more than four colors are required to paint a set of disjoint reg ions on a plane such that no two adjacent regions share the same color. Based on th is the- orem, their approach applies planar graph-vertex coloring to distinguish cell contours, and requires four level set functions to handle an ar bitrary number of cells while preventing cell merging. On the other hand, ou ra p p r o a c ho n l y requires one level set function, along with a region labeling map that evolves together with the level set function. Besides being more memor y-ecient, the region labeling map is conveniently utilized to store the ide ntity of each cell, which facilitates cell tracking. 3M e t h o d s Our tracking system integrates ve modules (Fig. 2), includin g: 1) cell detec- tor, which detects and labels candidate cell regions in the inpu ti m a g eu t i - lizing region, edge, and shape information; 2) cell tracker , which propagates candidate cell regions and identities across frames using a fa st topologically- constrained geometric active contour algorithm; 3) motion lter , which per- forms prediction and ltering of the cell motion dynamics usi ng a biologically relevant adaptive interacting multiple models (IMM) lter ;4 )track compiler , which generates intermediate result called track segments by fusing the output from the above modules, and judging on what is and what is not ph ysically possible; and 5) track linker , which oversees the entire tracking history and establishes the complete cell trajectories and lineages. To ac hieve robust and versatile cell tracking, our system combines the advantages of both tracking- by-detection and tracking-by-model-evolution approache s (Section 2), while mitigating against their disadvantages. Before dwelling on ea ch module, we provide an overview of the system workflow and establish notation s. 3.1 System Workflow Our system starts with processing the input images sequentially. I ts output is a complete spatiotemporal history of the cell trajectories, including cell centroid positions, cell migration velocities, shape and inten sity parameters for every cell, as well as the parent-child relations betwee n cells. For each cell, the system may generate multiple track segments as intermediate output. 6Cell Detector Track CompilerCell Candidates Cell Candidates OutputTrack LinkerFinal Trajectories Motion FilterCell Tracker Input Images Propagated Cells Predicted Motion MeasurementsCorrected MotionFig. 2. System Overview Each track segment is associated with a unique positive-integer label n. Each cell is identied using the label of its rst track segment. To initialize tracking, the cell detector detects all candi date cells in the rst frame I0(x, y) and generates an initial cell region labeling map 0(x, y), where 0(x, y)=nif pixel ( x, y) is part of cell n,a n d 0(x, y)=0i f( x, y) belongs to the background. Subsequently, for each frame Ik(x, y),k=1,2..., K : Step 1: The cell detector segments cell regions in the image using a com - bination of region-based and edge-based approaches. The outpu ti sab i n a r y map of cell regions, denoted k(x, y). Each connected foreground component ink(x, y) is considered a cell candidate in frame k. Step 2: The cell tracker propagates the cell region labeling k1(x, y)f r o m frame k1t of r a m e k. We extended a fast geometric active contour algo- rithm (Shi and Karl, 2005b) to segment cell regions and to prop agate the corresponding cell labels. First, a level set function k(x, y) is initialized us- ingk1(x, y). Then, andare evolved together to minimize an \"energy\" functional that combines a region competition term (Zhu and Yuille, 1996), a geodesic edge term (Caselles et al., 1997), and a motion term b ased on the distribution of the predicted cell position from the motion l ter. Topologi- cal constraints are incorporated to the level set evolution to prevent contours that represent dierent cells from merging. The output is the propagated cell labeling map for frame k, denoted k(x, y). Step 3: The track compiler compares the outputs of the cell detector and the cell tracker, and takes one of the following actions: creates a new or daughter track segment, or updates an existing track, or terminates a tr ack. For con- tinuing track segments, the track compiler calls on the motion lter to update the cell motion state in frame k, and to predict its state for frame k+1 . The predictions will be useful for the track linking process (st ep 4), as well 7as for the level set evolution for the subsequent frame (step 5). F or new track segments, initial motion states are initialized based on quanti ties measured from the corresponding cell regions. The output of this step inc ludes the track segments and an updated region labeling map k(x, y). Step 4: The track linker examines all track segments up to frame k,a n d detects whether two or more track segments correspond to one ce ll. It attempts to link track segments in the spatiotemporal image volume, and to form more complete cell trajectories. The updated cell trajectories a re fed back to the track compiler for subsequent tracking in frame k+1 . The following sections elaborate on each module of this system. 3.2 Cell Detection Cells in phase contrast microscopy normally appear as dark regi ons surrounded by bright halo artifacts, except for mitotic (dividing) or ap optotic (dying) cells, which appear rounder and brighter than the other cells. Conseq uently, the cell detector takes two approaches: 1) region-based detection, which employs a grayscale morphological lter and the level set method to extr act non-mitotic and non-apoptotic cells; and 2) edge-based detection, which detects mitotic and apoptotic cells based on image edges, as well as a set of shape and a ppearance criteria. The outputs of the two approaches are combined to y ield a binary image (x, y):{0,1}, in which each non-zero connected component is considered a cell candidate. The steps of cell detection are il lustrated in Fig. 3, and detailed in the next two subsections. 3.2.1 Region-Based Cell Detection The region-based cell detection approach consists of two steps: 1 )m o r p h o - logical pre-segmentation, the result of which is used to estimat e the intensity distributions of cells and background; and 2) level set segment ation, which achieves more robust cell localization. The rolling-ball lter (Sternberg, 1983) is applied to pre-segment non-apoptotic cells. The rolling-ball lates rolling a ball beneath the intensity prole of an image, removing the peaks t hat are un- touchable by the ball surface. It is a grayscale morphological lter that is related to the classical top-hat transformation (Meyer, 1979) by Irollball( I,r)=t o p h a t ( I, ball r), where ris the radius of the rolling ball, and ball ris a non-flat half ball-shaped 8Fig. 3. Illustration of cell detection steps. Shown are the h uman amnion epithelial (AE) stem cells. (a) Original image I. (b) Result of rolling-ball ltering Ir.( c ) Green circles represent initial level set contour for regio n-based cell detection. (d) Region-based cell detection output r. (e) Edge-based cell detection output e.( f ) Combined output with each cell region shown in a dierent col or. structuring element with radius r. The parameter ris set roughly equal to the average radius of cells to be detected. To apply the rolli ng-ball lter, the input image is rst inverted such that the cell interior appear s brighter than the surrounding halo. The operation Ir=\u00afIrollball( \u00afI,r) on the inverted image \u00afIwill produce an image Irwith cell regions solidied and highlighted. Otsu thresholding (Otsu, 1979) is then applied on Irto obtain a binary mask rof the cell regions. The binary mask rconstitutes a rough pre-segmentation of the image, which enables us to obtain two histograms: a cell histogram hC,a n dab a c k g r o u n d histogram hB. With these histograms, a Bayesian maximum a-posteriori prob- ability (MAP) classier can be implemented via the following te st: Classify a pixel I(x, y)a s cell, ifhC(I(x, y))>h B(I(x, y)), background ,otherwise.(1) To understand this, recall that a MAP classier can be expressed via t he Bayes the number of pixels in the cell regions, mB= sum( hB) is the number of pixels in the background, and m=mC+mBis the total number of pixels in the image. Instead of a direct application of Equation (1), the MAP classie r is imple- mented via the level set method (Osher and Sethian, 1988), whic h is less sensitive to noise and yields robust segmentation. The method wil l be elabo- rated in Section 3.3. After level set segmentation, an a priori size constraint is imposed by removing the connected components with sizes smalle rt h a n smin pixels or larger than smaxpixels. The output is a binary map of segmented cell regions r. 3.2.2 Edge-Based Cell Detection The edge-based cell detection approach aims to detect mitoti ca n da p o p t o t i c cells, which appear rounder and brighter than the other cells. This approach consists of three steps. First, the Canny edge detector (Canny, 19 86) is applied to compute an edge map of the image. Then, the regions that are enclosed by edges are located and lled. The regions whose sizes fall outsid et h ev a l i d range of [ smin,smax] (Section 3.2.1) are discarded. Then, for each remaining region, the mean pixel intensity \u00b5oin aw-pixel-wide rim of the region and the eccentricity are computed. The eccentricity is measured by tting an ellip se to the region using second-moment matching and computing the r atio of the distance between the foci of the ellipse and its major axis leng th. Finally, the regions with eccentricities smaller than 0 .95 and \u00b5o>\u00b5 N+Nare selected as cell regions, where \u00b5NandNare respectively the mean and standard deviation of the pixel intensities in a neighborhood of radius rNsurrounding the region. The parameters wandrNare set to w=m a x ( 1 ,r/3) and rN=4rin our implementation, where ris dened in Section 3.2.1. The output is a binary map eof mitotic and apoptotic cells. 3.3 Geometric Active Contour Cell Tracker Because cells are highly-deformable objects and may divide o ver time, we choose to represent cell boundaries using an implicit contour m odel, commonly known as the geometric active contour model. In this model, the boundary of each cell is considered as a closed contour Cin the image domain R2.I t s contour is represented as the zero level line of a time-depend ent embedding 10function :\u00d7[0,T]R, where C(t)={(x, y)|(x, y, t )=0 }, such that (C(t),t) = 0 at any time. Evolving the embedding function over time is an elegant method to keep track of the motion of th eb o u n d a r y , including its topological changes such as splitting and mergi ng. Among various approaches to evolve a geometric active contou r, the most popular one is the level set method (Osher and Sethian, 1988), i nw h i c ho n e evolves the embedding function (or the level set function )according to an appropriate partial dierential equation (PDE). The PDE is usually derived as which minimizes an application-specic \"energy\" functiona lE(). For cell tracking, the energy functional is constructed such t hat its minimiza- tion leads to the propagation of cell boundaries from frame k1t of r a m e k. The propagated cell boundaries should not only match the cell appearances in frame k, but also be consistent with the cell motion pattern. The energy consists of a weighted sum of three terms, which are derived from: 1) the image region statistics ( Eregion); 2) the image edges ( Eedge); and 3) the prediction of cell motion ( Emotion ): E=Eregion +wedgeEedge+wmotion Emotion , (3) where wedge0a n d wmotion 0 are weighting coecients. The dependency onis omitted in the notation for simplicity. The energy terms im plicitly depend on , which will be further explained in Section 3.3.3. Nk1is the set of cells to be propagated from frame k1t of r a m e k. Each cell nNk1occupies the region n, enclosed by its boundary Cn={(x, y)|(x, y)n}. The region that is not occupied by cells is the background, denoted by 0. The region energy Eregion is based on the Bayesian region-competition frame- represents the joint posterior probability that each pixel in frame kbelongs to a certain propagated region (rst two terms), subject to a pen alty on the 11total length of the region boundaries (third term). The para meter species the strength of the penalty. The edge energy Eedgemeasures the edgeness along the region boundaries. It is formulated following the approach of geodesic active co ntours (Caselles et al., 1997; Goldenberg et al., 2001), which can be interpre ted as the length of a curve in a Riemannian space whose metric is induced by the im age edges: Eedge=summationdisplay nNk1integraldisplay Cne(Cn)dl. (5) The function e(\u00b7) is the edgeness metric, which is ideally zero at the location s of image edges, and takes on larger values elsewhere. The motion energy Emotion represents the joint probability that the cell regions reside at the locations predicted by their respective motion lters: Emotion =summationdisplay nNk1integraldisplayintegraldisplay n+l o >0 a size-constraint parameter, which is necessary because log pk|k1 is non-positive everywhere, and because the contour that mini mizes Emotion will enclose the entire image if = 0. In addition to providing motion context, the distribution pk|k1(x, y|n) serves as an implicit shape prior. The denition of pk|k1(x, y|n) will be further discussed in Section 3.3.3. For tracking N> 1 cells in parallel, one key issue is how to uniquely identify each cell region using the implicit contour representation. A straightforward solution is to utilize Nlevel set functions (Brox and Weickert, 2006; Mansouri et al., 2006), each of which represents one cell. This solution , however, is highly inecient for simultaneously tracking thousands of cel ls. Inspired by the approaches in (Feng et al., 2001; Shi and Karl, 2005b), we cho se to represent all regions using one level set function , and to keep track of the identities of cell regions by evolving the region labeling function (Section 3.1) simultaneously with the level set function . The implementation of our approach will be detailed in the next three sections. 3.3.1 Euler-Lagrange Equations The rst step towards tracking is to rewrite the energy terms suc h that they explicitly depend on . We introduce three auxiliary functions: the region indicator function Rn(\u00b7), the Heaviside function H(\u00b7), points inside the cell regions, and >0f o rp o i n t si n the background. The energy terms can now be rewritten as: (9) Herein, the dependency on ( x, y) is omitted in the notations for simplicity. Then, by computing the rst variation E()/and by substituting it into Equation (2), the Euler-Lagrange equation for minimizing t he energy can be obtained. The equation can be written in the following standa rd form: t=F(),where F=Fregion +wedgeFedge+wmotion 3.3.2 Contour Merging Avoidance by Topology Constraints The topological the implicit contour represen tation not only facil- itates the tracking of cell divisions, but also permits the merg ing of contacting objects. This may cause two adjacent objects in one frame to fal sely merge into one object in the next frame. In the context of cell track ing, the merging 13of multiple cells would signify cell fusion. While cell fusion o ccurs in specic cell types (e.g. activated macrophages and osteoclasts), it do es not normally occur for the cell types studied in this paper, nor in many othe r studies (Zim- mer et al., 2002; Mukherjee et al., 2004; Zhang et al., 2004; Y ang et al., 2005a; Zimmer and Olivo-Marin, et et al., 2006; Nath et al., 2006). To prevent false cell fu sion, it is important to incorporate a topological constraint that perm its division but prohibits merging. To introduce the topological constraint, we borrow the conce pt of topological numbers from digital topology (Han et al., 2003). Let N8(x, y) be the set of 8 neighbors of pixel ( x, y). The topological number of ( x, y) with respect to the cell region n(n> 0), denoted Tn(x, y), is the number of 4-connected components in the set nN8(x, y). Similarly, the topological number of (x, y) with respect to the background 0, denoted T0(x, y), is the number of 8-connected components in the set 0N8(x, y). Let o(x, y) denote the number of cell regions that overlap with N8(x, y). Then, the relaxed topological number (Shi and Karl, 2005b) for pixel of two dierent cell regions can merge only if the level set function changes sign from positive to negative at a point ( x, y)w i t h Tr(x, y)> 1. By detecting the points at which Tr>1, and preventing the level set function from changing sign at these points during the contour evolution, merging of dierent cell regions can be eectively prevente d. 3.3.3 Fast Implementation Traditional implementations of the level set method require evaluating PDEs (e.g. Equation (10)) using numerical methods (e.g., nite di erence), which is computationally expensive. Among various approaches to speed up the com- putation (Cates et al., 2004; Lefohn et al., 2004; Pan et al., 2006), the fast two-cycle algorithm proposed in (Shi and Karl, 2005a,b) is ch osen, since it achieves near real-time tracking speed, allows straightforw ard incorporation of topological constraints, and is easy to implement. The algorithm evolves a contour iteratively by operations a s simple as switch- ing elements between two linked lists, LinandLout, which keep track of the points adjacent to the contour. This approach can be viewed a s an extreme case of the narrow-band scheme with a two-pixel bandwidth (Cho pp, 1993; Nlinked lists are initialized from 14the region labeling map (x, y) according to: Lout(n)={x|(x)=n,xN4(x) where (x)=n}, Lin(n)={x|(x)=n,xN4(x) where xLout(n)}, (15) where x(x, y). Accordingly, the level set function is dened as: (x, y)= 3,if (x, y) is 1,if (x, y)Lout(n),n, 1,if (x, y)Lin(n),n, 3,if (x, y) is an interior pixel,(16) which approximates a signed distance function. Each contour-evolution iteration is performed in two cycle s: an update cycle and a regulation cycle. Update Cycle : The update cycle evolves the contour according to the sign of a speed function F,w h i c ha p p r o x i m a t e s Fgiven in Equation (10) with all curvature-dependent terms removed (i.e., the terms 2in (11) and ein (12) are no longer necessary): F(x, y)). (20) The region speed Fregion requires the cell candidate map (x, y)o u t p u tf r o m the cell detector. Recall from Section 3.2 that (x, y) is computed by com- bining two approaches: region-based detection and edge-based detection. In region-based detection, the level set algorithm is executed u sing a uniform lattice-of-circles initialization and the following speed function: F(x, y)=hC(Ik(x, y))hB(Ik(x, y)), (21) which implements the MAP classier given in Equation (1). The ou tput seg- mentation r(x, y) is combined with the output from edge-based detection e(x, y)b yab i n a r y ORoperation to obtain (x, y). 15The edge speed Fedgeis a central-dierence approximation of the rst term of Equation (12). Inspired by (Huang et al., 2004), we dene the edgeness function e(x, y) to be the Euclidean distance transform of the edge map of Ik(x, y), which is produced by the Canny edge detector. This deniti on induces fewer local minima as opposed to the gradient-based denition in (Caselles et al., 1997). The edge map is also utilized for edge-based cell detection (Sec- tion 3.2.2), hence this computation can be reused. The function N(\u00b7|z,S) in Equation (20) denotes a bivariate normal distribu- tion mean zand covariance S. The vector zn,k|k1is the centroid position of cell nin frame kpredicted by the motion lter, which will be explained fur- ther in Section cov {(x, y)|k1(x, (22) It can be considered as an elliptical approximation of the cel l shape in frame k1 by second-moment matching. Regulation Cycle : The regulation cycle provides smoothness regulation to the contour using local Gaussian ltering. This regulation has a similar eect as the curvature-dependent terms in Equations (11) and (12) ,b u ta v o i d st h e expensive computation of the curvature. This is because the cu rvature equals 2(i.e., the Laplacian of ) when is a signed distance function ( ||=1 ) ; and based on the theory of heat diusion (Perona and Malik, 1990 ), evolving a function according to its Laplacian is equivalent to Gaussia n ltering. More detail of the implementation is provided in Appendix A wi th pseudocode. This algorithm is limited to a pixel-level accuracy unless th ei n p u ti m a g e is interpolated. A pixel-level accuracy is adequate for our study, since our primary goal is to construct the cell trajectories over time, rather than to delineate the cell boundaries at a sub-pixel precision. 3.4 Interacting Multiple Models Motion Filter A motion lter is the fundamental building block of many trac king systems (Ris- tic et al., 2004). It provides recursive estimations of the tar get states (such as position, speed, and acceleration) based on noisy measurements. E ssential to any motion lter is a motion model that describes the target dy namics, and a measurement model that relates states to measurements. Traditi onal motion lters, such as the Kalman lter (Kalman, 1960) and the standard particle lter (Gordon et al., 1993), are bound to use only one motion mo del, which is inadequate for tracking biological cells because cell dynam ics vary frequently with time. The interacting multiple models (IMM) lter (Blo m, 1984), instead, is capable of incorporating multiple motion models in paral lel, and it has been 16shown to be well suited for biological object tracking (Genove sio et al., 2006). Cell motions are assumed to consist of a nite number of modes. Each mode can be described by a linear model with additive Gaussian noise. T he motion models and the measurement are dened as: Motion model: zk=Hsk+wk. Here, skis the state vector of a cell in frame k, which consists of the centroid position, velocity, and acceleration of the cell, i.e., sk(xk,xk,\u00a8xk,yk,yk,\u00a8yk). Note that the \"prime\" sign (') denotes vector or matrix transposi tion. The cor- responding measurement vector zk(xk,yk)contains the measured centroid position. Fiis the state transition matrix of model i,a n d His the measure- ment matrix that relates states to measurements. vi k1andwi kare the process and measurement noise vectors, which are uncorrelated zero-me an Gaussian processes with covariances QiandR, respectively. The IMM lter operates MKalman lters in parallel, each of which is matched to a distinct motion model. It assumes that the transition betwee n models is regulated by a nite-state Markov chain, with probability pijof switching from model ito model jin successive frames. However, rather than making hard commitments to any single model, it maintains a weightin ga m o n gt h e models, which is determined as the probability of each model b eing correct given the current measurement. Hence, the optimal state estimat ea ta n y time instant is a mixture of Gaussian distributions. Each mixture component is the estimate from a Kalman lter, weighted by the posterior p robability of the corresponding motion model. This leads to a mixture with e xponentially growing number of components in time because of the branching of model switching hypotheses. To avoid the combinatorial explosion and make the computation tractable, the IMM lter approximates the mixt ure of Gaussians with a single Gaussian with equal mean and covariances. The ltering recursion consists of two stages: prediction andcorrection .T h e prediction stage predicts the state sk|k1at time kbased on the state history up to time k1; the correction stage generates a rened estimate skby incorporating the newly-arrived measurement zk. The mechanisms of the two stages are detailed below. Prediction :S t a r t i n gf r o m Mweights i k1, states si k1and covariances i k1 from the previous iteration, the are input to M Kalman lters The and covariance predictions can determi ned by: The predicted centroid positions zk|k1=Hsk|k1of all cells are fed to the cell tracker to guide the level set evolution in frame k(see Section 3.3.3). Correction : Given the predicted states, covariances, and measurement zk, the Kalman lters are used to obtain the Kalman gain. The likelihood that model jis activated in frame kis j k= expbracketleftbigg 1 of Kalman lter j,a n d Sj kis the associated covariance. Then, the combined state skand covariance k estimates can be computed by Equations with j ii k|k1i k). To IMM lter, the system tracks each cell withou t motion lter- ing in the rst three frames in which it appears. The measured cel l centroid positions in these frames are used to initialize the cell state s0.T h ei n i t i a l model weights i 0are set to equal 1 /M(i{1,. . . ,M }), indicating the initial complete uncertainty as to which model is more correct. The d enitions of the remaining lter parameters will be discussed in sections 3.4.1 a nd 3.4.2. 3.4.1 Motion Models To adapt the IMM lter for cell tracking, cell motion models n eed to be dened by specifying the system matrices FiandH. Inspired by (Genovesio et al., 2006), we dene four motion models ( M= 4): random walk Kalman EstimatorPredicted 4. Block diagram of the TPM-adaptive IMM lter framework for two models. velocity (CV), constant acceleration (CA), and constant-speed c ircular turn (CT). They represent four typical modes of cellular motion: B rownian mo- tion, constant-velocity migration, constant-acceleration migration, and turn- ing. Compared to the approach of Genovesio et al, the circular turn model is a novel addition, since the amnion epithelial stem cells that w e experimented with perform an interesting turning motion. Moreover, instea d of interpreting the motion models as the extrapolation of cell positions (Gen ovesio et al., 2006), we explicitly incorporate velocity and acceleratio n components into the state vector, and derive the models based on state-space dieren tial equa- tions. The state-transition 000 000 000 000 1 Ts0 000 010 000 000 ,F3= 1TsT2 s 200 0 01 Ts00 0 00 100 0 00 01 TsT2 s 2 00 001 Ts 00 000 1 , cos( kTs)0 0 0 00 0 1sin(kTs) k1cos(kTs) 2 k 0 0 0 0 cos( kTs)sin(kTs) k 00 0 0 ksin(kTs) cos( kTs) , where Tsis the time between the measurements (i.e., the frame interva l). The subscript kin the coordinated turn transition matrix F4 kindicates that it is time varying. It depends on the angular turning rate k, which can be com- puted from the velocity and acceleration vectors as k=radicalBig \u00a8x2 k+\u00a8y2 k/radicalBig x2 k+y2 to (Zarchan and Muso, 2005; Herman, 2002) f or detailed derivations of the state-transition matrices. The proposed mot ion models matrix: H= 100000 000100 . 3.4.2 Parameter the system matrices dened, the noise covariances Qi,R,a n dt h ei n i t i a l error covariance matrix i 0can be estimated from training sequences using the expectation-maximization (EM) algorithm (Bishop, 2007 ). The details of the EM-IMM parameter estimation procedure are presented in App endix B. While EM also permits the estimation of FiandH, the resulting matrices may be in arbitrary forms and are dicult to interpret. With the p redened system matrices, we gain additional insight into the typical motion p atterns of each cell. Namely, we can identify if the cell motion is predominat ed by Brownian motion, constant-velocity migration, accelerating migrat ion, or turning motion based on the corresponding model weights i kcomputed by the IMM lter. One important parameter yet to be specied is the Markovian mo del transition probabilities pij. By convention, pijcan be arranged in an M\u00d7Mtransition probability matrix (TPM) P,w i t h pidenoting the i-th row of P.T r a d i t i o n - ally, the TPM is almost always treated as a xed design paramete r chosen empirically. For many biological applications, however, a priori information about the TPM may be inadequate or lacking. Cellular motion c ould vary con- siderably or become unpredictable due to changes of experime ntal procedures, extracellular environments, cell densities, and/or cell type s. Moreover, impos- ing an empirical TPM would contradict the very goal of biolog ical discovery, i.e., to discover unknown cell behavioral variations. 20With the above considerations, we chose to perform online minim um mean- square error estimation of the TPM. Various algorithms exist fo r our purpose, and we adopt the quasi-Bayesian algorithm (Jilkov and Li, 2004), which is simple to implement, numerically stable, and requires neglig ible computational overhead. The quasi-Bayesian estimation assumes that each row piof the TPM follows a Dirichlet prior unit simplex requirementsummationtextM j=1pij=1a n d pij[0,1], for all i. The parameters aijrepresent the unnormalized a priori TPM. If they are chosen as ai1=\u00b7\u00b7\u00b7= aiM=1f o ra n y i, the corresponding Dirichlet distribution of picoincides with the uniform distribution. Therefore, if a priori knowledge about the TPM is unavailable, the quasi-Bayesian estimator can naturall y be initialized with ). the rst measurement z1, a posterior probability p(pi|z1) can be obtained based on the Dirichlet prior p(pi) for each model i, which is a weighted sum of MDirichlet distributions. The posteriors over the subsequent measurements w ill be mix- tures of exponentially more Dirichlet distributions. The qua si-Bayesian ap- proach utilizes a similar approximation as in IMM to obtain a quasi-posterior distribution. At each time step, it approximates the posterior mixture of M Dirichlet distributions by a single Dirichlet distribution, t hen computes the quasi-posterior estimation pias the mean of this approximated distribution. This process is elaborated in (Jilkov and Li, 2004; Smith and M akov, 1978), and can be summarized as a recursive algorithm (Algorithm 1). Th e quasi- Bayesian algorithm integrates seamlessly with IMM, enabling us to update 21the TPM after the correction step in each ltering cycle (see Se ction 3.4). A diagram of the TPM-adaptive IMM lter with two models is give ni nF i g .4 . 3.5 Track Compilation The track compiler coordinates the cell detector, cell trac ker and motion lter to produce track segments. We use Nkto denote the set of labels of all track segments created up to frame k. A track segment is active in frame kif it was successfully tracked in frame k1, otherwise it becomes inactive . Let 0 denote the background region, and ndenote the cell region with label n. An outline of the track compilation algorithm is shown in Algorit hm 2. Algorithm 2 :T r a c kC o m p i l a t i o n 0{(x, y)|k(x, y)=0 5 SelectBestMatch ) 6elseUpdateTrack (n, k,n) The compiler rst compares the output of the cell detector and cell tracker, k(x, y)a n d k(x, y). Each cell candidate in k(x, y) that does not overlap with any propagated cell region in k(x, y) is considered a new cell. A new track segment will be initialized, and k(x, y) will be updated accordingly. Next, the algorithm scans through all active track segments, and deactivates track segments whose labels are not found in the propagated reg ion labeling k(x, y). A track segment whose corresponding propagated cell region c ontains only one connected component will be updated directly. If a c ell region consists of more than one connected components separated by a minimum d istance dmin, the track compiler will judge between two possibilities: 1) th e cell divided into daughter cells; or 2) one or more of these components are fr om occluded 22cells or close-by newly-entered cells. The algorithm will eit her create daughter tracks or continue tracking using the component that best matc hes the cell trajectory, depending on whether the cell is previously dete cted to be mitotic. Details of several key operations are as follow. AddTrack (,n new,k) creates a new track segment labeled nnew; lls region with nnew; and initializes the cell state based on measurements of . UpdateTrack (n, k, ) updates the track segment nusing the features of region , including the centroid location, mean intensity, area, and eccentricity. The centroid and the mean intensity are fed to the motion lter to o btain a ltered state of cell nin frame k. The last three features are used to classify a cell as normal, mitotic, or apoptotic, using three-nearest-neighbo r (3NN) matching with the Mahalanobis distance to a set of training samples obtai ned o-line. AddDaughterTrack (ndaughter ,n ,k, ) creates a daughter track of cell nwith a unique label ndaughter , and lls the region with ndaughter . The state of the daughter cell will be computed based on the measured centroid l ocation and mean intensity of , and the predicted state of cell n. SelectBestMatch (n, k,n) selects component nthat best matches the dynamics of cell n, i.e., the one which maximizes the innovation likelihood given by Equation (31) among all dynamic models. IsDivided (n)r e t u r n s true if region nhas multiple connected components and the minimum distance between any two points in dierent co mponents is greater than a preset threshold dmin; otherwise, it returns false . IsMitotic (n, k)r e t u r n s true if cell nis classied as mitotic during the past T frames using the approach described in UpdateTrack above. The parameters dminandTinvolved in the algorithm need to be adjusted for specic datasets. Their values will be provided in Section 4.2. 3.6 Track Linking The track linker module provides the global view. It oversees the entire track- ing history, and it detects potential problems among all trac k segments up to frame kbased on two physical constraints: 1) a cell does not vanish unless it leaves the eld-of-view, dies and is released into the medi a, or is occluded; and 2) a cell does not appear unless it enters from outside, divi des from an- other cell, or comes out of occlusion. The linker attempts to c orrect violations of these constraints by linking track segments into complete ce ll trajectories, 23utilizing spatiotemporal context. The track linking procedure is outlined in Algorithm 3. Here, Nlost{nl|l= 1,. . . ,L }denotes the label set of track segments that end before frame k,a n d Nfound {nf|f=1,. . . ,F }denotes the label set of track segments that start after the rst frame. Most operations in the algorithm are self- explanatory. One vital step is the matching between lost and appearing track segments: MatchTracks (Line 4). Algorithm 3 :T r a c kL i n k i n g Nlost,Nfound 1foreach ,ab i p a r t i t eg r a p h Gis created, whose nodes correspond to the labels in NlostandNfound. For each node pair ( nl,nf), an arc nl,nfis created between node nland node the last centroid location ( xl,yl,kl)o f track nlis within a spatiotemporal double cone centered at the rst cen troid location ( xf,yf,kf)o ft r a |klkf|D/2, where D,RandR0are nl,nfis assigned a weight wlf=max nl,kf(nf), which is the maximum innovation likelihood of track nlon the measurement of track nfin frame kf(Equation (31)). Intuitively, wlfindicates how likely track segment nfis a continuation of track segment nlbased on the dynamics of track nl. Next, a maximum-likelihood matching is computed between tra cksnlandnf. The approach we reported previously (Li et al., 2007) only con sidered one-to- one matches. Hence, it could not handle the case where a cell is lo st during mitosis, and whose daughter cells are re-detected in later fram es. To handle this case, we improved the algorithm to consider both one-to-o ne and one-to- two matches. The algorithm relies on two inputs: an H\u00d7(L+F) constraint 24matrix Cand an H\u00d71 likelihood vector d. Here, His the total number of one-to-one and one-to-two matching hypotheses. LandFare, respectively, the numbers of track segments in NlostandNfound.M a t r i x Cand vector dare constructed as follows: For each arc nl,nfinG, a new row is appended to Cand a corresponding new element to d.L e t hbe the index of this new row. We set d(h)=wlf,a n d C(h, i)= 1,ifi=lori=L+f, 0,otherwise . For each node nlthat is to multiple nodes nf1,\u00b7\u00b7\u00b7,nfmNfound (m2), all possible one-to-two matchings are enumerated, e.g., nl(nf1,nf2), nl(nf1,nf3), and so on. For each of these hypotheses, say nl(nf1,nf2), a new row with index htoCand a corresponding new element is appended to d.T h ev a l u eo f d(h) is set to be the maximum innovation likelihood of track nlfor the spatiotemporal mean of the starting points of tracks nf1andnf2, with the constraint C(h,i)= 1,ifi=l,i=L+f1,o ri=L+f2, 0,otherwise . With Canddconstructed, the matching problem reduces to selecting a subset of rows of Csuch that the sum of corresponding elements in dis maximized, under the constraint that no two rows share common nonzero entr ies. This can be posed as the following integer programming problem: maxxdx,such that Cx1, (33) where 1is aH\u00d71 vector of ones. xis aH\u00d71 binary vector to be solved for, with x(h)=1i fr o w his selected in the solution, or x(h) = 0 otherwise. While integer programming problems are in general NP-hard, the pro blem given in Equation (33) can be solved exactly using linear programming. This is due to the fact that the constraint matrix Cis totally unimodular2,a n dt h er i g h t - hand sides of the constraints are all integers. In fact, if the ab ove two conditions are satised, a linear programming problem will always have an integer-valued solution (Papadimitriou and Steiglitz, 1998). In our implem entation, the open- source software package lpsolve (Berkelaar et al., 2007) is used to solve the above integer programming problem. A similar optimization a pproach was used by Al-Kofahi et al (Al-Kofahi et al., 2006) for inter-frame cell matching. 2A matrix is totally unimodular if the determinant of any squa re submatrix takes one of the values in {-1, 0, 1 }. 25As an optional step after the completion of the track linking pr ocedure, all cell trajectories that terminate in the eld-of-view with l engthes shorter than a preset threshold will be regarded as noise and removed (Line 7) . 4E x p e r i m e n t a l M e t h o d s The tracking system is implemented in ISO C++. The inputs to the system are gray-scale image sequences generated by the imaging softwa re QED Image (Media Cybernetics Inc.). Unprocessed microscopy images are of ten distorted by spatial illumination inhomogeneity. The distortion is espe cially severe when low-magnication objectives are used. To normalize illumin ation, a flat-eld correction lter is applied to the input images. This lter di vides each input frame by a preacquired light eld image, and then it scales the output pixel values to a xed range. In our experiments, a light eld image i s unavailable. Therefore, a pseudo light eld is generated for each sequence b ya p p l y i n ga Gaussian lter with standard deviation of 50 to the rst frame. 4.1 Data The performance of our system is quantitatively evaluated on e ight phase- contrast microscopy image sequences. They are categorized into three data sets ( A,BandC) according to the cell type, imaging protocol and cell seedin g method. Dataset A includes two image sequences of MG-63 human osteosarcoma cells acquired with a 12-bit Qimaging Retiga EXi Fast 1394 CCD camera mounted on a Zeiss Axiovert 135 TV microscope, at a time-lapse interval of 4 minutes for 10 hours. Each sequence consists of 150 frames, with a frame dim ension of 1280 \u00d71024 pixels, and a resolution of 1.9 \u00b5m/pixel at 4.9x magnication. The cells are seeded randomly on a polystyrene dish. The images a re cropped to a size of 512 \u00d7512 pixels (Fig. 1(a)) to speed up processing and evaluation. The cell populations in the cropped sequences are in the range of 80-110 cells per frame. An independent sequence of the same cell type was util ized for training. Dataset B includes four image sequences of proprietary amnion epithel ial (AE) stem cells (Fig. 1(b)), acquired using the same imaging prot ocol as Dataset A, except that the acquisition rate is one frame per 10 mi nutes. The AE cells are extracted from the placenta following live bi rth, and are potentially a noncontroversial source of stem cells for cell tr ansplantation and regenerative medicine (Miki et al., 2005). The sequences wer e acquired over 26a duration of 42.5 hours, each consisting of 256 frames with 1280 \u00d71024 pix- els/frame. The cell population density in each sequence is roug hly 2000-5000 cells per frame, and is nearly confluent towards the end of the sequence. An independent sequence of the same cell type was utilized for tra ining. Dataset C includes one sequence of MG-63 cells (Fig. 1(c)) recorded by a n8 - bit CCD camera on a Zeiss IM35 microscope. The sequence lasts for 4 3.5 hours and has a frame interval of 15 minutes, corresponding to 174 fra mes/sequence. The frame dimension is 512 \u00d7512 pixels with a resolution of 3.9 \u00b5m/pixel at 5:1 magnication. The cells are seeded randomly on a brin-co ated slide, on which a 0.75 \u00d70.75 mm2uniformly-concentrated square pattern of FGF-2 was created using our bioprinter (Weiss et al., 2005). The cell pop ulation in the sequence is in the range of 350-750 cells per frame. The rst 40 f rames of the sequence are reserved for training, the rest is used for testing. In addition to the above datasets, 35 sequences of AE cells were ut ilized to qualitatively assess the tracking performance of the system. 4.2 Parameters Many parameters involved in our system can be learned automati cally from training data. These trainable parameters include the proce ss noise covariances Qi(i=1,..., 4), measurement noise covariance R, initial estimation error covariance i 0(i=1,..., 4), and the model transition probability matrix (TPM) P, all of which are required by the IMM motion lter. For each da taset, the parameters are learned using a set of manually tracked cell trajectories. The training set include 71 trajectories from dataset A, 101 tra jectories from dataset B, and 232 trajectories from dataset C. The training procedure alternates between two steps. First, Qi,R,a n d i 0are trained using the EM-IMM algorithm B) with an l o-diagonal entries pij,0=0.05, (i=j), which encodes the assumption that a cell tends to stay in a moti on mode rather than to switch to the other modes in successive time ste ps. It is chosen instead of a uniform (uninformative) initializatio n as suggested in Section 3.4.2 because it leads to better capability of model i dentication and faster convergence of the parameters. Then, once Qi,R,a n d i 0are learned, the TPM is re-estimated the rithm 1) with the hyperparameter matrix A0set to equal the previous P. The procedure iterates until the TPM converges. The above procedure converges to a near all 0 .0279 0 .9148 (34) In addition to the tendency for cells to stay unchanged in a mot ion mode, the TPM indicates that the random walk and constant-velocity mot ions are more persistent, whereas the acceleration and turning motions are relatively tran- sient. It is used to initialize the hyperparameter matrix A0in the subsequent experiments. In contrast to the TPM, the learned values of Qi,R,a n d i 0 vary between dierent datasets. Their specic values are less in formative than the TPM, and are omitted here. The settings of the additional parameters are summarized in Ta ble 1. These parameters can be intuitively determined based on direct obse rvation. For ex- ample, the cell detector parameter ris set to roughly equal to the average cell radius. The size constraints sminandsmaxloosely correspond to the expected cell size range. The cell tracker parameters wedge,wmotion ,a n d are deter- mined empirically, and they are mostly held constant for dier ent datasets. The parameter Tis related to the maximum duration of mitosis events. The track linker parameters D,R,a n d R0are constrained by the maximum cell migration speed. Table 1 Summary of parameter settings for each dataset. Dataset rs min smax wedge wmotion d min TD R R 0 A 10 16 4000 0.1 0.1 0.001 10 10 10 5 10 B 5 5 2500 0.1 0.2 0.001 8 10 10 5 20 C 4 4 1000 0.1 0.1 0.001 3 5 6 3 5 4.3 Cell Detection Accuracy Assessment To quantitatively evaluate cell detection accuracy, the ce ntroid positions of all visible cells in 5 randomly selected images in each dataset w ere manually identied using an interactive program. The human operators can navigate through contextual frames to better identify overlapping c ells, and to distin- guish cells from background and other objects (e.g., glass scra ps, air bubbles, etc.) that may exist in the eld. 28The detection accuracy is gauged using two metrics: 1) precision ,w h i c hi st h e ratio of the number of detected cells to the total number of de tected objects, and 2) recall (a.k.a. sensitivity), which is the ratio of the number of detected cells to the total number of cells actually in the image, visua lly determined by the human observer. In terms of true positives (TPs), false positives (FPs), true negatives (TNs) and false negatives (FNs), the metrics can be computed as: precision = TP/(TP+FP) and recall = TP/(TP+FN). 4.4 Cell Tracking Accuracy Assessment The image sequences used for cell tracking accuracy assessment wer e selected to be feasible for manual tracking. Only the cells that appear in the initial frame of each sequence and their progeny were manually tracke d. The man- ual tracking results were obtained after weeks of expert scrut iny, and gained consensus among multiple observers. The manually and automatic ally tracked trajectories (branches) were paired in the initial frame of e ach sequence, and they were compared in the remaining frames. An automatically t racked cell trajectory is considered valid only if it follows the same cell through all the frames that the cell appears. Any swapping of identities betwee n two nearby cells will invalidate the trajectories of both cells and the ir progeny. The sequences in datasets B and C contain hundreds to thousands o f cells per frame, making it unrealistic to manually track all cells in th e entire sequences. To make quantitative validations feasible, a 256 \u00d7256-pixel region of interest (ROI) is dened in each image sequence of dataset B, and a 192 \u00d7192-pixel ROI in dataset C. The automated tracking results are manually e xamined only within the ROI volume. In addition to the tracking validity d ened previously, the ratio of cell divisions that were correctly tracked by the tracking system was also evaluated. This ratio is referred to as the division tracking ratio .A division is considered to be correctly tracked if the daughter cells are correctly located and the cell lineage is successfully established. 5R e s u l t s 5.1 Tracking Examples Before presenting quantitative results, we provide several exp lanative exam- ples to demonstrate the key features of our system. Fig. 5 demonstrates that the topology-constrained level set ca n eectively 29Fig. 5. Tracking contacting and partially overlapping AE ce lls. The numbers at the top-left corner are the frame indices. Cells 12, 15 and 18 are p artially overlapping in frames 151-152. Cells 15 and 12 are closely passing each oth er in frames 162-167. prevent merging of closely contacting cells and maintain cel l identities. In addition, cells (e.g., cell 25) are automatically initiali zed when they enter, and they (e.g. cells 16 and 20) are removed when they exit the eld of view. This example is cropped from one of the sequences in dataset B. Fig. 6. Tracking mitotic and apoptotic MG-63 cells. Left: Six frames with cell boundaries and centroids overlaid. Question marks indicat e cells in intermediate stages (either mitotic or apoptotic). For daughter cells, t he label of their parent is shown. Right : A spatiotemporal plot of the corresponding cell trajector ies. The tick marks on the bounding box indicate the time instants of t he six frames shown in the left panel, and the triangle indicates frame 61. Fig. 6 shows an example of tracking mitotic and apoptotic cell s. The images are taken from dataset C. Since the appearances of mitotic and apoptotic cells are almost identical during a certain period (frames 62 and 63), they can only be distinguished with sucient temporal information ( frames 64- 68). This example illustrates that our tracking system can eec tively detect mitoses and apoptoses, and distinguish between them by using the te mporal context. To illustrate the operation of the IMM lter (Section 3.4) and demonstrate its superiority to Kalman lter, an articial example was dev ised as shown in Fig. 7. To reflect realistic cell motion and to serve as the groun dt r u t h ,t h e trajectory of a cell in one of the sequences in dataset B was manu ally tracked. Gaussian noise of covariance 25 Iis added to the trajectory to simulate the 30measured cell positions during tracking, where Iis a 2 \u00d72 identity matrix. The IMM lter with the four motion models described in Section 3.4.1, as well as a standard Kalman lter using only the constant-velocity (CV) model, is then executed to estimate the cell trajectory based on the noisy measurements. Both lters utilized equivalent parameter settings. As shown in Fig. 7(a), the trajectory estimated by the Kalman lt er (green curve) diverges from the true trajectory (black dashed curve )a tt h ea r r o w - indicated positions, indicating that the CV model is no longer adequate to represent the turning motion at these locations. In comparison, the trajectory estimated by the IMM lter stays close to the ground truth, and ex hibits appreciably smaller deviation from the true trajectory. To provide additional insights into the IMM lter, we plotted the model weights j k(j=1,..., 4) (Fig. 7(c)) and the turn rate k(Fig. 7(d)) esti- mated by the lter during its operation. As shown in these plots, t he major turning points of the trajectory are indicated by peaks in th e estimated turn rates, with higher peaks indicating tighter turns. An interesti ng exception is at the location indicated by triangle 3, where a near 180turn is spotted in the trajectory, but the corresponding peak in the turn rate is relatively small. By examining the ground truth, we found that the cell stopped a t the afore- mentioned location for a short period (approx. 20 minutes) bef ore heading toward a dierent direction, resulting in a smaller turn rate. The stopping motion is captured by an increase in the random-walk model wei ght at the corresponding location in Fig. 7 (c). Fig. 7. IMM lter versus Kalman lter. Black dashed curves in (a) and (b) represent the true trajectory of a cell. Gray dotted curves show the noi sy trajectories after superimposing additive Gaussian noise. Solid green curves are the estimated trajec- tories by the Kalman and IMM lers using the noisy trajectori es as measurements. Plots (c) and (d) show the model weights j k(j=1,..., 4) and the turn rates k estimated by the IMM lter during its operation. Colored tri angles in (b) and (d) indicate major turning points of the trajectory. 31Fig. 8. Example of spatiotemporal track linking. Top: Track segments output by the track compiler. Bottom : Completed cell trajectories after track linking. The numbers in the parentheses indicate cell generations. The eect of spatiotemporal track linking is illustrated in Fi g. 8. The top row of the gure shows the track segments, which are intermediat eo u t p u t s of the track compiler. As shown, the trajectory of cell 1 and its daughters are broken in to multiple segments due to abrupt jumping motions o f the cells. The bottom row shows the result after track linking, where the i dentities of the daughter cells and their lineage with cell 1 were successful ly recovered. With the incorporation of IMM motion lter and spatiotempora lt r a c kl i n k i n g (Section 3.6), our system achieves superior robustness in handli ng varying cell motions and long-term occlusions. Fig. 9 shows a 20 \u00d720-pixel portion of the tracking result for a sequence in dataset B. In this example, cel l 116 is occluded by cell 47 in frame 36 and reappeared in frame 46. With a standar dK a l m a n motion lter and no spatiotemporal linking, the system (top row ) switched the identities of cells 47 and 116 in frame 16, detected a false mit osis in frame 36, and eventually lost cell 47 after frame 36. By replacing the Ka lman lter with an IMM lter, the system correctly maintained the identities o f cell 47 and 116, but it still lost track of cell 116 due to occlusion (middle r ow). Finally, by incorporating spatiotemporal optimization, the system cor rectly recovered the trajectory of cell 116 after occlusion (bottom row). 5.2 Detection and Tracking Accuracy The selected experimental datasets represent high and varying densities of cell populations as well as a variety of complex cell behavio rs, which pose signicant challenges for the tracking system. For example, th e cell populations in datasets B and C are nearly confluent towards the end of each se quence, with densities as high as approximately 30 cells per 1002pixels. In addition, while the typical diameter of AE stem cells in the experimental image sequence 32Fig. 9. Tracking AE cells through occlusion. Cell 116 was com pletely occluded by cell 47 from frame 35 to 45 and reappeared in frame 46. The numbers a t the top-right corner are frame indices. The trailing curves represent cel l trajectories. Dierent colors represent dierent cell lineages. Top: With standard Kalman motion lter and no spatiotemporal track linking, the system switched th e identities of cell 116 and cell 47 and loses track of cell 116 eventually. Middle : By replacing the Kalman lter with an IMM lter, the system correctly maintained the identities of cells 47 and 116. Bottom : By incorporating both IMM motion lter and spatiotemporal track linking, the system successfully tracked all cells. is around 5-12 pixels, some cells migrate more than 20 pixels be tween frames, which is a distance much larger than the cell diameter. The act ive contour tracker alone is insucient to handle such large displacements. Moreover, some of the cells were frequently occluded in some frames and reeme rged in other frames. Under these challenging conditions, our system achieved h igh detection and tracking accuracy as summarized in Table 2 and Table 3, resp ectively. Table 2 Summary of cell detection accuracy for all datasets. Dataset Cell Count Detected FP FN Precision (%) Recall (%) A 673 662 9 98.6 97.0 97.5 98.1 33Fig. result cells. Left: Spatiotemporal visual- ization of cell trajectories. Right : One of the selected regions used for quantitative validation with cell trajectories overlaid. Yellow rectan gles indicate occurrences of mitosis in the past T= 10 frames. The rst column of Table 3 summarizes the tracking performance of our system with a standard Kalman motion lter and a constant-velocity mo tion model. The second column shows the performance with an adaptive IMM mo tion lter and four motion models as described in Section 3.4.1. The thir d column shows the performance after the incorporation of spatiotemporal t rack linking. As the statistics suggests, the incorporation of spatiotemporal tra ck linking leads to signicant performance boosts (as much as a 12% dierence) c ompared to the Kalman IMM lter prov ides rel- ative small performance improvements. However, the IMM lter st ill always outperforms the Kalman lter, and helps to resolve certain ch allenging track- ing scenarios. One example is shown in Fig. 9. With the incorpora tion of IMM lter and spatiotemporal track linking, our system achieved ov erall tracking validity of 92.5% for dataset A, 86.9% for dataset B, and 90.9% fo r dataset C. It achieved overall division tracking ratios of 100% for data set A, 86.3% for dataset B, and 88.1% for dataset C. A visualization of the automatically tracked trajectories o fm o r et h a n4 0 0 0 AE stem cells across 256 frames is provided in Figure 10, and a visu alization of the tracking result for MG-63 cells is shown in Figure 11. 5.3 Lineage Construction One application of the tracking system is to automatically rec onstruct cell lineage maps, which is especially important for stem cell resear ch. In addition 34Table 3 Summary of tracking validity and division tracking accurac y of the automated track- ing results as compared with manual tracking. Tracking Validity Sequences Kalman IMM IMM + cells, m etrics such as sym- metry and division times can also be derived from lineage maps. S ymmetry, which is dened as the mitotic fraction, is a measure of the cap ability of a stem cell to divide and produce daughter cells that are essentia lly identical to the mother, thus representing self-renewal (Deasy and Huard, 20 02). And, the division time, which is dened as the lapsed time between cytok inetic events, is a key parameter in determining the expansion rate of stem cel l populations. For example, these metrics can be used in predictive models of st em cell popu- lation growth during cell culture expansions (Deasy and Huard, 2002), as well as the design and optimization of subculturing strategies. We utilized the system to construct the lineage maps for the enti re populations of AE stem cells in dataset B and of MG-63 cells in dataset C. Our syste m correctly constructed 62.4% of the lineage trees for AE stem cel ls and 68.3% 35Fig. 11. Automatically-tracked MG-63 cell trajectories. The yellow and blue dashed lines indicate the location of the printed growth-factor pat tern. Red ellipses indicate cell division. Cyan squares indicate dead cells. Yellow squ ares indicate mitotic or apoptotic cells. Cells inherit the colors of their farthest ancestors. (a) A sample frame with cell centroids overlaid. (b) Magnied view of the highl ighted region in (a) with automatically tracked cell trajectories overlaid. (c) and (d) 2-D and spatiotemporal rendering of the automatically tracked cell trajectories. for MG-63 cells as measured in the selected regions of interest ( see Section 3.4); Fig. 12 shows samples of the correctly constructed lineag e trees with cells undergoing multiple divisions. In general, achieving h igher accuracy is challenging since a single tracking error will invalidate the entire lineage tree that the cell belongs to. However, alternative approaches fo r mitosis/apoptosis event detection (Li et al., 2008) and spatiotemporal image pr ocessing tech- niques (Padeld et al., 2006a) could potentially improve li neage tracking ac- curacy. Increasing the image acquisition rate would be anothe r possibility to 36reduce ambiguities and hence increase tracking accuracy. We also emphasize that acceptable accuracy levels required in various experi ments, using large and dense cell populations, will likely vary depending on the sp ecic biological question of AE cells (top ) and MG-63 cells (bottom) constructed based on automated tracking results. Green line segments indicate the relative migration distances, where a longer l ine segment suggests a longer migration distance up to the current time point. Blac k arrows indicate cell departure. Blue crosses indicate cell death. Texts on the li neage lines show the division times. 5.4 Computation Time All of the above experiments were conducted on a computer with a 2.66 GHz Intel Xeon processor and 4 GB memory, running 64-bit Gentoo Linu x operat- ing system. Our system runs at an average speed of 90 frames/hour for tracking approximately 3000 cells in a 1280 \u00d71024 pixels/frame image sequence. The 37most time consuming computation step is the level set evolution. 6C o n c l u s i o n We developed and validated an automated system capable of simul taneously tracking thousands of individual cells in dense cell populati ons in phase con- trast microscopy image sequences. The system employs a modular desi gn, which integrates an ecient cell detector, a topology-const rained geometric active contour tracker, a biologically relevant IMM motion lter, and spa- trajectory optimization. Our system enables aut omatic quanti- cation of cell migration, proliferation, apoptosis, and const ruction of cell lin- eage maps, which facilitates the analysis of massive biological datasets. For future work, we will focus on further improving tracking acc uracy for auto- mated cell lineage construction, and applying the system to tac kle challenging biological problems. AT w o - C y c l e F a s t L e v e l S e t A l g o r i t h m Algorithm 4 provides the pseudocode of the fast dual-cycle leve l set algorithm described in Section 3.3.3. Figure A.1 illustrates the key steps of the algorithm. Fig. A.1. Illustration of fast level set initialization, ev olution, and nalization. The input to the algorithm is the region labeling map k1(x, y)f o rf r a m e k1; the output is the evolved labeling map k(x, y)f o rf r a m e k. There are three parameters: the maximum iterations of the main loop (Tmax), the 38Algorithm 4 : Fast Dual-Cycle Level Set Evolution Input : region labeling (16) foreach (x, end // main met then stoptrue do of for update cycle ( U), and the number of iterations for the regulation cycle ( V).UandVcontrols the relative strength of regulation, which replace the parameter in Equation (11). We set Tmax=5 0 0 , U=3 , andV= 1 in all the experiments. 39The is satised n d3 )i sa p p r o x i m a t e db y : G= 121 242 121 . (A.1) N(Line 4) denotes the {nNk1|nN4(x, SwitchIn ,UpdateInterior ,SwitchOut ,a n d UpdateExterior , which are required by the dual-cycle algorithm, are listed i n Algorithms 5, 6, 7, and 8. Algorithm 5 : Procedure SwitchIn foreach (x, y)Lout(n)do ifTr(x, remove ( x, y)f r o m Lout(n)a n da d di tt foreach ( x, y)f r o m Lin(n)a n d m Lout(n);(x, y)3 40BE M - I M M P a r a m e t e r E s t i m a t i o n The unknown parameters are denoted by {Qi,R,i 0}. Our objective is to estimate the parameters and the hidden states S={s0,. . . ,sK}based on the measurements Z={z2,. . . ,zK}. We make the index of the measurement sequence to start from 2 for the convenience of notation. The initial state s0 is obtained using the rst three measurements {z2,z1,z0}. The EM algorithm maximizes |\u00b7|denotes matrix determinant. The maximization of log P(S,Z|)w i t h respect to the unknown parameters is a chicken-and-egg problem since the system states Sare also unknown. The EM algorithm solves this problem by iterating between two steps: expectation (E) and maximization (M). B.1 E Step The E step nds the expected value of the complete-data log lik elihood with respect to the unknown states S, given the observed data Zand the current parameter estimates old: Q(|old)=EbracketleftBig from the ones computed by the forward-time IMM lter in that they depend on past as well a sfuture observations. To obtain these estimates, the xed-interval IMM sm oother in (Helmick et al., 1995) is utilized. The algorithm uses two IMM lters. One of the lters propagates in the forward-time direction, and pr oduces estimates sj k andj kas given previously. The other lter propagates We refer the reader to (Helmick et al., 1995) for details on the backward-t ime IMM lter. The xed-interval IMM smoother combines the forward and back ward ltered outputs to obtain smoothed estimates according to the followi ng procedure. Step 1: j=rsummationdisplay i=1pjiji k|k+1+j k), (B.9) where N(\u00b7) denotes a ltered model probability. B.2 M Step The M-step of the EM algorithm re-estimates the unknown parame ters by maximizing the expectation computed in the rst step, i.e., new=m a x Q(|old). (B.12) By taking the partial derivatives of Qwith respect to ( Qi)1andR1,a n d setting the respective result to maximization steps are computed repeate dly until the relative absolute change of the expected log likelihood is be low a threshold. Each iteration is guaranteed to increase the log likelihood, and the algorithm will converge to a local maximum of the log likelihood functi on. References Al-Kofahi, O., Radke, R. J., Goderie, S. K., Shen, Q., Temple, S., Roysam, B., Feb. 2006. Automated cell lineage construction: A rapid metho d to analyze clonal development established with murine neural progenito r cells. Cell Cycle 5 (3), 327-335. Appel, K., Haken, W., 1977a. Every planar map is four colorable , Part I: Discharging. Illinois J. Math 21, 429-490. Appel, K., Haken, W., 1977b. Every planar map is four colorable , Part II: Reducibility. Illinois J. Math. 21, 491-567. 43Bahnson, A., Athanassiou, C., Koebler, D., Qian, L., Shun, T., Sh ields, D., Yu, H., Wang, H., Go, J., Cheng, T., Houck, R., Cowsert, L., Apr. 2005. Au- tomated measurement of cell motility and proliferation. BMC Cell Biology 6( 1 9 ) . Bao, Z., Murray, J. I., Boyle, T., Ooi, S. L., Sandel, M. J., Wa terston, R. H., Feb. 2006. Automated cell lineage tracing in caenorhabditis elegans. Pro- ceedings of the National Academy of Sciences 103 (8), 2707-271 2. Berkelaar, M., Dirks, J., Eikland, K., Notebaert, P., 2007. lp solve: A mixed integer linear programming (MILP) solver. URL http://sourceforge.net/projects/lpsolve Bishop, C. M., 2007. Pattern Recognition and Machine Learnin g. Springer. Blom, H. A. P., Dec. 1984. An ecient lter for abruptly changing systems. In: Proc. 23rd IEEE Conference on Decision and Control. pp. 65 6-658. Braun, V., Azevedo, R. B. Leroi, A. M., Meinzer, H.-P., 2003. ALES: Cell lineage analysis and mapping o f develop- mental events. Bioinformatics 19 (7), 851-858. Brox, T., Weickert, J., 2006. Level set segmentation with mult iple-regions. IEEE Trans. Image Processing 15 (10), 3213-3218. Bunyak, F., Palaniappan, K., Nath, S. K., Baskin, T. I., Dong, G ., Apr. 2006. Quantitative cell motility for in vitro wound healing using l evel set-based contour tracking. (ISBI). pp. 1040-1043. Campbell, P. G., Miller, E. D., Fisher, G. W., Walker, L. M., We iss, L. E., Nov. 2005. Engineered spatial patterns of FGF-2 immobilized on b rin direct cell organization. Biomaterials 26, 6762-6770. Canny, J., Nov. 1986. A computational approach to edge detect ion. IEEE Trans. Pattern Anal. Machine Intell. 8, 679-698. Caselles, V., Kimmel, R., Sapiro, G., 1997. Geodesic active cont ours. Int. J. Computer Vision 22 (1), 61-79. Cates, J. E., Lefohn, A. E., Whitaker, R. T., Sep. 2004. GIST: An i nterac- tive, GPU-based level set segmentation tool for 3D medical image s. Medical Image Analysis 8, 217-231. Cheng, Y., Aug. 1995. Mean shift, mode seeking, and clustering. IE EE Trans. Pattern Anal. Machine Intell. 17 (8), 790-799. Chopp, D. L., May 1993. Computing minimal surfaces via level se t curvature flow. Journal of Computational Physics 106, 77-91. Cremers, D., Rousson, M., Deriche, R., 2007. A review of statistic al approaches to level set segmentation: Integrating color, texture, motio n and shape. Int. J. Computer Vision 72 (2), 195-215. Deasy, B., Huard, J., 2002. Gene therapy and tissue engineering b ased on muscle-derived stem cells. Current Opinion in Molecular Thera peutics 4, 382-389. Debeir, O., Ham, P. V., Kiss, R., Decaestecker, C., Jun. 2005. Trac king of migrating cells under phase-contrast video microscopy with co mbined Med. Imag. 24, 697-711. 44Doucet, A., Ristic, B., Jul. 2002. Recursive state estimation for multi- ple switching models with unknown transition probabilities. I EEE Trans. Aerosp. Electron. Syst. 38 (3), 1098-1104. N., Olivo Zimmer, C., Sep. 2005. Segmenting and tracking fluorescent ce lls in dynamic 3-d microscopy with coupled active surfaces. IEEE Trans. Image P rocessing 14 (9), 1396-1410. Feng, H., Castanon, D. A., Karl, W. C., Jul. 2001. A curve evoluti on approach for image segmentation using adaptive flows. In: Proc. IEEE Int. Conf. Comp. isan, M., Olivo-Marin, J.-C., May 2006. Multiple particle tracking i n3 - D + tm i - croscopy: Method and application to the tracking of endocyto sed quantum dots. IEEE Trans. Image Processing 15 (5), 1062-1070. Godinez, W. J., Lampe, M., W orz, S., M uller, B., Eils, R., Rohr , K., Apr. 2007. Tracking of virus Rivlin, E., Rudzsky, M., Oct. 200 1. Fast geodesic active contours. IEEE Trans. Med. Imag. 10 (10), 1467-1475. Gordon, N. J., Salmond, D. J., Smith, A. F. M., Apr. 1993. Novel app roach to nonlinear/non-Gaussian Bayesian state estimation. IEE Proce edings-F 140 (2), 107-113. Han, X., Xu, C., Prince, J. L., Jun. 2003. A topology preserving le vel set method for geometric deformable models. IEEE Trans. Pattern An al. Ma- chine Intell. 25 (6), 755-768. Helmick, R. E., Blair, W. D., Homan, S. A., Nov. 1995. Fixed-inte rval smoothing for Markovian switching systems. IEEE Trans. Inform. Th eory 41 (6), 1845-1855. Herman, S. M., 2002. A particle ltering approach to joint passi ve radar track- ing and target classication. Ph.D. thesis. Huang, S., Law, P., Francis, K., Palsson, B. O., Ho, A. D., Oct. 1999. Sym- metry of initial cell divisions among primitive hematopoiet ic progenitors is independent of ontogenic age and regulatory molecules. Bl ood 94 (8), 2595-2604. Huang, X., Metaxas, D., Chen, T., Jun. 2004. Metamorphs: Deforma ble shape and texture models. In: Proc. IEEE Computer Society Conferen ce on Com- Pattern Recognition (CVPR). Vol. I. pp. 496-50 3. Jilkov, V. P., Li, X. R., Jun. 2004. Online Bayesian estimation of transition probabilities for Markovian jump systems. IEEE Trans. Signal Pr ocessing 52 (6), 1620-1630. Kalman, Rudolph, E., 1960. A new approach to linear ltering and predic- tion problems. Transactions of the ASME - Journal of Basic Engine ering 82 (Series D), 35-45. Kanade, T., Li, K., Oct. 2005. Tracking of migrating and prol iferating cells in phase-contrast microscopy imagery for tissue engineering. In: P roc. Com- 45puter Vision for Biomedical Image Applications Workshop. p. 24. Kirubarajan, T., Bar-Shalom, Y., Pattipati, K. R., Jan. 2001 . Multiassign- ment for tracking a large number of overlapping objects [and application to broblast A., Kniss, J., Hansen, C., Whitaker, R., Jul. 2004. A stream ing narrow- band algorithm: Interactive computation and visualization of level sets. IEEE Trans. Visual. Comput. Graphics 10, 422-433. Li, K., Chen, M., Kanade, T., Oct. 2007. Cell population trac king and lineage construction with spatiotemporal context. In: Proc. Medical Image Com- puting and Comp.-Assisted Intervention. Springer, in press. Li, K., Kanade, T., Chen, M., Miller, E. D., Weiss, L. E., Campbe ll, P. G., May 2008. Computer vision tracking of stemness. In: Proc. IEEE Int'l. Symp. Biomed. Imaging. In press. Li, K., Miller, E. D., Weiss, L. E., Campbell, P. G., Kanade, T., Jun. 2006. On- line tracking of migrating and proliferating cells imaged w ith c ompetition: A level set extension of region competition to multiple region i mage partition- ing. Computer Vision and Image Understanding 101, 137-150. Meyer, F., 1979. A threshold selection method from gray level h istograms. The Journal of Histochemistry and Cytochemistry 27 (1), 128-135. Miki, T., Lehmann, T., Cai, H., Stolz, D. B., Strom, S. C., Aug. 2 005. Stem cell characteristics of amniotic epithelial cells. Stem Cell s. Miller, E. D., Fisher, G. W., Weiss, L. E., Walker, L. M., Campbel l, P. G., Apr. 2006. Dose-dependent cell growth in response to concentration modulated patterns of FGF-2 printed on brin. Biomaterials 27, 2213-2 221. Mukherjee, D. P., Ray, N., Acton, S. T., Apr. 2004. Level set analy sis for leukocyte detection and tracking. IEEE Trans. Image Processin g1 3 ,5 6 2 - 572. Nath, S., Palaniappan, K., Bunyak, F., Oct. 2006. Wound cell se gmentation using coupled level sets and graph-vertex coloring. In: Proc. Image pp. 1 01-108. with curva ture dependent speed: Algorithms based on Hamilton-Jacobi formulations. Jour. Comp. Phys. 79, 12-49. Otsu, N., Mar. 1979. A threshold selection method from gray level histograms. IEEE Trans. Syst., Man, Cybern. 9, May 2008. Spatio-temp oral cell seg- mentation and tracking for automated screening. In: Proc. IE Int'l. Symp. Biomed. Imaging. In press. Padeld, D., Rittscher, J., T., Thomas, N., Roysam, B. , Apr. 2006a. Spatio-temporal cell cycle analysis using 3D level set segmenta tion of un- stained nuclei in line scan Roysam, B., Sep. 2006b. S patio- temporal cell cycle phase analysis using level sets and fast march ing meth- ods. In: Proc. Workshop on Microscopic Image Analysis with Applica tions in Biology. pp. 2-9. URL http://www.miaab.org/miaab-2006-papers.html Pan, Y., Birdwell, J. D., Djouadi, S. M., Oct. 2006. Ecient im plementation of the Chan-Vese models without C. H., Steiglitz, K., Jan. 1998. Combinatori al Optimization: Algorithms and Complexity. Dover Publications. Patrick, C. W., Wu, X., 2003. Integrin-mediated preadipocyt e adhesion and migration on laminin-1. Annals of Biomedical Engineering 31 ,5 0 5 - 5 1 4 . Perona, P., Malik, J., Jul. 1990. Scale-space and edge detect ion using anisotropic diusion. IEEE Trans. ) , 629-639. Phillippia, J. A., Miller, E. D., Weiss, L. E., Huard, J., Waggone r, A. S., Camp- bell, P. G., Jan. 2008. Microenvironments engineered by ink jet bioprinting spatially direct adult stem cells toward muscle- and bone-like tions. Stem Cells 26 (1), 127-134. Ristic, B., Arulampalam, S., Gordon, N. J., Feb. 2004. Beyond th eK a l m a n Filter: Particle Filters for Tracking Applications. Artech Hou se Publishers. S\u00b4 egonne, F., Dec. 2005. Segmentation of medical images und er topological constraints. Ph.D. thesis. Sethian, J. A. (Ed.), Jan. 1999. Level Set Methods and Fast Marc hing Meth- ods: Evolving Interfaces in Computational Geometry, Fluid M echanics, Computer Vision, and Materials Science, 2nd Edition. Cambrid ge Univer- sity Press. Shi, Y., Karl, W. C., Mar. 2005a. A fast level set method without so lving PDEs. l. II. Philadelphia, PA, pp. 97-100. Shi, Y., Karl, W. C., Jun. 2005b. using leve l Jul. 2007. Rao-blackwellized marginal particle ltering for bioimaging. In: Niessen, W., U. E., 1978. A quasi-Bayes sequential proc edure for mixtures. Journal of the Royal Statistical Society, Series B 4 0( 1 ) ,1 0 6 - 1 1 2 . Sternberg, S., Jan. 1983. Biomedical image processing. IEEE C omputer 16 (1), 22-34. Vincent, L., Soille, P., Jun. 1991. Watersheds in digital space s: An ecient algorithm based on immersion simulations. IEEE Trans. Pattern Ana l. Ma- 47chine Intell. 13 (6), 583-598. Weiss, L. E., Amon, C., Finger, S., Miller, E., Romero, D., Verdi nelli, I., Walker, L., Campbell, P., 2005. Bayesian computer-aided exp erimental de- sign of heterogeneous scaolds for tissue engineering. Compute r Aided De- sign 37, 1127-1139. Yang, F., Mackey, M. A., Ianzini, F., Gallardo, G., Sonka, M., Oct. 2005a. Cell segmentation, tracking, and mitosis detection using temp oral context. In: Duncan, J. S., Gerig, G. (Eds.), Proc. Medical Image Compu ting and Comp.-Assisted Intervention. Vol. I. pp. 302-309. Yang, X., Li, H., Zhou, X., Wong, S., Dec. 2005b. Automated segment ation and tracking of cells in time-lapse microscopy using watershed a nd mean shift. In: of Kalman Filterin g: A Practical Approach, 2nd Edition. American Institute of Aeronautics and Astr onau- tics, Inc. Zhang, B., Zimmer, C., Olivo-Marin, J.-C., 2004. Tracking fl uorescent cells with coupled geometric active contours. In: Proc. 2nd IEEE Int .S y Biomed. Imaging (ISBI). Arlington, VA, pp. 476-479. Zhu, S. C., Yuille, A., Sep. 1996. Region competition: Unifyin g snakes, region growing, and Bayes/MDL for multiband image segmentation. IEE E Trans. Pattern Anal. Machine Intell. 18 (9), 884-900. V., Guill'en, N., Oliv o-Marin, J.-C., Oct. 2002. Segmentation and tracking of migrating cells in v ideomicroscopy with parametric active contours: A tool for cell-based drug te sting. IEEE Trans. Med. Imag. 21 (10), 1212-1221. Zimmer, C., Olivo-Marin, J.-C., Nov. 2005. Coupled parametr ic active con- tours. IEEE Trans. Pattern Anal. Machine Intell. 27 (11), 1838- 1842. 48 "}