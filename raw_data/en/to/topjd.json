{"title": "PDF", "author": "PDF", "url": "https://www.routledge.com/rsc/downloads/British_Science_Week.pdf", "hostname": "PDF", "description": "PDF", "sitename": "PDF", "date": "PDF", "cleaned_text": "British Science Week A CRC Press Freebook A CRC Press FREEBOOKTABLE OF CONTENTS 0 0 0 0 0 0 0 0 0 0 0 Introduction 1 Functions, Scripts, and Good Programming Practice 2 Engineering and Technology Professions 3 What causes disease? 4 Basic Design Analysis 5 Welcome to Computer Programming 6 Introduction to Industrial Engineering 7 Counting and Proofs 8 Psychiatry 9 Body Sizes 10 The Art of Programming Mechanics READ THE LATEST ON SCIENCE, TECHNOLOGY, ENGINEERING AND MEDICINE WITH THESE l(EY TITLES Fifth edition An introduction to the mechanisms of disease Jeffrey L. Nyhoff Larry R. Nyhoff (2..cRCPress -\u00b7\u00b7- An Introduction to Mechanical !nginering Part 1 INTRODUCTION TO ERGONOMICS I HUMAN FACTORS ENGINEER/NG Seventh Edition withunity VISIT WWW.CRCPRESS.COM TO BROWSE FULL RANGE OF STEM TITLES SAVE 20% AND FREE SHIPPING WITH DISCOUNT CODE BSW18 Introduction British Science Week, run by the British Science Association, is a ten-day celebration of science, technology, engineering and maths, featuring entertaining and engaging events and activities across the UK for people of all ages. British Science Week provides a platform to stimulate and support teachers, STEM professionals, science communicators and the general public to produce and participate in STEM events and activities. CRC Press is a premier global publisher of science, technology, and medical resources who also aim to provide a platform and products to support teachers and professionals. We offer unique, trusted content by expert authors, spreading knowledge and promoting discovery worldwide. We aim to broaden thinking and advance understanding in the sciences, providing researchers, academics, professionals, and students with the tools they need to share ideas and realize their potential. This FreeBook has been put together to show the range of subjects and content CRC Press can provide to support teachers and professionals within the STEM community. 4 FUNCTIONS, SCRIPTS, AND GOOD PROGRAMMING PRACTICE FROM 'PROGRAMMING WITH MATLAB FOR SCIENTISTS: A BEGINNER'S INTRODUCTION' Programming A Introduction Eugeniy E. Mikhailov OCRCPr('\\\\ This chapter is excerpted from Programming with MATLAB Scientists: A Beginner's Introduction by Eugeniy E. Mikhailov. \u00a9 2018 Taylor & Francis Group. All rights reserved. 0Learn more Q CHAPTER 4 Functions, Scripts, and Good Programming Practice The art of programming is the ability to translate from human notat ion to one that a com- puter understands . In the spirit of a gradual increase of complexity, we always start with mathematical notation, which serves as the bridge between human langu age and computer (programming) language. Essentially, mathematical notati on is the universal language from which we can always go to an arbitrary programming language, including MATLAB. This chapter addresses functions, scrip ts, and basic good programming practices. It begins with some motivational examples and shows how to run test cases to check your solutions, making sure they a re realistic. We conclude the chapter by discussing recursive and anonymous functi ons. 4.1 Motivational Examples Before we jump to functions and scripts, we will cover two examples: th e rst from personal nances and the second from physics. 4.1.1 Bank interest rate problem Suppose someone desires to buy a car with price Mctwo years from now, and this person currently has a starting amount of money Ms. What interest rate is required to grow the starting sum to the required one? As usual, our rst job is to translate the problem to the language of mathe- matics and then convert it to a programming problem. Usually, the inter est rate is given as a percentage ( p) by which the account grows every year. Well, per- centages are really for accountants, and everyone else uses fractions of 100, that is, r=p/100, so we say that our initial investment grows by 1 +revery year. Thus, in two years it will grow as (1+r)2, and we nally can form the following equation: Ms\u00d7(1+r)2=Mc Let's go back to using fractions. Ms\u00d7(1+p/100)2=Mc Now, we expand the equation: 1+2p 100+p2 Programming with MATLAB for Introduction With the following relabeling px, 1/1002a, 1/50b, and(1Mc/Ms) c, the canonical quadratic equation is easily seen: ax2+bx+c=0 (4.1) For now, we will postpone the solution of this equation and see one mo re problem where we need to solve such an equation as well. 4.1.2 Time of flight problem A reworks pyrotechnician would like to ignite a charge at the height ( h) to max- imize the visibility of the flare and to synchronize its position with oth er flares. The rework's shell leaves a gun with vertical velocity ( v). We need to determine the delay time to which we must set the ignition timer, that is, nd how lo ng it takes for the shell to reach the desired height ( h) with respect to the ring position (see Figure 4.1 ). Again, rst we need to translate the problem from the language of physics to mathematics. Assuming that the gun is not too powerful, we can treat the acceleration due to gravity ( g) as a constant at all shell heights. We will also neglect air resistance. The shell's vertical position ( y) versus flight time ( t) is governed by the equation of motion with constant acceleration and expre ssed as y(t) =y0+vtgt2/2, where y0is the height of the shell at the ring time, that is, y(0) =y0. So, we need to solve the following equation: h=y(t)y0 Substituting known parameters, we obtain h=vtgt2/2 (4.2) Finally, we convert this equation to the canonical quadratic Equation 4.1 with the following substitutions: tv y0 Figure 4.1 The rework rocket's height dependence on time.Functions, Scripts, and Good Programming Practice 43 4.2 Scripts So far, when we interacted with MATLAB, we typed our commands in the com- mand window in sequence. However, if we need to execute repetitive se quences of commands, it is much more convenient and, more importantly, less error prone to create a separate le with such commands, that is, the script le. The name of the script le is arbitrary, *but it should end with .mto mark this le as executable by MATLAB. The script le by itself is nothing but a simple text le, which can be modied not only by MATLAB's built-in editor but b y any text editor as well. Let's say we have a script le labeled 'script1.m' . To execute its content, we need to type its name without .min the command prompt, that is, script1 . MATLAB will go over all commands listed in the script and execute it as i f we were typing them one by one. An important consequence of this is that i t will modify our workspace variables, as we will soon see. 4.2.1 Quadratic equation solver script After the formal denitions of a script, mentioned previously, we addres s our problem of solving the quadratic equation ax2+bx+c=0 with the script (i.e., the program). Before we start programming, we still need to spend time in the realm of ma th- ematics. The quadratic equation has in general two roots, x1and x2, which are given by the following equation: x1,2=b\u00b1 b24ac 2a The MATLAB-compatible representation of this equation is shown in the follow- ing listing, which we will save into the le 'quadSolvScrpt.m' . Listing 4.1 quadSolvScrpt.m equation b *x + c = 0 x1 = ( - b - sqrt( / (2 *a) *Though a script lename is arbitrary, it is a good idea to choose a l ename that reflects the purpose of the script.44 Programming with MATLAB for Scientists: A Beginner's Introduction Words of wisdom Put many comments in your code, even if you are the only intended reader. Trust the author; about two weeks after completion of your script, you like ly will not be able to recall the exact purpose of the code or why a particu lar programming decision was made. Now, let's dene coefcients a,b, and cand run our script to nd the roots of the quadratic equation. We need to execute the following sequence: >> a = 2; b =-8; c = 6; >> quadSolvScrpt x1 = 1 x2 = 3 Notice that MATLAB creates variables x1andx2in the workspace and also dis- plays their values as the output of the script. As usual, if we want to sup press the result of any MATLAB statement execution, we need to screen the statem ent by terminating it with ;. If we would like to nd the solution of the quadratic equation with differe nt coefcients, we just need to redene them and run our script again. >> a = 1; b =3; c = 2; >> quadSolvScrpt x1 = -2 x2 = -1 Note that our old values of x1andx2are overwritten with new ones. The ability of scripts to overwrite the workspace variables can be quite handy . For example, one might want to create a set of coefcients or universa l constants for further use during a MATLAB session. See the following sample sc ript, which sets some universal constants. Listing 4.2 universal_constants.m (available at http://physics.wm.edu/ programming_with_MATLAB_book/./ch_functions_and_scr ipts/code/ universal_constants.m ) % the following are in SI units g = 9.8; % acceleration due to gravity c = 299792458; % speed of light G = 6.67384e-11; % gravitational constant We can use this script to easily nd, for example, what height the re work's shell (which we discussed in Section 4.1.2 ) will reach at a given time t=10 s,Functions, Scripts, and Good Programming Practice 45 assuming that the initial vertical velocity is v=142 m/s. Since gis dened in the script, to calculate the height according to Equation 4.2 , all we need to do is to execute the following: >> universal_constants >> t=10; v= 142; >> h = v *t - (g *t^2)/2 h = 930 4.3 Functions In general, it is considered bad practice to use scripts, as their abili ty to modify workspace variables is actually a downside when working on a complex pr ogram. It would be nice to use code such that after execution, only the resul ts are provided without the workspace being affected. In MATLAB, this is done via function . A function is a le that contains the but strongly recommended function description set of expressions of the function body end Note that the le name must end with '.m' , and the leading part of it must be the same as the function name, that is, 'function _name.m' . Words of wisdom White space, consisting of tabulations and spaces in front of any line, is purely cosmetic but greatly improves the readability of a program. A function might accept several input arguments or parameters. Their n ames can be arbitrary, but it is a good idea to give them more meaningful names, th at is, not just arg1 ,arg2 solver could have much better names for input parameters than a,b, andc. Similarly, a function can return several parameters, but they must be listed in the square bracke ts[] after the function keyword. Their order is completely arbitrary, like assignment names. Again, it is much better to use something like x1andx2instead of out1 andout2 . The only requirement is that the return parameters need to be assigned somewhere in the body of the function, but do not worry\u2014MATLAB will prom pt you if you forget about this.46 Programming with MATLAB for Scientists: A Beginner's Introduction Words of wisdom By the way, many built-in MATLAB functions are implemented as '.m' les following these conventions. You can learn good techniques and tricks of MATLAB by reading these les. 4.3.1 Quadratic equation solver function Usually, when I develop a function, I start with a script, debug it, and the n wrap it with the function related statements. We will modify our quadratic equation solver script to become a valid MATLAB function. 4.3 % solve quadratic equation a *x^2 + b *x + c = 0 x1 = ( - b - sqrt( *a*c ) ) / (2 *a); end Note that we need to save it to 'quadSolverSimple.m' . Now, let's see how to use our function. >> a = 1; b =3; c = 2; >> x1 = -2 x2 = -1 Now, we highlight some very important features of MATLAB functions. >> x1=56; >> clear x2 >> a = 1; b x1 x1 = 56 >> x2 Undefined function or variable 'x2'.Functions, Scripts, and Good Programming Practice 47 Note that at the very rst line, we assign x1to be 56, and then at the very end, we check the value of the x1variable, which is still 56. As our function listing shows, MATLAB assigns the x1variable as one of the roots of the quadratic equa- tion inside of the function body. However, this assignment does not aff ect thex1 variable in the workspace. The second thing to note is that the function as signed xx1andxx2variables in our workspace; this is because we asked to assign these variables. This is another feature of MATLAB functions\u2014they assign va riables in the workspace in the same order and to variables that the user asked for dur- ing the function call. Notice also that since we clear x2before the function call, there is still no assigned x2variable after the execution of the function, though thequadSolverSimple function uses it internally for its own needs. Finally, notice that the function clearly did not use the assigned value of c = 200 . Instead, it used the value of cc = 2 , which we provided as the third argument to the executed function. So, we note that the names of parameters during the function cal l are irrelevant, and only their position is important. We can simply remember this: what happens in the function stays in the function , and what comes out of the function goes into the return variable placeho lders. 4.4 Good Programming Practice If this is your rst time studying programming, then you can skip this section. Come back to it later, once you are fluent with the basics of functions and scripts. Here, we discuss how to write programs and functions in a robust and manageable way based on our simple quadratic equation solver functi on. 4.4.1 Simplify the code Let's have a look at the original quadSolverSimple function Listing 4.3 . At rst glance, everything looks just ne, but there is a part of the code that repe ats twice, that is, calculation of b^24*a*c. MATLAB wastes cycles to calculate it a second time, and, more importantly, the expression is the denition of the discri minant of our equation, which can be very useful (we will see it very soon). Addi tionally, if we nd a typo in our code, it is very likely that we will forget to x it at the second occurrence of such code, especially if it is separated by more than a few lines. So, we transform our function to the following: Listing 4.4 quadSolverImproved.m % solve quadratic equation a *x^2 + b *x + c = 0 D = b^2 - 4 *a*c; x1 = ( - (2 for Scientists: A Beginner's Introduction 4.4.2 Try to foresee unexpected behavior This looks much better, but what if our discriminant is negative? Then , we cannot extract the square root, and the function will fail (technically, we can do it, but this involves manipulation with complex numbers, and we pretend that this is illegal). Therefore, we need to check whether the discriminant is positive and produce a meaningful error message otherwise. For the latter, we will use MATLAB' serror function, which stops program execution and produces a user-dened message in the command window. Listing 4.5 quadSolverImproved2nd.m % solve quadratic equation a *x^2 + b *x + c = 0 D = b^2 - 4 *a*c; if( D < 0 ) error( 'Discriminant is negative: cannot find real roots' ); end x1 = ( - b - ) ) (2 D ) ) / (2 *a); end 4.4.3 Run test cases At this point, our quadratic solver looks quite polished, and nothing ca n possibly go wrong with it. Right? As soon as you come to this conclusion, a loud be ll should ring inside of your mind: I am getting too comfortable; thus, it is time to che ck. Never release or use a code which you did not check .* *This is true both for your programs and especially for code that you ha ve received from others, even if this source is very trustworthy and reputable. You might think that big software companies have tons of experience and produce \"bulletproof\" quality code. Th eir experience does not guaran- tee error-free code. Absolutely all software packages that this author has seen in his life come with a clause similar to this: \"THERE IS NO WARRANTY FOR THE PROGRA M. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SH OULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SE RVIC- ING, REPAIR OR CORRECTION\" (excerpt from GPL license). It come s in capital letters, so we should take it seriously. Also, recall the MATLAB license agree ment, which you agreed to at the beginning of MATLAB usage. MATLAB expresses it in a slightly l ess straightforward way, but the meaning is the same: \"any and all Programs, Documentation, a nd Software Maintenance Ser- vices are delivered 'as is' and MathWorks makes and the License e receives no additional express or implied warranties.\" This seems like a very long paragraph with more emphasized phra ses than in the rest of this book; it also seems to be irrelevant to the art of programming. But this author has spent a lot of his time pulling hair from his head trying to see mistakes in hi s code and nding the problem rooted in someone else's code (I do not imply that I produce error-free c ode). So, trust but verify everyone.Functions, Scripts, and Good Programming Practice 49 Equipped with this motto, we will start with testing our own code; this is commonly called running test cases . Ideally, testing should cover all possible input parameters, although this is clearly impossible. We should check tha t our program produces the correct answer in at least one case, and we need to verif y this answer in a somewhat independent way. Yes, often it means the use of paper and pencil. We also need to poke our program with somewhat random input parameters to see how robust it is. First, we double check the correctness of the function. We will use simp le enough numbers that we can do it in our head. Actually, we already did it in previous test runs during this chapter, but you can never have enough tests . So, we will do it one more time. >> a = 1; b = -3; c = -4; >> [x1,x2] = quadSolverImproved2nd(a, b, c) x1 = -1 x2 = 4 It is easy to see that (x4)(x+1) = x23x4=0, that is, the produced roots, indeed, satisfy the equation with the same a=1,b=3, and c=4 coefcients. By the way, do not use the same code for correctness verication; use some independent method . Now, we check the case when the discriminant is negative: >> a = 1; b = 3; c = 4; >> [x1,x2] = quadSolverImproved2nd(a, b, c) Error using quadSolverImproved2nd (line 5) Discriminant is negative: cannot find real roots Excellent! As expected, the program terminates with the proper error messa ge. 4.4.4 Check and sanitize input arguments One more test: >> a = 0; b = 4; c = 4; >> [x1,x2] = b, c) x1 = -Inf x2 = NaN Wow! There is no way that an equation with a=0 (simplied to bx+c=4x+4= 0) has one root equal to innity and the other root being NaN, which stands for \"not a number.\" We do not need a calculator to see that the root of this equation is 1. What is going on?50 Programming with MATLAB for Scientists: A Beginner's Introduction Let's closely examine our code in Listing 4.5 ; the problem part is division by 2a, which is actually 0 in this case. This operation is undened, but, un fortunately, MATLAB is trying to be smart and not produce an error message. Sometimes, this is welcome behavior, but now it is not. So, we need to be in control: intercept the case of a=0 and handle it separately, producing solutions x1=x2=c/b. It is easy to see that we need to handle the case a=b=0 as well. So, our nal quadratic solver function will be Listing 4.6 % solve quadratic equation a *x^2 + b *x + c = 0 % ALWAYS check and sanitize input parameters if( (a == 0) & (b == 0) ) error( 'a==0 and b==0: impossible to find roots' ); end if( (a == 0) & (b ~= 0) ) % special case: we essentially solve b *x = -c x1 = x2=x1; else D = b^2 - 4 *a*c;% Discriminant of the equation if( D < 0 ) error( 'Discriminant is negative: no real roots' ); end = ( - - ) ) (2 D ) ) / (2 *a); end end 4.4.5 Is the solution realistic? This was a lot of work to make a quite simple function perform to specic ations. Now, let's use our code to solve our motivational examples. We start with the interest rate problem described in Section 4.1.1 . Suppose that we initially had $10, 000 ( Ms = 10000 ), and the desired nal account value is $20, 000 ( Mc = 20000 ), thus: >> a 1/100^2; = 1/50; c = 1 - 20000/10000; >> [p1,p2] = quadSolverFinal(a, b, c) p1 = -241.4214Functions, Scripts, and Good Programming Practice 51 p2 = 41.4214 At rst glance, everything is ne, since we obtain two solutions for req uired inter- est rate241.4% and 41.4%. But if we look more closely, we realize that ne gative percentage means that we owe to the bank after each year, so the account value will decrease every year\u2014which is opposite to our desire to grow money. What is the reason for such an \"unphysical\" solution? The real me aning of the problem was lost in translation to mathematical form. Once we have th e(1+ r)2term, the computer does not care whether the squared number is negative o r positive, since it produces the valid equation root. But we humans do ca re! We have just learned one more important lesson: it is up to the human to decide whether the solution is valid . Never blindly trust a solution produced by a computer! They do not care about the reality or the \"physics\" of the pr oblem. 4.4.6 Summary of good programming practice Foresee problem spots Sanitize and check input arguments Put a lot of comments in your code Run test cases Check the meaning of the solutions and exclude unrealistic ones Fix problem spots and repeat from the top 4.5 Recursive and Anonymous Functions Before we move on, we need to consider a couple of special function u se cases. 4.5.1 Recursive functions Functions can call other functions (this is not a big surprise; otherwi se, they would be quite useless), and they can call themselves, which is called recursion . If we go into detail, there is a limit to how many times a function can call itsel f. This is due to the limited memory size of a computer, since every function call req uires the computer to reserve some amount of memory space to recall it later. Let's revisit the account growth problem that we discussed in Section 4.1.1 . Now, we would like to nd the account value including interest after a certain number of years. The account value ( Av) after Nyears is equal to the account value in the previous year ( N1) multiplied by the growth coefcient (1+p/100). Assuming that we initially invested an amount of money equal to Ms, we can52 Programming with MATLAB for Scientists: A Beginner's Introduction calculate the nal account value according to Av(N) =/braceleftBigg Ms ifN=0 (1+p/100)\u00d7Av(N1)ifN>0(4.3) This equation resembles a typical recursive function, where the fun ction calls itself to calculate the nal value. The MATLAB implementation of such a func tion is as ipts/code/ accountValue.m ) function Av = accountValue( Ms, p, N) % calculates grows of the initial account value (Ms) % in the given amount of years (N) % for the bank interest percentage (p) % We sanitize input to ensure that stop condition is possible if( N < 0 ) error( 'Provide positive and integer N value' ); end if( N ~= floor ( N ) ) error ( 'N is not an integer number' ); end % Do we meet stop condition? if( N == 0 ) Av = Ms; return ; end Av = (1+p/100) *accountValue( Ms, p, N-1 ); end Let's see how the initial sum Ms=$535 grows in 10 years if the account growth percentage is 5. >> Ms=535; p=5; N=10; accountValue(Ms, p, N) ans = 871.4586 4.5.2 Anonymous functions Anonymous functions look very confusing at rst, but they are useful in cases when one function should call another, or if you need to have a short-te rm-use function, which is simple enough to t in one line.Functions, Scripts, and Good Programming Practice 53 It is easier to start with an example. Suppose for some calculation s you need the following function: g(x) = x2+45. It is clearly very simple and would prob- ably be used during only one session, and thus, there is no point in creating a full-blown .mle for this function. So, we dene an anonymous function. >> g = @(x) x^2 + 45; >> g(0) ans = 45 >> g(2) ans = 49 The denition of the anonymous function ghappens in the rst line of this listing; the rest is just a few examples to prove that it is working properly. Th e@symbol indicates that we are dening a handle *to the function of one variable x, as indi- cated by @(x) , and the rest is simply the function body, which must consist of ju st one MATLAB statement resulting in a single output. An anonymous function can be a function of many variables, as shown here: >> h = @(x,y) x^2 - y + cos(y); >> h(1, pi/2) ans = -0.5708 Anonymous functions are probably the most useful when you want to de ne a function that uses some other function with some of the input parame ters as a constant. For example, we can \"slice\" h(x,y)along the xdimension for h(x,0); >> h1(1) ans = 2 Another useful property of anonymous functions is their ability to us e vari- ables dened in the workspace at the time of denition. >> offset = 10; s = @(x) x + offset; >> clear offset >> s(1) ans = 11 *Handle is a special variable type. It gives MATLAB a way to stor e and address a function.54 Programming with MATLAB for Scientists: A Beginner's Introduction Note that in this transcript, the offset variable was cleared at the time of the sfunction's execution, yet it still works, since MATLAB already used th e value of the variable when we dened the function. We can also evaluate /integraldisplay10 0s(x)dx with the help of MATLAB's built-in function integral : >> integral(s,0,10) ans = 150 Words of wisdom Avoid using scripts. Instead, convert them into functions. This is much safer in the long run, since you can execute a function without worrying that i t may affect or change something in your workspace in an unpredictable way . 4.6 Self-Study Problem 4.1 Write a script that calculates 1+N i=11 xi forN=10 and x=0.1. Use loops as much as you wish from now on. Problem 4.2 Write a script that calculates for N=100 SN=N k=1ak where: ak=1/k2kfor odd you may nd the modfunction useful to check for even and odd numbers.Functions, Scripts, and Good Programming Practice 55 Problem 4.3 Write a function mycos that calculates the value of a cos (x)at the given point xvia the Taylor series up to Nmembers. Dene your function as function cosValue = mycos(x, N) Does it handle well the situation with large xvalues? Take x=10, for exam- ple. How far do you need to expand the Taylor series to get absolute preci sion of 104, what value of Ndo you nd reasonable (no need to state it beyond one signicant digit), and why is this? Problem 4.4 Download the data le 'hwOhmLaw.dat' .*It represents the result of someone's attempt to nd the resistance of a sample via measuring voltage drop ( V), which is the data in the rst column, and current ( I), which is the data in the second col- umn, passing through the resistor in the same conditions. Judging by the number of samples, it was an automated measurement. Using Ohm's law R=V/I, nd the resistance ( R) of this sample (no need to print it out for each point at this step). Estimate the resistance of the sample (i.e., nd the average resistance) and estimate the error bars of this estimate (i.e., nd the standard deviation). For standard deviation, use the following denition: (x) =/radicaltp/radicalvertex/radicalvertex/radicalbt1 N1N i=1(xi\u00afx)2 where: xis the set (vector) of data points \u00afxits average (mean) Nis the number of the points in the set. Do not use standard built-in mean andstd functions in your solution. You need to make your own code to do it. But feel free to test against these MATLAB functions. Note: for help, read MATLAB's std; you might want to know about it. Problem 4.5 Imagine you are working with an old computer that does not have the built- in multiplication operation. Program the mult(x,y) function, which returns the equivalent of x*yfor two integer numbers xandy(either one can be negative, positive, or zero). Do not use the *operator of MATLAB. You can use loops, con- ditions,+, oroperators. Dene your function as function product=mult(x,y) *The le is available at http://physics.wm.edu/programming_with_MATLAB_book/ ./ ch_fitting/data/hwOhmLaw.datENGINEERING AND TECHNOLOGY PROFESSIONS FROM 'INTRODUCTION TO ENGINEERING: AN ASSESSMENT AND PROBLEM SOLVING APPROACH' # This chapter is excerpted from Introduction to Engineering: An Assessment and Problem Solving Approach by Quamrul H. Mazumder. \u00a9 2016 Taylor & Francis Group. All rights reserved. 2 Learn more31 Engineering and Technology Professions CHAPTER OBJECTIVE AND STUDENT LEARNING OUTCOMES After completing the chapter, students will be able to 1.Describe the role of engineers in changing the world and human life. 2.Develop a better understanding of employment outlooks of different engi - neering disciplines in local, regional, national, and global marketplaces. 3.Describe the knowledge, skills, and competencies required for a meaningful engineering career. 4.Describe the roles, responsibilities, challenges, and opportunities associatedwith major engineering disciplines. [ABET outcome h, see Appendix C] 5.Develop understanding of the process to become a registered professionalengineer and need of professional engineering licensure. [ABET outcome f,see Appendix C] 1.1 Engineering and Engineering Technology To design, develop, and support products and services in today's technologically advanced industry, professionals must work together as an engineering team . Primary team members include scientists, engineers, and technologists among others (Figure 1.1). The role and importance of engineering technologist is not clearly understood by many, and therefore, clarification of this role is needed. There are similarities and dif - ferences between engineering technologists and engineers, although they work toward a common goal of engineering problem solving. Engineering technology (ET) education emphasizes on problem solving using hands-on experience, laboratories, and technical skills, preparing students for application-oriented careers in industry such as manu - facturing, after-market service, marketing, and technical sales. Engineering programs typically require additional, higher level mathematics, including multiple semesters of calculus and calculus-based theoretical science courses. ET programs typically focus on algebra, trigonometry, applied calculus, and other courses that are more practical than theoretical in nature.4 Introduction to Engineering According to a national accrediting agency (TAC/ ABET), graduates of baccalaureate- level engineering technology (BET) programs are called engineering technologists , and graduates of associate degree (AS) programs in ET are called engineering technicians . The upper-division coursework of BET programs is designed to provide additional analytical and problem solving beyond those learned at the two-year level. Most BET programs are accredited by TAC/ ABET and are designed to accept appropriate coursework in math, science, and a technical specialization completed at approved AS programs. For ABET accreditation, engineering and ET programs are reviewed and accredited by two separate accreditation commissions, using two separate sets of accreditation criteria: the Engineering Accreditation Commission (EAC) and the Engineering Technology Accreditation Commission (TAC). The following paragraph provides definitions of scientists, engineers, and engineering technologists in engineering careers to shed some light on the similarities and differences among these three professions. 1.1.1 Scientists Engineers working as scientists are the most theoretical of the team members. They typi - cally work in the research and development division of large corporations to develop and improve products and services through innovative technologies. They typically seek ways to apply new discoveries to advance technology for mankind. Most engineering scientists have earned a doctorate in engineering. 1.1.2 Engineers Engineers use the knowledge of science and mathematics gained through engineering education, experience, and practice, applied with judgment, to develop ways to eco - nomically utilize materials and resources to the benefit of mankind. Engineering involves EngineerScientistEngineering technologist FIGURE 1.1 Interrelationship among scientists, engineers, and engineering technologists.5 Engineering and Technology Professions activities such as the conception, design, development, and formulation of new systems and products through the implementation, production, and operation of engineering sys - tems. Engineers often work closely with scientists and technologists in developing new products and technologies. A minimum of four years of study is required to become an engineer. Most BET programs are accredited by EAC/ABET. 1.1.3 Engineering Technologists Engineering technologists are graduates from a bachelor-level program in ET. They apply engineering and scientific knowledge combined with technical skills to support engi - neering activities, especially those application oriented. They typically concentrate their activities on the applied design, using current engineering practices. Technologists in the engineering team play key roles; they are typically involved in product development, man - ufacturing, product assurance, sales, and program management. TAC/ ABET specifies that faculty who teach in these programs have a minimum of a master's degree in engineering or ET or equivalent, or a PE license and a Master's degree. Engineering technicians work with equipment, primarily assembling and testing com - ponent parts of devices or systems that have been designed by others, usually under direct supervision of an engineer or engineering technologist. In order to assemble, repair, or improve technical equipment, engineering technicians work by learning its characteristics, rather than by studying the scientific or engineering basis for its origi - nal design. They may carry out standard calculations, serve as technical sales people, make estimates of cost, assist in preparing service manuals, or perform design-drafting activities. As a group, they are important problem-solving individuals whose interests are directed more to the practical than to the theoretical aspect of a project. They are frequently employed in laboratories and/or manufacturing facilities where they may set up experiments, accumulate scientific or engineering data, and/or service or repair engineering or production equipment. Ishtiaque Amin is a circuit design engineer in the Electrical Systems Group at Nexteer Automotive in Saginaw, Michigan. He has been in this role for four years where his primary responsibilities include design and analysis of embedded electronic applications in electric power steering (EPS) systems. His expertise lies in the areas of magnetic sensors for torque and rotary position-sensing applications. He is also the lead electri - cal design engineer for multiple current and future EPS applications for automotive manufacturers throughout the world. He has won several awards in this position for his commitment to flawless design launches. He is an expert in robust engineer - ing practices for steering applications by holding Design for Six Sigma (DfSS) Black Belt, Six Sigma Green Belt, and Fast X Journeyman certifications. Simultaneously, he serves as a supervisor for student co-ops and interns, assisting them with work-study programs and summer projects. His previous experiences include engineering posi - tions at ArcelorMittal, Cooper Industries, and NewPage Inc. 6 Introduction to Engineering 1.2 Employment Outlook According to Bureau of Labor Statistics of the US Department of Labor, \"Professional and related occupations and service occupations are expected to create more new jobs than all other occupational groups from 2008 to 2018 in addition, growth will be faster among occupations for which postsecondary education is the most significant form of education or training, and, across all occupations, replacement needs will create many more job openings than the job growth.\" Architecture and engineering occupations are expected to add roughly 270,600 jobs, representing a growth rate of 10.3 % over the 2008-2018 period. About 178,300 of these jobs, more than 6 of 10, are expected to be for engineers, and the growth of civil engi - neers is anticipated to be especially robust. As a greater emphasis is placed on improv - ing the nation's infrastructure, civil engineers will be needed to design, implement, and upgrade transportation, water supply, and pollution control systems. In addition, it is esti - mated that the occupation of drafters, engineers, and mapping technicians will increase by roughly 52,200 jobs and that architects, surveyors, and cartographers will increase by 40,100. Table 1.1 shows the projected job openings in STEM clusters between 2012 and 2022. Table 1.2 shows the number of engineers in thousands in 2008 and expected growth between 2008 and 2018. 1.3 Skills and Competencies (What Employers Are Looking For) Regardless of the role in which you will be working, there are a common set of intangible skills that employers look for across all engineering disciplines:In addition, he currently holds Lecturer I position at University of Michigan-Flint, in the Department of Computer Science, Engineering and Physics, and Adjunct Faculty position at Saginaw Valley State University, in the Department of Electrical and Computer Engineering. He teaches courses related to electric circuits, digital logic, CAD, and digital signal processing. He received BS and MS degrees in Electrical Engineering from Michigan Technological University in 2009 and 2011, respectively. His graduate thesis was on the detection of complex point targets with distributed assets and partially correlated signals, in the area of signal processing. During undergradu - ate studies his concentration was on Electronics. He is an active member of the honor societies Tau Beta Pi, Omicron Delta Kappa, and Eta Kappa Nu. Engineer Amin believes that in order to prepare for a successful engineering career, students must be diligent and thorough in their efforts of pursuing college education. They should look out for internship/co-op opportunities that will add valuable industry experiences to their resumes, be actively involved in university research programs with a commitment to generating new ideas, ask questions to be well informed about subject matters, and keep an open mind when searching for solutions to problems they face.7 Engineering and Technology Professions Effective communication skills : With an increase in the documentation and instruc - tions that engineers use in the workplace, clear and concise communication is required. Interpersonal skills : You need to know work effectively as part of a team and work with customers to identify needs and provide solutions. Technical knowledge : Whatever technical expertise is vital to your job, you need to understand how to that knowledge to solve practical problem. Organizational skills : Resource planning, being able to prioritize tasks, and manag - ing time effectively are key skills for engineers. Enthusiasm and commitment : Learning new skills is part of every engineer's role, so you need to be adept at assimilating a lot of new information. More importantly, employers are looking for evidence that you are well rounded, and take an active interest in and have an understanding of the engineering industry. Furthermore, they want to know that you have the motivation, drive, and ambition to make an impact within their company. 1.3.1 Engineering Grand Challenges for the Twenty-First Century Engineering students need to understand and prepare to address the global engineering issues of the next century. The National Academy of Engineers (NAE) announced 14 grand engineering challenges for the twenty-first century that, if met, would greatly improve how we live. The final choices were presented into four themes that are essential for humanity to flourish\u2014sustainability, health, reducing vulnerability, and joy of living. The goal was to identify what needs to be done to help people and the planet thrive. The results of that poll are ranked here by the number of votes each engineering challenge received during the period January 15 through March 28, 2008: 1. Make solar energy economical 2. Provide energy from fusion 3. Provide access to clean water 4. Reverse-engineer the brainTABLE 1.1 Occupations Assigned to the Science, Technology, Engineering, and Mathematics (STEM) Cluster That Are Projected to Have the Most Job Openings, 2012-2022 OccupationJob Openings, Projected 2012-2022 (thousands) Environmental scientists and specialists, including health 39.7 Electrical engineers 44.1 Architectural and engineering managers 60.6 Industrial engineers 75.4 Mechanical engineers 99.7 Sources: National Association of State Directors of Career Technical Education Consortium (Career Cluster), Silver Spring, MD; Bureau of Labor Statistics, Employment Projections program (projected job openings), Washington, DC.8 Introduction to EngineeringTABLE 1.2 Employment Trend of Different Engineering Disciplines Matrix Code 2008 National Employment Matrix TitleEmployment Change, 2008-2018 Total Job Openings due to Growth and Replacement NeedsNumberPercent Distribution Numeric Percent 2008 2018 Agricultural engineers Biomedical engineers Chemical engineers Civil engineers Computer hardware engineers Electrical and electronics engineers Electrical engineers Electronics engineers, except computer Environmental engineers Industrial engineers, including health and safety Health and safety engineers, except mining Safety engineers and inspectors Industrial engineers Marine engineers and naval architects Material engineers Mechanical engineers Mining and geological engineers, including mining safety engineers Nuclear engineers Petroleum engineers All other engineers Drafters, engineering and mapping technicians1571.9 71.6 18.8 25.9 195.4 878.3 1.0 0.0 0.0 0.0 0.0 0.2 0.0 0.2 0.1 0.1 0.0 0.2 0.0 0.1 0.0 0.0 0.2 0.0 0.0 0.0 0.1 0.51.1 0.0 0.0 0.0 0.0 0.2 0.0 0.2 0.1 0.1 0.0 0.2 0.0 0.1 0.0 0.0 0.2 0.0 0.0 0.0 0.1 0.5 178.3 7.4 0.3 11.6 0.6 67.6 2.8 3.1 2.7 0.4 16.6 33.2 2.6 30.6 0.5 2.3 14.4 1.1 1.9 4.0 12.2 52.2 11.3 10.4 12.1 72.0 2.0 24.3 3.8 1.0 1.7 0.3 30.6 13.8 10.3 14.2 5.8 9.3 6.0 15.3 10.9 18.4 6.7 6.3 531.3 22.3 0.9 14.9 7.8 114.6 23.5 72.3 38.9 33.4 27.9 94.6 9.2 85.4 2.3 8.1 75.7 2.6 5.4 8.6 50.2 220.0 Source: Bureau of Labor Statistics, US Department of Labor, Washington, DC, 2015.9 Engineering and Technology Professions 5. Advance personalized learning 6. Develop carbon sequestration methods 7 . Restore and improve urban infrastructure 8. Engineer the tools of scientific discovery 9. Advance health informatics 10. Prevent nuclear terror 11. Engineer better medicines 12. Manage the nitrogen cycle 13. Enhance virtual reality 14. Secure cyberspace Addressing these challenges must be prioritized, so it is necessary to redesign engineering education, integrating these challenges into the curriculum, particularly in capstone projects. 1.4 Engineering Disciplines There are 17 engineering disciplines listed in the Bureau of Labor Statistics. Of these disci - plines, 80 % of engineers work in seven major disciplines. The percent of electrical and elec - tronic engineers combined is highest (19 %) followed by civil (18 %) and mechanical (15 %) (Figure 1.2). The engineering disciplines are listed below with the seven major disciplines in italics. 1. Aerospace Engineering 2. Agricultural Engineering 3. Biomedical Engineering Electrical an d electronic: 19 % 5%Environmental: 3%Others: % FIGURE 1.2 Distribution of engineering disciplines in percent.10 Introduction to Engineering 4. Chemical Engineering 5. Civil Engineering 6. Computer Engineering 7. Electrical and Electronic Engineering 8. Environmental Engineering 9. Industrial and Operations Engineering 10. Marine Engineering and Naval Architecture 11. Materials Engineering 12. Mechanical Engineering 13. Mining Engineering 14. Nuclear Engineering 15. Safety Engineering 16. Petroleum Engineering A brief description and overview of different engineering disciplines are provided in the following sections. 1.4.1 Aerospace and Aeronautical Engineering Aerospace engineers design aircraft, spacecraft, satellites, and missiles. In addition, they test prototypes to make sure that they function according to design. The main difference between aerospace and aeronautical engineering can be summed up very simply, according to Bruce R. White, Dean of the College of Engineering at University of California, Davis. \" Aeronautical engineering tends to focus on flight and activities within an atmosphere,\" White said, \"while aerospace engineering includes the atmo - sphere, but also extends into applications in space, where there is no atmosphere.\" Both aeronautical and aerospace engineers are involved in areas such as aerodynamics, flight stability, and aircraft control, as well as traditional engineering not only issues related to aircraft systems. The following is a list of activities performed by an aerospace or aeronautical engineer: Design, develop, manufacture, and test aircraft and aerospace products and systems. Maintain, overhaul, and repair aircraft parts and systems for reliable operation of the aircraft. Develop in-depth understanding of aerospace materials and quality standards, such as aerospace material standards. Understand and comply with regulatory requirements and standards such as Federal Aviation Regulations, Canadian Aviation Regulations, and European Aviation Safety Agency. Develop acceptance standards of aerospace parts, systems, and components. Inspect parts for malfunction, damage, or repair ability for safe and reliable opera - tion of aircraft.11 Engineering and Technology Professions Aircraft can be grouped into five major categories: 1. Private business jets. 2. Small commercial aircraft : Turbo propeller-type aircraft or small jets carrying 40-150 passengers. Examples include DE Havilland Dash-8, Embraer regional jet, Canadian regional jet, and so on. 3. Large commercial aircraft : These aircraft use two to three large jet engines and carry 150-500 passengers. Examples include Boeing 737 , Airbus 340, and so on. 4. Military aircraft : These are used by defense systems and usually can reach super - sonic speed (speed equal to or more than the speed of sound, i.e., greater than 750 miles per hour). Examples include F-16, F-18, and so on. Other military prod - ucts include missiles and rockets. 5. Space shuttle: Space shuttle is used to explore different planets and stars in the galaxy by NASA and other space agencies. The space shuttle consists of two solid rocket boosters used for launch, an external fuel tank that carries fuel for the launch, and an orbiter that carries astronauts and payload. A typical space shuttle mission typically lasts for 7-10 days, but can extend for longer time depending on the mission. Aerospace engineers may become specialists in aerodynamics, thermodynamics, celestial mechanics, flight mechanics, propulsion, acoustics, and guidance and control systems. 1.4.2 Civil Engineering Civil engineers are involved in the design, construction, supervision, operation, and main-tenance of construction projects ranging from small buildings to large projects and systems, including roads, buildings, airports, tunnels, dams, bridges, piping for water supply, oil, gas, and sewage treatment. Civil engineers can also work in research, but that role usually requires a graduate degree. Typical activities and tasks performed by civil engineers include the following: Conduct and analyze survey reports, maps, and other data to plan projects and make design decisions. Prepare estimates of construction costs, and ensure compliance with government regulations, potential environmental hazards, and other factors in planning stages and risk analysis. Understand regulatory requirements and submit permit applications to local, state, and federal agencies verifying that projects comply with pertinent regulations. Evaluate cost of materials, equipment, or labor to determine a project's economic feasibility. Use modern engineering computational tools, such as computer-aided design software, to plan and design transportation systems, hydraulic systems, and struc - tures in line with industry and government standards. Develop, plan, and oversee the repair, maintenance, and replacement of public and private infrastructure such as bridges and highways. For the safety of citizens and public infrastructures, civil engineers are required to possess professional engineering license or registration. Civil engineers may also hold supervisory 12 Introduction to Engineering or administrative positions ranging from a supervisor of a construction site to a city engineer. The federal government employs civil engineers to inspect projects for regulatory and safety compliances. Civil engineers can perform jobs as construction, geotechnical, struc - tural, and transportation engineers. Construction engineers : Construction engineers may also hold title as construction managers and are responsible for managing construction projects, meeting sched - ules, plans, and specifications. During construction, they are also responsible for safety of workers and temporary structure in the job site. Geotechnical engineers : The interaction of structures with earth (including soil and rock) is the focus of geotechnical engineers. Geotechnical engineers perform soil tests to ensure the strength present meets that required for foundations to carry their desired loads. Seismic loads must be assessed for building roads and tunnels. Structural engineers : Structural engineers design reinforcements to ensure strength and reliability of major projects, such as buildings, bridges, and dams. Transportation engineers : Transportation engineers plan, design, operate, and main - tain transportation systems such as mass transit, airports, ports, harbors, and traffic systems. 1.4.3 Computer Engineering Computer engineers perform a wide range of duties related to design and development of computer hardware and development of programs to operate the computers. Computer engineering jobs can be categorized in two major areas: hardware engineers and software engineers. Computer hardware engineers : Computer hardware engineers design, develop, manufac - ture, and test computer systems and components, such as microprocessors, circuit boards, memory devices, networks, and routers. They create innovative technologies and systems to advance computer technology. Typical activities performed by hardware engineers include the following: Design, develop, analyze, and test new computer hardware and systems. Upgrade existing computer equipment to make it compatible with new software. Plan and manage the manufacturing process for computer hardware and periph - eral equipment. Computer hardware engineers also design devices and systems that are embedded in other products, such as automobiles, aircraft, and medical devices, which interact with a computer system or the Internet. Computer hardware engineers work closely with soft - ware engineers to ensure compatibility of hardware and software systems. Software engineers or software developers : Computer software developers develop applica - tions that allow users to perform specific tasks on a computer or other devices. They also develop programs for the underlying computer systems that run the devices (operating system) or control networks. Typical activities performed by software developers include the following: Understand, evaluate, and analyze users' needs, and then design, test, and develop software to meet those needs.13 Engineering and Technology Professions Develop application software or system software and plan how the pieces will work together. Develop flowcharts, architecture, and procedures to write the program or code. Test software and hardware for reliable function of the code and hardware. Prepare a software user manual and other documentation for the programmer and user of the code. Manage software development projects. Software engineers begin the development process by asking how the customer plans to use the software. Using that customer input, the programmer develops the program and writes the code. After the code is written, software engineers test the program for reliabil - ity, user-friendliness, and other requirements as specified by the customer. The software developers can be grouped into two major areas: Applications software developers : Application software developers develop computer applications, such as word processors, spreadsheet, and games, for consumers. Application software may include custom software for a specific customer or com - mercial software to be sold to the general public. Systems software developers : Systems software developers design and develop the systems, such as operating systems, that keep computers functioning prop - erly. They also develop system interfaces that allow users to interact with the computer. 1.4.4 Electrical and Electronic Engineering There are similarities and differences in roles and responsibilities of electrical and elec - tronic engineers. Most of these engineers hold a position as an electrical engineer. Electrical engineers design, develop, analyze, test, and manufacture electrical equipment, such as electric circuits, transformers, electric motors, generators, and navigation and communica - tion and electric power distribution systems. Electrical engineers also design the electrical systems or circuits of large buildings and structures, automobiles, and aircraft. Typical activities performed by electrical engineers include the following: Develop innovative solutions to problems using electrical equipment, systems, and devices. Perform detailed electrical design calculations to optimize design, manufacture, and application of electrical systems or subsystems. Develop electrical specifications, codes, standards, and design guidelines for safe and reliable operation of electrical equipment and systems. Manage projects that require installation, maintenance, manufacture, and testing of electrical equipment to ensure that products meet specifications, codes, and standards. Electronic engineers design and develop electronic equipment used in computers, cell phones, smart TVs, broadcast and communications systems, portable music players, global 14 Introduction to Engineering positioning systems, and so on. Typical activities performed by electronic engineers include the following: Develop innovative solutions through design of electronic components, software, products, or systems for personal, commercial, industrial, medical, military, or scientific applications. Develop specifications, codes, and standards for safe and reliable operation of electronic equipment or systems. Analyze system requirements, estimate cost, and select components to meet desired needs and capacity. Develop maintenance and testing procedures for electronic components and equipment for safety and reliability. Perform design modifications and upgrades for system optimization, repair, and maintenance. Monitor performance and reliability of electronic equipment, instruments, and systems to comply with regulatory requirements. 1.4.5 Environmental Engineering Environmental engineers develop solutions to problems related to air and water pollu - tion, contamination, renewable energy, and so on. These solutions often require knowl - edge in the areas of soil science, biology, chemistry, and so on. They are involved in global issues such as climate change, sustainability, design for environment, and design of recycling. Typical activities performed by environmental engineers may include the following: Design and develop innovative solutions leading to environmental protection, such as water recycling facilities, air pollution control systems, and recycling waste products to useful energy. Develop codes, standards, and specifications related to environmental protection and sustainability. Enforce policies and procedures to protect the environment and advocate legal issues related to violations of such policies by individual, industry, and nation. Provide technical support for environmental remediation projects and for legal actions. Monitor industrial and municipal facilities to ensure compliance with environ - mental regulations. Prepare procedures for corporations and government agencies for cleaning up contaminated sites. Environmental engineers conduct hazardous waste management studies in which they evaluate the significance of hazards and advise on treating and containing them. They also design systems for municipal and industrial water supplies and industrial wastewater treatment, and research the environmental impact of proposed construc - tion projects. Environmental engineers in government develop regulations to prevent mishaps.15 Engineering and Technology Professions 1.4.6 Industrial and Operations Engineering Industrial engineers develop solutions to improve efficiencies in production by reducing waste. They use principles of Six Sigma and lean manufacturing to optimize production and manufacturing processes. Industrial engineers are also involved in monitoring the health and safety of workers in manufacturing and other industries. Typical activities per - formed by industrial engineers may include the following: Develop innovative methods to maximize efficiency in the production processes. Review engineering drawings and specifications to develop process flows, meth - ods, and production schedules to reduce cycle time and production costs. Develop and implement quality management procedures to improve product quality and reliability. Address issues related to production systems and perform time studies to deter - mine standard time required to perform tasks. Coordinate with design, manufacturing, and production personnel to eliminate waste. Review and improve equipment and systems, moving toward ergonomic designs. Perform simulation of production systems to improve efficiency and reduce cost. Coordinate with suppliers as well as internal and external customers to develop a robust supply chain management system. 1.4.7 Mechanical Engineering Mechanical engineering is one of the broadest engineering disciplines. Mechanical engineers are involved in the design, development, building, and testing of mechanical and thermal devices, including tools, engines, and machines. Mechanical engineers are required to work with electromechanical systems and devices such as embedded systems, robotics, and automation. Mechanical engineers also work in research and development of new equipment, systems, and processes. A graduate degree is normally required for research and development positions. The following is a list of some activities performed by mechanical engineers: Identify, analyze, and solve problems using mechanical, electrical, and thermal systems. Design and develop mechanical and thermal equipment, systems, and processes using computational methods and tools such as finite element analysis and com - putational fluid dynamics analysis. Optimize design using simulation and validate prototype through testing and analysis of test results. Improve the design of existing product performance and reliability to meet desired needs. Design for manufacturing and develop efficient manufacturing processes. Mechanical engineers design, develop, and manufacture products such as automobile, aircraft, medical devices, wind turbines, electrical motors, generators, internal com - bustion engines, refrigeration and air conditioning equipment, and medical devices. 16 Introduction to Engineering Mechanical engineers also design products and systems inside buildings such as elevators and escalators, plumbing, heating, ventilation and air conditioning systems, and sprinkler systems. Most employers require a bachelor's degree in mechanical engineering from an ABET accredited program with some work experience. ELISIA GARCIA KOWALSKI\u2014PRODUCT INTEGRATION ENGINEER, US DEPARTMENT OF DEFENSE I support the Marine Corps Program Office of Light Armored Vehicles (LA V) as a Product Integrator for the Department of Defense. I use my technical background as an engineer to aid in development and execution of upgrade programs to the leg - acy LA V fleet. This includes overseeing cost, schedule, and performance of efforts, as well as monitoring activity required for long-term sustainability and readiness. My position requires interfacing across multifunctional areas such as engineering, logistics, contracting, and business/finance within various organizations within the government. Once a new project is identified as a requirement, a detailed Scope of Work (SOW) is written to capture the project requirements and include technical per - formance specifications and deliverables. Contracts are then awarded to complete the SOW and are closely monitored through various acquisition phases of the life cycle. After development, production, and fielding are completed, the project moves into the sustainment phase that will maintain components for the users for as long as the service life requires, which can be upward of 50 years. The engineering degree provided me with the discipline and technical aptitude to problem solving and research information. I also completed a Master of Business Administration degree to complement my portfolio for versatility in the workforce. I continue to expand my knowledge base through training and certifications offered within the Department of Defense to ensure that I remain relevant and competi - tive. When researching the various degree options after high school, I initially did not know what I wanted to do. My father is an engineer for General Motors and he persuaded me into giving it a chance and I am so happy I took his advice. I also wanted to ensure that I would be marketable after graduation. Female minorities in17 Engineering and Technology Professions the engineering field are highly sought after. After I graduated, I was working as a controls engineer for an automotive contractor. I am also a member of the Industrial Advisory Board for the University of Michigan- Flint. There are always surprises! I continue to learn something new every day. I love that my career field continues to challenge me and provide me with opportunities for career growth. I enjoy working in Program Management because we work directly for the warfighter and are able to see development efforts come to fruition. I plan to continue gaining experience with the intention of an eventual promotion into a lead - ership role. A successful career as an engineer requires flexibility, willingness to learn some - thing new, and being unafraid to ask questions. Teamwork is the key in the real- world environment. You can always learn from others and people are generally more than willing to share their knowledge. Also, do not limit yourself and always explore your options. While you may have advisors to help guide you, you are the only one ultimately in charge of your career path. 1.5 Professional Engineering License Professional engineer , or PE, is the title used by professional engineers throughout the United States. State licensing boards grant the PE title to engineers who meet certain requirements in education, experience, and exams. State laws limit the practice of engineering to licensed professional engineers, which means that a PE is required for such things as Stamping and sealing designs Bidding for government contracts Owning a firm Consulting Offering expert witness testimony Advertising services to the public Engineers who do not perform the above functions can also benefit from holding a profes - sional license. As a PE, you are likely to reach managerial positions more quickly and earn a higher salary than your peers. The PE acts as a standard that shows you have met a series of stringent professional requirements and are a member of a select group of practicing engineers. 1.5.1 Steps to Become a PE While each state licensing board has its own laws regarding engineering licensure, there is a general four-step process for licensure candidates: Earn a degree from an ABET -accredited engineering program. Pass the FE exam .18 Introduction to Engineering Gain acceptable work experience (typically a minimum of four years). In most cases, this must be completed under the supervision of a PE. Pass the PE exam in the appropriate discipline. Check your state's requirements; some require experience to be earned before you can take the PE. DR. NEIL G. MURRAY JR., ENGINEERING MANAGER TRW As an engineering manager I am responsible for leading and mentoring the engi - neering team at TRW Automotive that develops electronic crash sensors for auto - motive airbag control systems. My team consists of men and women with degrees in mechanical, electronic, and industrial engineering. We develop both the product and manufacturing process in parallel from the very beginning of each program. As one element of my mentoring role, each week I devote two to three hours to training my team and other employees in DfSS tools such as Axiomatic Design, Quality Function Deployment, TRIZ, and Optimization. Teaching these courses is fun and the learning experience helps to reinforce the knowledge and team dynamic. I have engaged in a lifetime of learning, finally completing a doctorate in Manufacturing Systems Engineering at Lawrence Technological University at age 61. Initially, my BS in Mechanical ET provided an entry point into a career as a cost estimator and mold designer in the rubber molding industry. Engineering as a career has substantially changed over the years, and had I not reinvented myself, I would not have been in a position to take advantage of opportunities as they came along. MS in Manufacturing Systems Engineering provided the knowledge and credentials to be considered for and transition into engineer - ing management at a start-up electronics company in the automotive industry. Each step in my career has prepared me for the next step. I transitioned from Advanced Manufacturing Engineer to the Six Sigma continuous improvement 19 Engineering and Technology Professions 1.6 Professional Engineering Organizations Engineers are recommended to become members of professional societies and organiza - tions as they provide important support to engineers. Professional organizations advocate for engineers, provide networking opportunity with other engineers in their community, offer courses and seminars for professional development, publish newsletters and journals, and organize conferences to update engineers on the latest developments in their field. Professional organizations also provide mentorships to new engineers by introducing group where I gained further knowledge and experience in problem solving and improvement. While in the Six Sigma role I also entered a doctorate of engineer - ing program. Success in this role led to being considered for my current respon - sibilities as an engineering design manager position leading the crash sensors development team. I grew up on a farm and developed an interest in complex mechanisms such as the knot tying fingers that tied the twine on hay bales. These devices are so complex and yet simple at the same time being entirely mechanical. This inter - est led to studies in mechanical engineering. I was in the Six Sigma group, and as a pilot project for Design for Six Sigma, we redesigned an automotive tire pressure sensor to reduce cost and increase reliability. One of the directors was pleased with this work and asked me to take on a role in engineering manage - ment developing crash sensors. I hold a number of patents for new developments in crash sensing, ASQ certification as a Six Sigma Black Belt, and membership in the Society of Plastic Engineers and the Institute of Electrical and Electronic Engineers. I believe that membership in these professional societies is important in keeping current with advances in technology. That I am a member of both an electronic and plastics molding organization reflects the broad nature of my professional growth over the years. This broad scope has kept my career chal - lenging and interesting. I am also an active member of the Engineering Industrial Advisory Board for the engineering programs at the University of Michigan at Flint, Michigan. The extent to which engineering has evolved has been a pleasant surprise. This is not just a matter of technology. Technology is just a tool that makes us more pro - ductive and more capable of solving interesting problems. Really, it is the amazing change from individual work to a culture of collaborative work where team mem - bers may be located almost anywhere on earth. This has been exciting and tremen - dous fun. And if we are doing it right, engineering should be fun, creative work. My intent is to begin new responsibilities as a part-time lecturer at a local university. My advice is to pursue a plan of continuous learning. The knowledge that one gains from that first degree is only a starting point in an exciting career. You must keep current as your industry and technology evolve. The other point of advice is that the enthusiasm that you bring to your career and a spirit of taking on new challenges and solving new problems is critical in being recognized as a valued member of an engineering organization.20 Introduction to Engineering them to experienced engineers in their profession. A list of major engineering professional organizations are listed as follows: American Institute of Aeronautics and Astronautics (www.AIAA.org): AIAA's mission is to inspire and advance the future of aerospace for the benefit of humanity. AIAA's vision is to be the voice of the aerospace profession through innovation, technical excellence, and global leadership. Its tagline is Shaping the Future of Aerospace . It reflects our belief that AIAA members are continually shaping the future of aero - space through their creativity, ingenuity, and passion for aerospace engineering and science. American Society for Engineering Education (www.asee.org): The American Society for Engineering Education is a nonprofit organization of individuals and institutions committed to furthering education in engineering and ET. It accomplishes this mission by Promoting excellence in instruction, research, public service, and practice Exercising worldwide leadership Fostering the technological education of society Providing quality products and services to members American Society of Civil Engineers (www.ASCE.org): The oldest engineering organi - zation in the United States supports civil engineers in their profession while also serving the public. American Society of Mechanical Engineers (www.ASME.org): This professional orga - nization for mechanical engineers sets the codes and standards for mechani - cal devices to ensure quality, reliability, and safety. The ASME stresses the importance of change while also embracing the long history of mechanical engineering. The organization also promotes education and innovation in this industry. Institute of Electrical and Electronics Engineers (www.IEEE.org): This nonprofit orga - nization advocates for innovation, both in theory and practice, in electrical engi - neering and other disciplines. A primary focus of this organization is providing professional development and continued learning for engineers. Institute of Industrial Engineers (www.IIE.org): This association is the world's largest society dedicated to the development of industrial engineering. Focused on the design, improvement, and installation of systems of people and processes, its mis - sion is to help advance the field of industrial engineering through networking and sharing knowledge. National Society of Professional Engineers (www.nspe.org): The NSPE advocates for the needs of the professional engineering community and attracts professionals with a high degree of integrity. The NSPE promotes innovation, professional growth, teamwork, ethics, and professional licensure for its members. Engineers are rec - ommended to comply with NSPE Code of Ethics as listed below: As a Professional Engineer, I dedicate my professional knowledge and skill to the advancement and betterment of human welfare. I pledge: To give the utmost of performance; To participate in none but honest enterprise;21 Engineering and Technology Professions To live and work according to the laws of man and the highest standards of professional conduct; To place service before profit, the honor and standing of the profession before personal advantage, and the public welfare above all other considerations. In humility and with need for Divine Guidance, I make this pledge. Adopted by National Society of Professional Engineers, June 1954 Source: See more at http://www.nspe.org/resources/ethics/code-ethics/ engineers-creed#sthash .bYmLTU51.dpuf Society of Automotive Engineers (www.sae.org): This organization advocates for engi - neers in automotive, aerospace, and commercial vehicle sectors. SAE provides seminars and certification programs for real-world learning to support career development through online and classroom modes. Most of the courses are offered through Internet so engineers from around the world can enroll. Society of Women Engineers (www.swe.org): This nonprofit organization supports the education and advancement of women engineers and recognizes the significant achievements women make in this profession. MARSHA NOTTINGHAM, MATERIALS ENGINEER As a materials engineer, I solve three types of problems related to materials. The perennial problem is what material should we make a part from? This problem requires knowledge or material properties such as strength, corrosion resistance, electrical, thermal, and optical properties of met - als, ceramics, and plastics. The second problem is often why did this part fail? This requires analyti - cal work to determine why the part cracked, mal - functioned, corroded, and otherwise degraded. It is a lot like CSI forensics, except that we are dealing with automotive components instead of people. The third type of problem requires development of a materials specification that guarantees good materials in the production process . This involves working with materi - als' suppliers to understand the variations in their processes as well as defining the limits that will be acceptable for our parts. The best part of my job is the opportunity to work with a diverse group of engi - neers and technicians. I also enjoy the problem-solving part of the job as it chal - lenges me with new opportunities every day. It would be better if I could deal with less paper work. However, I understand that documentation is necessary for compliance and substantiation of my decision. To become a materials engineer, one must have at least a bachelor's degree in materials science or engineering with some job experience. Although I was originally pursuing an aerospace engineering degree, I fell in love with material science during an introductory course in materials engineering. 22 Introduction to Engineering 1.7 Summary Engineering is a learned and noble profession. Engineers develop products and services to make the world a better place to live. Engineers, engineering technologists, and tech - nicians work together in a team to achieve common goals and objectives. The future of engineering lies among products and services that focus on sustainability, health, and well-being of individuals and society. The employment outlook for all engineering disci - plines is positive with projected growths of 5 %-20% in different areas. Engineers need to develop competencies beyond technical skills such as communication and team working skills to succeed in the competitive global environment. Engineers and engineering technologists must join professional societies in their disciplines as these organizations provide professional development opportunities for career growth. Engineers are also required to abide by the code of ethics to perform their jobs. Problems 1. The NAE announced 14 grand engineering challenges for the twenty-first century that are essential for sustainability, health, and humanity. Select any five of these grand challenges and describe how you will contribute as a future engineer in these areas. 2. Investigate the employment outlook for engineers from the US Department of Labor, Bureau of Labor Statistics (www.bls.gov). a. Describe the employment outlook of your discipline for next 5-10 years. b. What is the average salary and starting salary in your field of engineering?I really liked the hands-on, concrete nature of materials engineering compared to computational or analytical methods used in aerospace engineering education. I enjoyed pulling a metal through tensile tester, breaking a part in the impact test - ing process. During my first professional job, I realized that everyone in the organization is not as data driven as engineers are. Different groups of people view from different perspectives to make decisions. Engineering students should choose a career with a company or product that they enjoy working on. Some jobs require people skills and most of the jobs require good communication and team working skills that stu - dents must acquire while they are at school. Students need to get actively involved in students' organizations, undergraduate research, and extracurriculum activities to develop these professional skills that will help them succeed in their career and personal life. It is also important to earn a good salary. However, you should not be motivated by money alone; you must enjoy what you are doing.23 Engineering and Technology Professions 3.List five desirable skills and competencies employers of engineering graduates look for. a.Self-assess your level of competencies in all of these five areas with scales of0 to 10, where 0 is the lowest level of competency and 10 is the highest level ofcompetency. b.Present a plan for how you will improve your competencies in two of the low - est levels of competencies as listed in part (a). 4.Select the engineering discipline that you are currently enrolled in and list theduties performed by engineers of that discipline. If your discipline is not listedabove, investigate from online resources about the duties performed by engineersof your discipline. 5.Describe the steps required to become a registered professional engineer. Whatare the benefits of becoming a registered professional engineer? 6.List the NSPE code of ethics for engineers. 7 .How will you change the world as a future engineer? What products and serviceswill you develop to contribute toward advancement of technology and society? Bibliography Accreditation Board of Engineering and Technology, http:/ /www.abet.org/accreditation/ new-to-accreditation/engineering-vs-engineering-technology/ . Engineering Grand Challenges by National Academy of Engineers. (March 2008), http:/ /www. engineeringchallenges.org/GrandChallengeScholarsProgram.aspx. McCurdy, L. (March 1995). What Is the Difference Between Engineering and Engineering Technology? Engineering Liaison Committee, Pomona, CA. National Council of Examinations for Engineers and Surveyors, www.ncees.org.WHAT CAUSES DISEASE? FROM 'BASIC PATHOLOGY, FIFTH EDITION: AN INTRODUCTION TO THE MECHANISMS OF DISEASE' # This chapter is excerpted from Basic Pathology, Fifth Edition: An introduction to the mechanisms of disease by Sunil R. Lakhani, Caroline J. Finlayson, Susan A. Dilly, Mitesh Gandhi. \u00a9 2016 Taylor & Francis Group. All rights reserved. 3 Learn more7Chapter 1: What causes disease?Those who are enamoured of practice without science are like a pilot who goes into a ship without rudder or compass and never has any certainty where he is going. Practice should always be based upon a sound knowledge of theory. Leonardo da Vinci (1452-1519) Italian artist, sculptor, architect and engineer Every day we eat food, breathe air, walk, talk and perform the tasks of daily life before going to bed unscathed. Some days, however, we may encounter and be harmed by viruses, bacteria, unusual antigens, extremes of temperature, chemical pollutants or fast-moving vehicles. We are harmed by environmental (or extrinsic) factors. The cause is usually obvious if it happens immediately but may be hard to discern when the effect takes days or years to manifest, e.g. tobacco smoking causing lung cancer. In some situations, the environment plays no part and the cause is entirely gen-etic (intrinsic), e.g. the anaemias related to abnormal haemoglobin (see page 279). There is no particular way of classifying the causes of diseases but it is useful to have a checklist that you find helpful when talking with patients and thinking about their 'differential diagnosis', i.e. the possible condi - tions and the causes that would explain their current symptoms. Table 1.1 shows such a list of causes, which are presented in an order that moves from the rela - tively simple to the more complex, so that you could WHAT CAUSES DISEASE?CHAPTER 1 Category Example of causes and diseases Physical Heat, cold, radiation, electrical, mechanical Chemical Tobacco smoke, alcohol, drugs, poisons, air pollution Structural Congenital neural tube defects, vascular occlusion, bowel perforation fungi, protozoa, prions Inflammatory Peanut anaphylaxis, dust-mite asthma, autoimmune conditions Nutritional Obesity, malnutrition, diabetes Degenerative Osteoarthritis, dementia GeneticTable 1.1 Categorising the causes of diseasePhysical causes 8 Clinical scenario: frostbite 8 Chemical causes 10 Case study: coughing up blood 13 Structural causes 15 Which are the most important diseases today? 16Biological agents as causes of diseases 16 Inflammatory conditions 22 Case study: coeliac disease 24 Nutritional diseases 26 Genetic causes of disease 27 Case study: an abnormal baby 38 identify and treat the straightforward cases quickly. Depending on your location and specialty, you could use this approach to construct a flowchart of the most likely causes for your patients. We have put genetic causes at the bottom of the list because the genes interact with most of the other causes in complex ways. It is possible to produce a GxE (genes x environment) card to illustrate this, as shown on What causes disease? 8 Part 1: Disease, health and medicine page 215. Mostly these causes are based on statistically derived associations rather than precise knowledge of the mechanisms but we attempt to highlight the main mechanisms through which genes affect health. PHYSICAL CA USES Let us start with a physical cause of disease and look at extremes of temperature. CLINICAL SCENA RIO: FROSTBITE A 29-year-old skier lost his way after drinking a few beers in a mountain restaurant. He was discovered, unconscious, without a hat, 20 hours later in an exposed location on the mountain face. He had obvious frostbite to his nose and fingertips, manifest as hard white areas. A weak, thready, but regular pulse was present and he was breathing shallowly. He was wrapped in a space blanket and rushed by helicopter to hospital. His rec - tal (core) temperature was found to be 30\u00b0C. He was warmed with blankets and hot water bottles. He suf- fered a cardiac arrest but was immediately resusci - tated. His mild metabolic acidosis was corrected. As he regained consciousness he began to shiver vio - lently and his limbs became reddened and swollen. He tried to raise himself up but promptly fainted. Over the next couple of days his fingertips and nose turned black and the skin began to slough off. At one point it appeared that he would lose the tips of most of his fin - gers, but after the skin had fallen off only two fingertips were lost and his nose was saved ( Fig 1.1). What has happened here? Our patient was hypothermic, i.e. his core temperature was <35\u00b0C (normal temperature 37\u00b0C). He contrib - uted to his condition by drinking alcohol (see below). He was not wearing a hat, and 50% of the body's heat loss may be through the head. There is no mention of a facemask, which might have served to warm the freezing air before he inhaled it, losing core heat when the lungs warmed the air before exhalation. The onset of hypothermia is dependent on many factors, including body build, ambient temperature, whether the individual is dry or wet, the presence of protective clothing and whether or not alcohol has been ingested (even small amounts can greatly increase the risk of hypothermia). Alcohol plus exercise is probably the worst combin - ation, because not only is his blood glucose depleted by exercise but also the alcohol interferes with the gener - ation of new glucose from body stores by reducing the amount of pyruvate available. Once he became hypothermic he would have been less able to make rational decisions or take sensible measures such as seeking help, finding shelter or cover - ing exposed areas of his body. How does the body respond to cold? Initially the heat gain centre in the hypothalamus dir - ects the body to shiver violently and shut down periph - eral blood vessels by vasoconstriction, but if this fails to restore core temperature the cooling of the heart interferes with cardiac output. Below 26\u00b0C the cardiac output is too low to sustain life ( Fig. 1.2 ). Oxygen combines more strongly with haemoglobin at low temperatures, further depleting tissues of oxygen. Anoxic effects on the heart include arrhythmias. Patients whose body temperature is below 30\u00b0C are at risk of cardiac arrest and should be monitored using ECG. Respiration is diminished, usually in proportion with tissue requirements, but slight CO 2 retention may Figure 1.1 Frostbite is caused by the freezing of tissues. Sludging of cells in capillaries causes ischaemic damage. Endothelial cells are vulnerable to both cold and hypoxia; on thawing of the tissues, there is leakage of blood through the damaged vessels, and the tissue appears blackened over a larger area than is actually necrotic, so delaying amputation is advised.9 Physical causes Chapter 1: What causes disease? Peripheries: >12\u00b0C Numbness: membrane sodium pump inactivated, inexcitable Capillary endothelium damaged by cold <-0.5\u00b0C Freezing of tissues damages endothelial cells Sludging of cells in blood vessels causes hypoxia or infarction. On thawing, blood and plasma leak into tissues and blood volume Increased susceptibility to cold if: Skin is wet Elderly or very young Homeless or exposed to the elements Alcohol consumed (or other vasodilator) Concurrent infection (temperature centre may be compromised)Core Lungs: respiration due to oxygen demand from tissues retention of CO2 and respiratory acidosis, which is superimposed on lactic acidosis from shivering Kidneys: Cold diuresis occurs Renal tubular epithelium damaged by cold, fails to reabsorb sodium plasma osmolality, water tissues Vasculature: Circulating blood volume reduced Oxygen less readily given up to tissues by oxyhaemoglobin at low temperatures Heart: Reduced cardiac output due to blood volume and myocardial contractility Risk of arrhythmias Risk of cardiac arrest, 30\u00b0C Cardiac output cannot sustain life, 26\u00b0C Muscles and nerves: Lose excitability due to impaired membrane Na+ pump Severe pain on thawingShivering Peripheral vasoconstriction PeripheriesCoreTEMP CENTRE Figure 1.2 Changes associated with cold and reperfusion. cause a respiratory acidosis, compounded by the meta - bolic acidosis that occurs when lactic acid accumulates as a result of shivering. Why did the patient faint as he began to recover? Blood volume falls in the hypothermic patient due to a combination of a 'cold diuresis' which occurs in response to a drop in core temperature, and damage to the renal tubular epithelium as a result of the cold, preventing sodium reabsorption; this causes a drop in plasma osmolality and water moves out of the vascu - lar compartment into the tissues to balance this. When the patient is warmed and vasodilatation occurs the blood volume is insufficient for demand and there is hypotension.What is frostbite? Frostbite is the result of the freezing of tissues, which occurs at temperatures below -0.54\u00b0C. Before freezing, cooling to <12\u00b0C causes paralysis of muscles and nerves by interference with the membrane sodium pump. Lack of sodium ions renders nerves and muscles inexcit - able. Damage is reversible after a few hours, but not if left longer. If the tissue freezes, the tissue proteins become denatured and the cell dies. Vascular endothelial cells are particularly susceptible. When they thaw, plasma leaks out of the small vessels through the damaged endothel - ium and the retained red blood cell sludge, obstructing the lumen and causing local infarction of tissue. Although it is dangerous to warm the body of a hypo - thermic person too quickly, if a patient is suffering only from frostbite it is best to warm the affected area as What causes disease? 10 Part 1: Disease, health and medicine 0-5Deaths per 100 000 populationDeaths attributable to outdoor air pollution, 2008 6-10 11-20 21-40 >40 Data not available Not applicable Figure 1.3 Deaths attributable to outdoor air pollution. (From WH O global observatory map. \u00a9/uni00A0WH O/uni00A02011. All rights reserved.)quickly as possible, so that sludging and infarction are reduced to a minimum due to quick restoration of blood flow. It is harmful to thaw an area of frostbite and then allow it to refreeze, as may happen on a moun - tainside when colleagues treat the area by warming and then the patient with frostbite is carried back through the same harsh environmental conditions which caused the problem. Although damage may seem extensive, the actual area of necrosis may be less than it first appears and it may be worth waiting for a few days before amputat - ing an affected area. The process of thawing out is very painful and requires analgesic support, plus elevation of the affected area to reduce tissue swelling. CHEMICAL CA USES The most common chemical causes of diseases are in the air that we breathe, whether we are indoors or outside. The contaminants in the air vary considerably depending on the season and the location, but included among them are substances that cause life-threatening lung inflammation and cancer. Indoors, the major hazards are tobacco smoke and wood smoke. Outside they can be a mixture of pollutants, most of which come from industrial production, home heating and car exhaust fumes ( Fig. 1.3 ). In cities, ozone is a par - ticular problem because it is produced by the action of sunlight on nitrogen oxides from car exhausts, and so can be present in large amounts. Ozone generates free radicals (see section on cell damage) which dam - age the lining cells of the lung, so decreasing lung function and increasing airway reactivity and inflam - mation. Particles are also damaging, especially if they are carried down to the alveoli rather than being trapped and cleared by the mucus. In the alveoli, they can stimulate macrophages and provoke chronic inflammation. These effects can limit the activities of healthy people and cause hospitalisation for people with asthma or chronic lung conditions ( Fig. 1.4 ). It is increasingly recognised that air pollution also causes lung cancer, yet environmental controls fail to 11 Chemical causes Chapter 1: What causes disease?Ozone Nitrogen dioxide Sulphur dioxideAcid aerosols ParticulatesOutdoor air pollutants <20DALYs per 100 000 household air pollution, 2004 20-250 251-500 501-1000 1001-2500 >2500Data not available Not applicable Figure 1.4 Disability-adjusted life-years (DALYs) attributable to household air pollution. (From WH O global observatory map. \u00a9 WH O 2011. All rights reserved.)adequately reduce air pollution. In Europe, the limit is set at 25 mg/m3 but this is higher than the level causing damage and studies on 360 000 city residents show a 7% increase in mortality rate for each 5 mg/m3 increase in fine particulates. Indoors, wood smoke is an irritant that contains carcinogenic polycyclic hydrocarbons, which cause recurrent lung infections and bronchial tumours. The most significant, readily avoidable, chemical air pollutant is tobacco smoke. Tobacco smoke is a complex mix of substances, some of which cause immediate dam - age by irritating airways and stimulating inflammation and mucus production, resulting in cough and reduced exercise tolerance. In the medium to long term, the recurrent inflammation causes chronic obstructive pulmonary disease (COPD) and emphysema, which are irreversible. The risk of lung cancer depends on the number of cigarettes smoked in a roughly linear rela - tionship and the overall survival is reduced by around 7 years for smokers compared with those who have never smoked. Most of the harmful effects are on the lungs and cardiovascular system; however, there are also organ-specific carcinogens in tobacco smoke caus - ing cavity (polycyclic aromatic hydrocarbons, NNK and NNN). Combining tobacco smoke with alcohol significantly increases the risk of laryngeal, oral and oesophageal cancer. Some of the components of tobacco smoke and their effects are listed in Table 1.2 . The list in Table 1.2 does not explain the major effects of tobacco on the cardiovascular system, which is believed to be the cause of a third of heart attacks. This is also discussed in the section X CVS atheroma (page 239) but, briefly, it is likely that the combination of damage to vascular endothel - ial cells, hypoxia and increased platelet aggregation What causes disease? 12 Part 1: Disease, health and medicine Figure 1.5 An axial CT scan showing a soft- tissue mass arising from the floor of the bladder (blue arrows). Tobacco smoke is one of the main culprits in the development of bladder cancers. Some occupations, such as bus driving and working with rubber, are also associated with exposure to toxins, such as benzidine and 2-naphthylamine, implicated in the development of bladder cancer. Component Action Polycyclic aromatic hydrocarbonsCarcinogenic Benzopyrene Carcinogenic Nitrosamine Carcinogenic Formaldehyde Damage cilia and irritate mucosa Carbon monoxide Reduce oxygen delivery to tissues Nicotine Stimulate ganglia and tumour promotionTable 1.2 Effects of some tobacco smoke elementsmeasures, the number of people smoking continues to increase ( Fig 1.7). ASBEST OS-RELATED L UNG DISEASE Asbestos is a crystalline silicate mineral that has been mined for centuries and used in building insula - tion because of its advantageous physical properties. Exposure and inhalation of asbestos fibres lead to a var - iety of disease processes in the lung, resulting in death or considerable disability ( Fig. 1.8 ). Asbestos is now banned in many countries. We have included drugs in the category of chemical causes. This is clearly true when thinking about drugs of abuse (e.g. amphetamines) or deliberate overdoses of therapeutic drugs. It is rather more complex when considering the 'side effects' of medications. These are very important because almost all treatments have some unwanted effects and patients are commonly on several different types of medication. However, the detail is beyond the scope of this book and we just highlight a few exemplars in the relevant chapters (Fig. 1.9). Figure 1.6 Coronal CT scan showing a speculated mass in the right upper lobe - a primary lung cancer.contribute to the production and progression of atherosclerotic plaques. The estimated number of smoking- related deaths worldwide is more than 4 mil- lion and, sadly, despite educational and public health 13 Chemical causes Chapter 1: What causes disease? A 64-year-old woman presents to her GP with a 3-month history of breathlessness and occasional episodes of haemoptysis. She is known to have chronic obstructive pulmonary disease but thinks that her shortness of breath is worse than she normally expects from her C OPD. She is also very worried by the haemoptysis. Her previous medical history includes C OPD and hypertension. Her hypertension is controlled with an angiotensin-converting enzyme (ACE) inhibitor. She smoked 15 cigarettes a day from age 20 to age 60 (when her C OPD was diagnosed). Examination of the cardiovascular and abdominal systems is unremarkable. There is a mild reduction in expansion in the right lower zone; the percussion note is a little dull and the breath sounds are quiet relative to elsewhere. Question: What diagnosis must be considered? Answer: In a patient of this age, who is a smoker or ex-smoker, and presents with haemoptysis, bronchial carcinoma is a definite possibility. The GP arranges an urgent referral to the local chest clinic but receives a request for a home visit from the patient 4 days later. Her dyspnoea has worsened and she now has a cough that is productive of green sputum. She has pain on inspiration on the right side of her chest. Examination reveals decreased expansion on the right side of the chest which is of a greater degree than 4 days previously. The percussion note is dull over the right lower zone, again to a greater degree than when the patient was first examined. The breath sounds over the right lower zone are quiet and have the quality of bronchial breathing. The breath sounds elsewhere in both lungs are normal. Question: What has happened and how do all the patient's symptoms at this stage relate to her suspected diagnosis? Answer : The majority of bronchial carcinomas develop as masses in the proximal bronchi, near to the hila of the lungs. As with other tubular structures/organs in the body, if a tumour develops, from either the mucosal lining of the tube or the deeper tissues of the wall, the tube may become partially or completely obstructed by the neoplasm. Narrowing/uni00A0of a bronchus impedes airflow in and out of the part of the lung distal to that airway. If the volume of lung affected is sufficiently great, this can manifest as dyspnoea, especially in a patient who has C OPD and therefore has decreased lung function anyway. In extreme cases, the obstruction is complete and causes collapse of the affected part of the lung. The findings in this patient on presentation suggested an element of collapse. If a region of the lung is obstructed, the drainage of mucus and other airway secretions from that lung is impaired. Stagnant fluid is an advantageous environment for bacteria and they can colonise the fluid. In the lung, this leads to pneumonia in the occluded region. The immune system reacts with an acute inflammatory response, lead - ing to the generation of pus which is coughed up as purulent sputum. Extension of the pneumonic process to the pleura induces inflammation there. Movement of/uni00A0an/uni00A0inflamed parietal pleura over the visceral pleura, as occurs naturally during respiration, produces pain. Haemoptysis may result from two mechanisms: in addition to its abil - ity to obstruct the lung, a bronchial carcinoma can ulcerate the mucosa and will invade deeper structures. This/uni00A0damage may be accompanied by small quantities of blood loss. The other process that generates haemop - tysis is cavitation. Malignant tumours are frequently rapidly growing and in some instances grow faster than their ability to induce adequate angiogen - esis. When this happens, part of the tumour becomes necrotic and may undergo cavitation. This destructive collapse can be accompanied by haemorrhage.Case study: coughing up blood (Continued )What causes disease? 14 Part 1: Disease, health and medicine Percentage of tobacco use among adults, 2005 14.7-22.5s14.6 22.6-28.5 28.6-36.5 >36.5 Data not available Figure 1.7 Percentage of tobacco use among adults. (From WHO global observatory map. \u00a9 WHO 2008. All rights reserved.) Figure 1.8 Axial CT scan showing calcified pleural plaques (blue arrows) and a fibrotic process with increased interstitial thickening at the bases (red arrow). The latter is also known as asbestosis and is associated with progressive respiratory dysfunction. Figure 1.9 Amiodarone and the liver: an iatrogenic chemical cause of liver disease. Amiodarone is a drug used in the treatment of cardiac arrhythmias. It can potentially have side effects on the liver, ranging from abnormal liver function tests to, rarely, cirrhosis. Over the long term amiodarone is deposited in the liver, resulting in a change in the density of the liver on a CT scan. The normal liver should be the same density as the spleen (red arrow). However, this patient's liver has a higher density (blue arrows) in keeping with amiodarone accumulation. This is part of Case 6 taken from the book Pathology in Clinical Practice: 50 Case Studies , which is complementary to this book as it contains more advanced clinically relevant information. Have a look at that so that you can decide if it is useful for your programme. Read more in Pathology in Clinical Practice Case 6 (Continued )15 Structural causes Chapter 1: What causes disease?STRUCTURAL CA USES Structural causes include conditions that are con - genital and produce obvious physical disabil - ity ( Fig. 1.10 ), such as neural tube defect, or are acquired, such as acute obstruction or rupture of blood vessels or parts of the bowel. The cardiovascu - lar structural conditions are covered in Chapters 7-8 which describe thrombosis, embolism and atherosclerosis. The congenital conditions are often of unknown cause but some have clear genetic or infective causes. bFigure 1.10 (a) Postmortem CT and (b)/uni00A0M RI on a fetus born with a large occipital encephalocele - a defect in the posterior skull bones with herniation of the brain and meninges through the defect (yellow arrows). This is one of the types of neural tube defect. Others include spina bifida and anencephaly. a Figure 1.11 Kartagener's syndrome is due to abnormal cilia that affect embryonic chest radiograph showing the situs inversus or 'mirror imaging' component of the syndrome, with the apex of the heart pointing to the right (blue arrow), a right-sided aortic arch (red arrow) and a gastric air bubble (yellow arrow) on the right/uni00A0side. Genes are extremely important during normal development and mistakes that occur during the produc - tion of gametes, fertilisation of the ovum and formation of the embryo can result in malformation or death. A key concept is 'body patterning', which provides a basic ana - tomical organisation through creating gradients of gene products. For example, the four HOX gene clusters create a gradient along the anteroposterior axis of the embryo. Not all of our organs are paired and symmetrical; as an example we only have one heart and this should be situated on the left. To achieve this requires a right-left differentiation which is dependent on functioning cilia creating an asymmetrical flow of fluid ( Fig. 1.11 ).Part 1: Disease, health and medicine What causes disease? 16Cilia maintain separate cytoplasmic and membrane compartments, but are completely lacking vesicles. Instead cilia rely on specialized modes of transportation called intra flagellar transport (IFT) to deliver cargo proteins and lipids along the axoneme. IFT can operate in the anterograde direction (towards the ciliary tip) using complex B factors, or in the retrogra de direction (towards the ciliary base) using complex A factors; together these factors regulate the transport speed and net cargo flux. An important, recently emerged aspect of cilia is the gateke eper role of the septin family of proteins, regulating initial entry and exit of ciliary factors at the base of the cilium [ 1]. The transition zone, where the gatekeeper functions, is an adjacent structure at the base of the cilium, forming the linkers between microtubule and ciliary membrane; it is probably required for unloading ciliary-directed cargo and sorting ciliary-based signaling mec hanisms [ 2] so that the cell can interpret their context. Emerging genetics of the ciliopathies Although ciliopathies are individually rare disorders, an amazing spectrum of what were previously disparate syndromes is now recognized as part of the ciliopathy spectru m. Ciliopathies can be subdivided into 'non-motile ciliopathies', although we usually dene ciliopathies as disorders that result from aplasia and/or disrupted functio n of primary cilia. Motile ciliopathies comprise a class of disorders displaying prominent situs inversus (a condition in which the normal positions of organs are reversed). Non-motile ciliopathies show prominent but mixed features in several vital organs, including the brain, kidney and liver, and others, such as the eye and digit. Ciliopathies range from largely organ-specic disord ers, such as polycystic kidney disease (PKD), to pleiotropic disorders, such as Gruber syndrome (MKS) (Figure 2). All ciliopathies known so far show a recessive mode of inheritance, either autosomal or X-linked, with strong evidence of genetic modiers that determine expressivity. Moreover, clinically distinguishable ciliopathies often result from mutations in a single gene (Table 1), suggesting complex genetic networks. Figure 2 Almost every organ in the body shows vulnerability in the ciliopathies . Most ciliopathies have overlapping clinical features in multiple organs. Cystic kidney and retinal defects are frequently observed. Skeletal dysplasia is predominantly seen in JATD, and subcellular functions of the proteinsA systems-biology approach to understanding the ciliopathy diso... https://genomemedicine.biomedcentral.com/articles/10.1186/gm275 3 of 10 22/04/2016, 10:18Figure 1.12 Almost every organ in the body shows vulnerability in the ciliopathies. Most ciliopathies have overlapping clinical features in multiple organs. Cystic kidney and retinal defects are frequently observed. Skeletal dysplasia is predominantly seen in JATD, OFD1 and Gleeson. Genomic Medicine 2011; 3:59.) Just to give you an idea of the complexity, Fig. 1.12 is a picture of some congenital abnormalities associ - ated with ciliopathies and the genes involved. Please don't attempt to memorise these; just be grateful that you can look them up on genetic databases when required. WHICH A RE THE M OST IMP ORTANT DISEASES T ODAY? The World Health Organization (WHO) 2012 mor - tality statistics show that, of the 56 million people who died in 2012, 'non-communicable diseases' caused 68% of all deaths: cardiovascular diseases (CVDs - mainly ischaemic heart disease and strokes), cancers, diabetes and chronic lung diseases were the most important of these. 'Communicable', i.e. 'infectious', maternal, neonatal and nutritional con - ditions together caused 23% of global deaths, and injuries caused 9%. The use of tobacco is thought to be at the root of 10% of all deaths, largely from respiratory tract (and other) cancers and cardio - vascular disease. What makes troubling reading is the fact that, in low- and middle-wealth countries, the average age at which deaths occurred is considerably lower than in the wealthy countries. Of deaths in affluent coun - tries 87% are from CVDs and cancers, compared with 37% in low-income countries. Deaths due to infect - ive causes and poor hygiene are far more common in low- and mid-income countries, of which tuberculosis, diarrhoeal diseases, malaria and HIV/AIDS are major contributors. Tuberculosis (TB) is second only to HIV/ AIDS as the greatest killer worldwide due to a single infectious agent and TB causes a quarter of all deaths in HIV/AIDS patients. BIOLOGICAL AGENTS AS CA USES OF DISEASES Infectious causes are especially important because of the number of people affected worldwide and the fact that many are treatable with antimicrobials. Chapter 1: What causes disease?Bacteria are generally classified according to their shape and whether they stain blue-purple with the Gram stain ( Fig. 1.13 and Table 1.3 ). Endotoxins and exotoxins are important mechanisms by which they cause damage and these are described in detail in Chapter 2 page 72. Advances in molecular biological techniques have led to some significant changes in medical microbiology. Most importantly there have been changes in the classification of some medically important microbes. TAXONOMY Microbes were traditionally classified on the basis of their microscopical morphology, culture requirements, biochemical and serological properties - in other words their phenotypic characteristics. Nucleic acid amplifica - tion and genome sequencing mean that organisms can now be speciated by their genotypic properties. In bac - teriology this has resulted in the reclassification of many 17 Biological agents as causes of diseases Read more about bacterial infection in Pathology in Clinical Practice Case 7 Figure 1.13 Gram-negative and Gram-positive stim ulate an acute in/f_lammator y response Gram-positiv e bacteria stain blue with crystal violet, which lodges in their thick outer wall. Inside the y ha ve a double-la yered phospholipid membrane , with membrane proteins, surrounding cytoplasm with organelles and a cir cular n ucleus composed of double-stranded DNA Outer coat contains lipopol ysaccharide (LPS), a component of which causes endoto xic fever and space contains enzymes and proteins in a gel Gram-negativ e bacteria ha ve an extra, double-la yered coat that tra ps crystal violet bef ore it can r each the peptidogl ycan coat (which is thinner than in G+ bacteria). The violet cr ystals are washed out b y alcohol as par t of the Gram staining pr ocess and the bacterium is visualized using a r ed counter -stainLPS LPSMembrane protein DNA in nucleus Organelles Thin peptidogl ycan coat Bacterial shapes - bacteria are classi/f_ied by their shape and groupings as well as their Gram staining. Bacteria can be circular, rod shaped, spiral, curved and/or have /f_lagellae. They can occur singly, in pairs (diplo), clusters (staphlo) and strings (strepto); eg streptococci.Part 1: Disease, health and medicine What causes disease? 18 medically important organisms and, in some cases, this confusingly means that the name of the organism has changed, often with the generation of a new genus to comply with taxonomic rules. A good example is in the genus Pseudomonas where the organism Pseudomonas maltophilia (a cause of bacteraemia in immunocom - promised patients) became Xanthomas maltophilia , and is currently known as Stenotrophomonas maltophilia and where the organism Pseudomonas cepacia (a cause of res - piratory tract infection in patients with cystic fibrosis) is now Burkholderia cepacia . Some organisms have now been found to be made up of a complex of several dif - ferent species. The genus Streptococcus is a good example of this: Streptococcus bovis has now been divided into two Streptococcus gallolyticus and Streptococcus pasteur - ianus . Is this In some cases it has little prac - tical relevance, but in the case of the former Streptococcus bovis it does. It was known in the past that there was an association with colonic carcinoma in patients who had a bacteraemia with this organism. It has now been shown that this association is really with Streptococcus gallolyticus not with Streptococcus pasteurianus . More pro - foundly, some microbes have been found to have been completely misclassified. Pneumocystis carinii , which can cause respiratory infection in immunocompromised hosts, is no longer classified as a protozoan and is now known to be a fungus and has been renamed Pneumocystis jirovecii. Molecular techniques such as 16-S ribosomal DNA polymerase chain reaction (PCR) have allowed previously unculturable organisms to be identified, e.g. the bacterium Tropheryma whipplei , the cause of Whipple's disease. Although most infectious disease is due to bacteria and viruses, there are other categories that are just as important, and that have evolved their own mechanisms for bypassing host defences and causing disease. Briefly, these are the fungi, protozoa, parasites, helminths and prion proteins.Gram-positive Gram-negative Acid fast summary of the ways to classify bacteriaChapter 1: What causes disease? Figure 1.14 A radiograph in a young patient of 32/uni00A0with AIDS showing bilateral perihilar infiltrates due to a pneumocystis infection (pneumocystis pneumonia). This fungus causes infection in immunosuppressed patients.19 Biological agents as causes of diseases Nucleic acid Symmetry Envelope Strand Family Example RNA Icosahedral No SS1 Picorna Polio, SS1 B Complex Complex DNA Icosahedral No SS linear Parvo Red cell destruction DS circular Papova Papillomavirus DS linear Varicella-zoster Cytomegalovirus Epstein-Barr virus DS circular Hepadna Hepatitis B Complex Complex DS linear Pox Smallpox SS, single strand; DS, double strand.Table 1.4 Outline classification of viruses (see Figs 2.30 and 2.31)Part 1: Disease, health and medicinePROTOZOA organelles. They ingest nutrients through a cytosome and can reproduce sexually and asexually. Most are able to form cysts when in hostile environments ( Table 1.5). HELMINTHS Helminths or worms can usually be seen by the naked eye. They can enter from contaminated food or Figure 1.15 Leishmania sp., a parasitic flagellate protozoan (arrows). with defective immune systems are more liable to have significant problems with these organisms. bProblems often relate to reactivation because the immune defences are reduced rather than there being a primary infection.Table 1.5 Examples of protozoa that cause human disease Figure 1.16 Ovum from a schistosome, one of the trematodes. What causes disease? 20 water, penetrate the skin or be transmitted by insects (Table 1.6). FUNGI Fungi are eukaryotic cells requiring an aerobic environ - ment. They are more likely to cause significant diseases if a patient is immunocompromised (so-called oppor - tunistic infection) or the normal flora of the mouth, gut or vagina are altered by antibiotics. They are generally classified as superficial, cutaneous, subcutaneous and systemic ( Table 1.7 ).Chapter 1: What disease?Helminth Disease Trematodes (flukes) Schistosoma spp. (various) (skin penetration)Schistosomiasis (liver, gut damage) ( Fig. filariasisTable 1.6 Examples of helminths that cause human disease 21 Biological agents as causes of diseases Fungus Disease or disseminated disease Aspergillus spp. (various) Pneumonia or disseminated disease (Fig. 1.17 ) pneumoniaTable 1.7 Examples of fungi that cause diseasePRIONS AND T RANSMISSIBLE SP ONGIF ORM ENCEPHAL OPATHIES This is a short section but we should flag up our ignor - ance concerning certain diseases and some 'infectious' particles. There is great interest in transmissible spongi - form encephalopathies which can produce progressive and fatal brain damage in humans (kuru), sheep (scrapie) and cows (bovine spongiform encephalopathy [BSE] or 'mad cow' disease). These diseases are experimentally and naturally transmissible with no viruses or bacteria detectable. Prion proteins have been proposed as the cause. They are naturally occurring proteins in most mammals. Their role is not entirely clear, but it seems that they are important in the differentiation of neur - ons. Prion proteins may be induced to change shape, either spontaneously (as in sporadic Creutzfeldt-Jakob disease [CJD]) or if a mutant or foreign prion protein enters the cell (e.g. variant CJD, thought to be the human equivalent of BSE, caught from infected cattle) (Fig. 1.18). The particle is protein without any evidence of nucleic acid. Its neurotoxic effects are thought to be due to abnormal folding, brought about by a mutation of just a few amino acids, which inactivates the normal relationship between the cytoskeletal components and the proteasome. The misfolding seems to be catching and, once it has begun, the normal protein also becomes misfolded. The effects are to cause degeneration of the brain, which develops a sponge-like texture ('spongi - form encephalopathy'). The disease is characterized by problems with coordination, rapidly progressive dementia and death. Figure 1.17 Aspergillus spp.Part 1: Disease, health and medicine What causes disease? 22 If gluten molecules enter the lamina propria of the small intestine in an undigested state they may trigger an immune response. Why this should happen has not yet been fully elucidated, but gliadin, the antigenic component of gluten, is said to be particularly resistant to digestive enzymes. The key to the genetic element is that people with MHC-DQ2 or DQ8 MHC class II molecules on the sur - faces of their APCs can easily bind and display deam - idated gliadin peptides, altered by the tissue enzyme tissue transglutaminase (tTG). The immune response causes enterocyte destruction, local inflammation in the lamina propria and formation of specific coeliac antibodies. Affected people develop coeliac disease when sufficient enterocytes disappear. This causes micro - scopically visible flattening of the intestinal villi and reduces the available absorptive surface. Patients with coeliac disease have malabsorption of all types of food and often complain of diarrhoea, extreme fatigue or abdominal pain. However, presentation is very variable, and often it is the incidental finding of anaemia or investigation for skin rashes or irrit - able bowel syndrome (IBS)-like symptoms that leads to diagnosis. Osteoporosis may develop, and occa - sionally osteomalacia, because vitamin D is poorly absorbed. A particular kind of blistering, itchy skin Disease Target antigen Hypersensitivity type Asthma Pollen, dust mite I Myasthenia gravisAcetylcholine receptorII Pernicious anaemiaIntrinsic factor Rheumatoid arthritis? collagen IVTable 1.8 Examples of inflammatory conditions Figure 1.18 Diffusion-weighted M RI of the brain showing 'bright' areas representing cytotoxic oedema in the cortex of a 60-year-old patient with rapidly progressive dementia. This is a variant of prion disease called Creutzfeldt-Jakob disease. INFLAMMAT ORY CONDITI ONS These cover a broad range of causes and mechanisms. The mechanisms are based on the different types of hypersensitivity reactions (see pages 80-86). The causative allergens can be environmental, genetic or a mixture ( Table 1.8 ). COELIAC DISEASE: GENETIC P REDISP OSITION AND HYPE RSENSITIVITY Coeliac disease is an example of a genetic predisposition to disease. In such patients, inherited characteristics that are dictated by the major histocompatibility com - plex (MHC) class I or II molecules on the surfaces of all nucleated cells (type I) or antigen-presenting cells (APCs, type II) mean that a person is at increased risk of developing a particular disease. Coeliac patients almost always have either MHC molecules of HLA-DQ2 or -DQ8 type displayed by their APCs.Chapter 1: What causes disease?23 Inflammatory conditions rash, dermatitis herpetiformis, is virtually always associated with coeliac disease. Treatment is by withdrawal of the stimulus, gluten, and this is usually sufficient to reverse the process. Patients with coeliac disease often have other 'auto - immune' diseases, such as diabetes mellitus (type 1) and thyroid diseases ( Fig. 1.19 , and see the clinical scenario below). Figure 1.19 Coeliac disease occurs in genetically predisposed individuals who are exposed to gluten molecules that enter the lamina propria in an undigested state. A reaction to gluten in these patients causes enterocyte destruction and local inflammation in the lamina propria. Removal of gluten from the diet is curative and prevents long-term complications of the disease. APC, antigen-presenting cell; DQ8 are at risk of developing coeliac disease if wheat protein enters the lamina propria, possibly following an infection. Some enteroviruses are thought to mimic wheat antigens. An anti-in/f_lammatory enzyme, tissue transglutaminase (tTG) deamidates gliadin, changing its three dimensional shape. The altered wheat protein '/f_its' a groove in the DQ2 or DQ8 MHC antigens. Intestinal epithelial cells present the wheat antigen associated with MHC II antigens to T cells. The T cells delete the epithelial cells bearing the foreign antigen, causing villous atrophy. Removal of wheat from the diet restores normality in 3-6 months. Relapse occurs within days if wheat is eaten again. Lymphocytes LPWhat causes disease? 24 Part 1: Disease, health and medicine Clinical A slightly built 25-year-old woman consulted her family doctor. She complained of fatigue and breathlessness on exertion, worse over the last 6 months. On examination, she was of medium height (1.65 m), low weight (50 kg) (see BMI chart in Fig. 1.20 ) and had pale mucous membranes. Glancing through her medical notes, the GP observed that she had been diagnosed with IBS a few months ago, having complained of abdominal pain and bloating. He also noticed that she had some bruising. Investigations were as follows: lHb: 9.6 (normal probably due to coeliac disease (gluten-induced enteropathy) Management and progress She was referred for investigation at the gastroenterology clinic in her local hospital. The results of the investigations were as follows: l Upper gastrointestinal (GI) endoscopy and anti-tTG positive. lBone density scan showed early osteoporosis.Case study: coeliac disease Pathology Pallor and symptoms suggest anaemia. Iron deficiency due to menorrhagia is the most common cause of anaemia in a young woman, but bruising would be unusual. Of patients with coeliac disease, 40% have IBS. This is a common diagnosis; however, 35-40% of patients with IBS will have coeliac disease if investigated. Microcytic anaemia is the hallmark of iron deficiency and macrocytic anaemia typically indicates folic acid and/or vitamin B 12 deficiency. This patient has a low serum iron and low normal red cell folate, and her anaemia is normocytic, which means that the average red cell size is normal. Prolonged prothrombin time (measured as the INR) is likely to be due to decreased vitamin K causing a deficiency of clotting factors (see Table 1.9 ). The incidence of coeliac disease in the UK is approximately 1:100 people. Many patients have subclinical disease. the typical microscopical appearance in coeliac disease, due to increased destruction of enterocytes by a T-cell-mediated reaction. IgA anti-tTG will diagnose 95% of patients with untreated coeliac disease. IgA anti-endo mysial antibodies are even more specific (99%) but slightly less sensitive and the test is more expensive. (Of patients with coeliac disease 2-4% are IgA deficient, compared with 0.2-0.5% of the general population.) IgG antibodies to tTG or endomysial antibodies are slightly less sensitive but are used if the patient is IgA deficient. Testing for deamidated gliadin is fractionally less sensitive. Her diagnostic endoscopic coeliac disease showed inflammation and crypt hyperplasia. The mild osteoporosis noted on the bone density scan was due to vitamin D malabsorption, with resultant poor calcium absorption.25 Inflammatory conditions Chapter 1: What causes disease?Figure 1.20 Body mass index (BMI) is calculated as follows: weight (kg)/height (m)2. Values from 18.5 to 25 are healthy. Our coeliac patient's BMI is 18.3, so she is fractionally underweight.m 1.8818.5 25 27 1.83 1.78 suspected diagnosis of coeliac disease (gluten- induced enteropathy) was confirmed serologically and by endoscopic duodenal biopsy, and she was advised to exclude wheat, barley and rye from her diet (a gluten-free diet). Oats contain avenin, to which some people with coeliac disease are sensitive. She felt symptomatically improved after 1 month. After 6 months she returns to the clinic. She is bored with the gluten-free diet. She feels well and is putting on weight. She requests a return to a normal diet. Repeat duodenal biopsy after 6 months showed greatly improved microscopical appearances, which were almost normal. She is warned to remain on a strict gluten-free diet, to prevent long-term sequelae. Other members of her family are screened for occult coeliac disease. Should the general population be screened for coeliac disease?A gluten-free diet is difficult to sustain in western countries: wheat is present in bread, cakes, biscuits and sauces. Any trace is sufficient to spark a recrudescence of disease. Social occasions are fraught with difficulty. Short-term problems due to coeliac disease include vitamin deficiencies, growth retardation (in chil - dren), steatorrhoea, malnutrition and anaemia, and osteoporosis. These are relatively quickly improved on a gluten-free diet. She must not give up the gluten-free diet, how - ever, or the problem will recur. The duodenal biopsy may take up to 1 year to return to normal (but just days to show subtotal villous atrophy again after a gluten challenge!). Long-term problems include an increased incidence of malignant gastrointestinal tract tumours, e.g. patients with coeliac disease are at 50-100 times the normal risk of developing malignant lymphoma and there is a moderately increased risk of small and large bowel adenocarcinoma, and squamous carcinoma of the oesophagus. It appears that the increased risk can be averted by adherence to a gluten-free diet. The prevalence of coeliac disease in (95% of patients) and HLA-DQ8 and coeliac disease. All patients with coeliac disease inherit a particular HLA type, which renders them more likely to develop the disease - if negative it is not coeliac disease. However, HLA-DQ2 is common, present in 40% of the world's population, of whom only 3-5% will have coeliac disease, so serology for coeliac antibodies and endoscopic biopsy are recommended for diagnosis.What causes disease? 26 Part 1: Disease, health and medicine Nutrient deficiency Clinical effect Calories Fat loss Muscle wasting Organ atrophy Growth failure in children Protein (kwashiorkor)As above but without fat loss and with oedema and fatty/uni00A0liver Fat-soluble vitamins Vitamin A Epithelial changes affecting eyes, skin and viscera Vitamin D Rickets and osteomalacia Vitamin E Neuromuscular degeneration Vitamin K Haemorrhagic disease of the newborn Effect on anticoagulants Water-soluble vitamins Vitamin C Scurvy (bleeding, poor wound healing, bone lesions) Vitamin B 1 (thiamine)Beri-beri (neural, cardiac and cerebral problems) Vitamin Vitamin B Iron Microcytic, hypochromic anaemia Copper Nerve and muscle dysfunction Iodine Goitre Zinc Growth retardation and infertility Selenium Myopathy and cardiomyopathyTable 1.9 Clinical consequences of malnutrition NUTRITIONAL DISEASES For centuries, the major problems in nutrition were centred around deficiencies. Too little protein resulted in kwashiorkor, whereas too few calories in the first year of life produced marasmus. Other diets lacked one or more vitamins or minerals because the var - iety of foodstuffs was not available. These problems, sadly, still exist in some developing countries but, in the developed world, malnutrition is more likely to be a consequence of bowel problems, other illnesses or psychosocial issues, although nutritional imbalance has become a major public health problem for otherwise healthy people. The key point is that nutritional imbal - ance for normal adults is a choice, and does not have a biological cause. The most common imbalance is ingesting too much. The consequence of excess calorie intake is obesity, with its long-term effects on cardiovascular disease, diabetes, osteoarthritis and some cancers. The other most commonly over-ingested substance is alcohol. Chronic alcoholism is now known to produce most of its damage through direct toxic effects rather than sec - ondary to nutritional deficiencies and results in central nervous system (CNS) atrophy, cardiomyopathy, pep - tic ulcers, pancreatitis, liver damage, varices, testicular atrophy and upper GI tumours. We are now becoming much more aware of the effects of other imbalances in our diet. Too much salt worsens hypertension, too much fat increases the amount of atheroma and the risk of heart attack and strokes, and certain foods (e.g. smoked foods) may increase the occurrence of GI tumours. Metabolic syndrome is a common condition in developed countries and is generally considered to be at least partly due to a mismatch between our nutri - tion and our biochemistry. It is diagnosed when there is abdominal (central) obesity and two abnormalities of raised blood pressure, raised fasting plasma glu - cose, raised serum triacylglycerols or reduced high- density lipoprotein (HDL) levels (criteria International Diabetic Federation 2006 http://www.idf.org). It is considered further in the section on cardiovascular dis - ease because it is a major risk factor. The pathophysiology of metabolic syndrome is com - plex, but it can be induced by eating too much sucrose and fructose (sucrose is the disaccharide consisting of glucose and fructose). It is thought that the fructose is metabolised in the liver to short-chain fatty acids; this overloads the liver, leading to elevated blood tri - acylglycerol levels which induces ectopic fat (i.e. fat around the viscera and in organs not designed for fat storage). Fructose is predominantly metabolised in the liver, in contrast to glucose, which is used by muscle. 27 Genetic causes of disease Chapter 1: What causes disease?Mechanism Examples Reduced ingestion Psychiatric illness Anorexia, e.g. linked to malignancy or chronic illness Food allergy GI disorders Reduced absorption Gut hypermotility Inflammatory bowel damage Pancreatic or biliary disease Achlorhydria Abnormal metabolismMalignancy Hypothyroidism Liver disease excretion Diarrhoea Increased demand Fever Pregnancy and lactation HyperthyroidismTable 1.10 Conditions affecting general nutritionOverprovision of dietary calories compared with energy used in physical activity could also conceivably create an excess of mitochondrial oxidation products and result in insulin resistance, which is a key feature of metabolic syndrome. Other risk factors for metabolic syndrome are increasing age, lack of physical activity and stress. The amount and type of food that we eat is influ - enced by social and psychological factors beyond the scope of this book. There are also genetic factors, including leptin coded for by the LEP gene. This is secreted by adipocytes and acts by reducing food intake and increasing energy expenditure. It is part of a com - plex system including ghrelin, peptide YY and insulin which acts on the brain to influence appetite. Through feedback loops, this aims to balance intake with output and is an example of homeostasis. The food that we eat and the level of exercise are lifestyle choices for most people but some are unfortu - nate and have specific problems with ingesting, absorb - ing, metabolising or controlling excretion of essential nutrients ( Table 1.10 ).These conditions mostly affect general nutrition and this is what you will most commonly see, especially in those with chronic illness. Specific deficiencies are less common, with iron, folate, vitamin D and vitamin B12 probably being most important. If you are work - ing in areas where nutrition is poor then make sure that you are aware of the clinical effects of all of them (Table 1.9). GENETIC CA USES OF DISEASE Genes are so fundamental to the functioning of every cell that it would be hard to think of a disease in which alterations in gene activity did not occur. However, that would not mean that the disease was caused by an abnormal gene; so in this section we are interested in diseases that result from specific gene abnormalities and what might cause those abnormalities. First let us look at some common ones ( Table 1.11 ). INCIDENCE Table 1.11 lists the incidence per 1000 live births of the most common genetic disorders. It is helpful to subdiv - ide them into abnormalities of chromosomal structure or number. The single-gene disorders are due to abnor - malities of structure, which will be inherited in a men - delian fashion. Abnormalities of chromosomal number are not normally inherited. There are several points to highlight. The first is that the incidence relates to live births, which means that genetic abnormalities causing intrauterine death will be under-reported. This principally influences the figures for chromosomal abnormalities, because their incidence in spontaneous abortions and stillbirths is 50% whereas the incidence in live births is 6.5/1000. In spontaneous abortions with chromosomal abnor - malities, around 50% will have a trisomy, 18% will be Turner's syndrome (XO) and 17% will be triploid. The most common condition is X-linked red-green colour blindness, which, fortunately, is only a very minor handicap (and is not an excuse for avoiding his - tology sessions!). Klinefelter's syndrome is due to an extra X chromosome in males (47,XXY). Affected individuals are generally of normal intelligence and are tall, with hypogonadism and infertility. XYY syndrome also produces tall males. They may have behavioural problems, especially impulsive behaviour.What causes disease? 28 Part 1: Disease, health and medicine Condition Estimated frequency/1000 live births Abnormality Red-green colour blindness 80aX Total autosomal dominant disease 10 otosclerosis 3 (XXY) AR (Down's syndrome) 1.5 N XYY 1.5aN Adult polycystic kidney disease 1 AD Triple X syndrome 0.6bN Cystic fibrosis 0.5 AR Fragile learning disability 0.5aX Recessive learning disability 0.5 Neurofibromatosis 0.4 AR Polyposis coli 0.1 AD Trisomy 13 (Patau's syndrome) 0.07 N AD, autosomal dominant; A autosomal N, disorder sex-linked disorder. aNumber/1000 male births. bNumber/1000 1.11 Common genetic disorders In familial hypercholesterolaemia , patients have increased plasma low-density lipoprotein (LDL) levels and a predisposition to developing atheroma at an early age, which gives them an eightfold increased risk of ischaemic heart disease. The primary defect is a defi - ciency of cellular LDL receptors, so that the liver uptake is reduced and plasma levels are two to three times normal. Around 30 different mutations of the LDL- receptor gene have been identified. About 1 in 500 people are affected and they are heterozygotes who have half the normal number of LDL receptors. One in a million people is a homozygote and he or she usually dies from cardiovascular disease in childhood.The incidence of sickle cell disease varies signifi - cantly in different populations and is greatest in groups that have originated in malaria-infested areas. In US African-Americans, the incidence of disease is 1 in 500 and the carrier heterozygous state is 1 in 12. For details on sickle cell disease see page 279. Adult polycystic kidney disease is due to a defect on the short arm of chromosome 16 which is inherited in an autosomal dominant fashion. Both kidneys are enlarged, with numerous fluid-filled cysts and may weigh a kilo - gram or more (normal is 150 g). The patients develop symptoms of renal damage and hypertension in their third or fourth decade ( Fig. 1.21).29 Genetic causes of disease Chapter 1: What causes disease?Triple X syndrome produces tall girls who may have below average intelligence; in addition, although gonadal function is usually normal, there may be pre - mature ovarian failure. Fragile X syndrome was first described in 1969 and is now recognised as the second most common cause of severe learning disability after Down's syndrome. Affected males have a reduced IQ, macro-orchidism, and a prominent forehead and jaw. Heterozygote females can show mild learning disability but counselling is difficult because not all female carriers show the chromosomal abnormality on testing. Turner's syndrome (monosomy X, i.e. 45,X) is a common cause of fetal hydrops and spon - taneous abortion. About 95% of affected pregnancies will abort. Those surviving to delivery will be less severely affected and generally show short stature, webbing of the neck, normal intelligence, infertility, aortic coarctation and altered carrying angle of the arm (cubitus valgus). These disorders all relate to genes in the germ cell lines that give rise to all the cells in the body. Genes can also mutate during life and this is most obvious in various cancers. The mechanisms operating at the gene and cell level in cancers are covered on page 324 of Chapter 13 . Although we have listed the common genetic disor - ders and their inheritance pattern, this does not answer the question: 'How are they caused?' This is really two questions: 1 How does the genetic abnormality produce disease? 2 How does the genetic abnormality arise? Chromosomes, DNA and genes Just to remind ourselves of the basic biology: there are 23 pairs of chromosomes with one of these pairs being the sex-determining chromosomes, X and Y. Each chromosome is formed of two chromatids, joined by a centromere and with telomeres at each end. The appearance of these chromosomes, stained with Giemsa during mitosis, is the basis of classic cytogenetics and karyotyping, and the simplest way to detect changes in chromosome number or structure (see below). Each chromatid is cleverly packaged DNA. If the human genome were constructed as a single straight strand, it would be 6 feet long, yet it fits into a tiny nucleus! DNA is composed of purine (adenine and guanine) and pyrimidine (cytosine and thymine) bases, arranged as pairs in a helical ladder. This DNA helix forms double loops around nucleosomes (globular aggregates of histone proteins) to produce a beaded string structure. This beaded string is coiled into a solenoid , composed of five or six nucleosomes per turn. This is chromatin in its relaxed state. During mitosis and meiosis, there is further condensation involving non-histone proteins. For those who like numbers, the DNA in each human cell contains around 7000 megabase-pairs (Mbp) (1 Mbp = 1 million base-pairs). Only 3% of the genome codes for genes (the exons ). There are around 25 000 nuclear genes and a small but important set of 37 genes in the mitochondria that are inherited exclusively from the mother. There is much interest in the 97% non-coding DNA and its functions, some of which are related to gene regu - lation. You will appreciate that breaks in chromosomes, deletion of segments and point mutations in DNA will have different impacts depending on whether they affect exons or non-coding sections.(Continued )Basic biology Figure 1.21 Adult autosomal polycystic kidney disease. Gradually cystic dilatations of renal tubules and collecting ducts accumulate and distend the kidney, causing pressure atrophy of the renal tissue.What causes disease? 30 Part 1: Disease, health and medicine Haploid cells have only one set of chromosomes, i.e. ' n' as occurs in gametes. Diploid cells have a normal number of chromosomes, i.e. 46= '2 n' as in all somatic cells. Polyploid cells have extra sets of chromosomes, i.e. ' xn'. Aneuploid cells have an abnormal number of chromosomes but not an exact multiple of the haploid ' n' state. Mosaicism is the presence of two or more cell lines that are both karyotypically and genotypically distinct but are derived from the same zygote. These generally arise from post-zygotic, mitotic non-dysjunction. Sex chromo - some mosaicism is more common than autosomal mosaicism. Short region of DNA double helix2 nm form30-nm chromatin /f_ibre of packed nucleosomes'Beads on a string' form of chromatin(Continued )31 Genetic causes of disease Chapter 1: What causes disease? HOW D OES THE GENETIC ABN ORMALITY PRODUCE DISEASE? Genes code for proteins and so the disease patho - physiology will depend on what the normal protein does and how the changed protein functions. Going back to our list of common genetic disorders, we can now list the abnormal proteins and their function (Table 1.12 ). Sometimes molecular biology can seem daunting with a vast amount of detail that can be difficult to relate to clinical practice. Often a way to simplify this is to decide into which category the abnormality falls and then to understand the typical mechanisms oper - ating for that category. The majority of genes code for proteins and proteins can be: lstructural lreceptors or ion channels lenzymes lgrowth regulators. In Chapter 2 , we look at the mechanisms for how genes operate in abnormalities affecting the embryo, our biochemistry and the immune system. We choose examples in the embryo that affect cell differentiation which is structural ; in our biochemistry the examples are linked to enzyme abnormalities and in the immune system the example is the generation of diverse sur - face receptor molecules to detect antigens. The topic of abnormalities in genes affecting growth regulation is covered in Chapter 11 .HOW D OES THE GENETIC ABN ORMALITY ARISE? We need to consider abnormalities of chromosome number separately from abnormalities in chromo - some structure or genes, because different mechanisms operate. Abnormal chromosome number This most commonly occurs because of problems at the anaphase stage of either meiosis 1 or meiosis 2 during production of the gametes. This leads to unequal shar - ing of the chromosome material so that, after fertilisa - tion, one daughter cell will have an extra chromosome (trisomy) whereas the other is missing a chromosome (monosomy) ( Fig. 1.22 ). This is called non-dysjunction and can affect a pair of homologous chromosomes in meiosis 1, or sister chromatids in meiosis 2. It can also occur through delayed movement ( anaphase lag ) of chromosomes, so that one is left on the wrong side of the dividing wall. The cause is unknown but the inci - dence increases with maternal age, as discussed when considering Down's syndrome (page 38 or case study). If non-dysjunction occurs in mitosis of normal tissue, it can result in mosaicism. Polyploidy means that the cell contains at least one complete extra set of chromo - somes. Most commonly, this is one extra set, i.e. 69 chromosomes, or triploidy . Affected fetuses usually die in utero or abort in early pregnancy. It can result from fertilisation by two sperm ( dispermy ) or from fertilisa - tion in which either the sperm or the ovum is diploid because of an abnormality in their maturation divisions. Disease Abnormal protein Function Familial hypercholesterolaemia Low-density lipoprotein receptor Receptor transport Neurofibromatosis type 1 Neurofibromin 1 Growth regulation Adult polycystic kidney disease Polycystin 1 Cell-cell and cell-matrix interactions Cystic fibrosis CF transmembrane regulator Ion channel Sickle cell disease and thalassaemia Haemoglobin Oxygen transport Haemophilia A Factor VIII Coagulation Muscular dystrophy Dystrophin Structural support: cell membrane Fragile X syndrome FMRP RNA translationTable 1.12 Genetic abnormalities and their dysfunctional proteinsWhat causes disease? 32 Part 1: Disease, health and medicine 1\u00b0 spermatocyte Diploid (2N) shown) Crossover occurs between maternally and paternally derived chromatids in prophase 1 In females; halted at this point until ovulation ie duplicated and crossed over but not separated Anaphase I Chromo somal non-disjunction results in 2N and 0N in secondary oocytes In females; halted at this point until fertilisation occurs when large haploid (N) ovum pronucleus is produced to fuse with sperm pronucleus and second polar body (N) is shed Chroma produces abnormal ovum pronuclei and monosomy will result if aected gametes CN, 2C N + 2N, C + 2C N + N, C + C NormalN, C sperm form2\u00b0 oocytes and 2\u00b0 spermatocytes contain 23 chromosomes, each with 2 chromatids Figure 1.22 Abnormal chromosome numbers may arise through problems in Anaphase I and Anaphase 2 of meiosis. Resting cells (and fertilised eggs) have 23 pairs (2N) of single stranded (2C) chromosomes. Dividing cells (and 1\u00ba oocytes/ spermatocytes) have double strands (4C) known as sister chromatids. Highlighted in red are the abnormal secondary oocytes produced by chromosomal non-disjunction in Anaphase produced by chromatid non-disjunction at Anaphase 2 and abnormal fertilized eggs. The left hand side shows normal meiosis for comparison.33 Genetic causes of disease Chapter 1: What causes disease? p arm q arm Break point Reciprocal Two chromatids exchange DNA segments Non-reciprocal One chromatids donates DNA to anotherPericentric Paracentric Generally involves two acrocentric chromosomes New chromatid formed of q arms Key: dissolution of redundant chromosomeDeletion Structural chromosomal abnormalities.What causes disease? 34 Part 1: Disease, health and medicine 46XY Normal male 46XX Normal female 47XXY Male with Klinefelter's syndrome If there is a change in chromosomal number, then the affected chromosome is indicated with a + or -, e.g. 47XX+21 Female with Down's syndrome If there is a structural rearrangement, the karyotype indicates the precise site affected and the nature of the abnormality, e.g. 46XXdel7(p13-ptr) Deletion of the short arm of chromosome 7 at band 13 to the end of the chromosome 46XYt(11;14)(p15.4;q22.3) A translocation between chromosome 11 and 14 with the break points being band 15.4 on the short arm of chromosome 11 and band 22.3 on the long arm of chromosome 14 Mosaicism indicates that two different cell lines have derived from one fertilised egg and the karyotype specifies both cell lines 46XX/47XX+ 21 Down's syndrome mosaic 46XX/45X Turner's syndrome mosaicTable 1.13 Examples of karyotypesAbnormal chromosome structure Abnormalities in chromosome structure occur when chromosomes are inaccurately repaired after breaks have occurred. Chromosomal breakage can happen randomly at any gene locus, but there are some areas that are particularly liable to breakage. The rate of breakage is markedly increased by ionising radiation and certain chemicals, and some rare inherited condi - tions. Structural abnormalities, such as translocations, deletions, duplications and inversions ( Fig. 1.23 ), occur when two break points allow transfer, loss or rearrangement of chromosomal material. Abnormalities in chromosome number and structure have been identified for many years using classic cyto - genetic methods and various karyotypes are associated with specific diseases ( Table 1.13 ). Gene level changes Once we are thinking about single genes and disorders that may be produced by changes in those genes, it is worth reminding ourselves that we do not all have the same genes. At any locus, there may be multiple possible alleles that vary in their frequency with eth - nic origin, depending on their survival advantage. This is normal polymorphism . Over 30% of genes cod - ing for proteins are polymorphic. When patients react differently to diseases, it is now possible to look at their DNA sequence and compare it with the known genes listed in worldwide databases. If there are differences, then it may be relevant because of the known function of that gene, e.g. resistance to HIV occurs in people with a naturally occurring different gene for the T-cell receptor CCR5, due to a 32-bp deletion (32) causing a frameshift mutation. Homozygotes can become HIV positive but do not develop AIDS because the new pro - tein disrupts intracellular signalling. The allele is most common in Finns (16%) and virtually absent in Africa. Many agents are capable of causing mutations, and mutations also occur spontaneously ( Fig. 1.24 ). Physical causes include ultraviolet (UV) light, electromagnetic radiation and atomic radiation. UV light normally links adjacent pyrimidine bases and causes only somatic cell mutation not germline mutation. It is a major cause of skin cancer, especially in red-haired individuals whose lack of pigment allows release of damaging free radicals when exposed to sunlight. Electromagnetic radiation acts by knocking electrons out of their orbits and causes single- and double-strand breaks in DNA and base-pair destruction. This can result in major deletions, translocations and aneuploidy. They have most effect on dividing cells such as sperm and in early embryonic development. Chemical and viral mutagens often result in 35 Genetic causes of disease Chapter 1: What causes disease? cancer and the molecular biology of their mechanisms can be found on pages 323 and 335. Mutations at the gene level can either involve mil - lions of bases or be a point mutation. The factors that affect chromosome structure can also occur at a sin - gle gene level, i.e. segment deletions, duplications and translocations. Point mutations are usually spontan - eous and of unknown cause, but are probably mostly the result of copying errors. Bases may be substituted, inserted, deleted and replicated (amplification). Substitution of one base within a codon may lead to a different amino acid being inserted into the protein and major pathological effects, e.g. sickle cell disease. However, this is not inevitable because there are only 20 amino acids but 64 possible codons (4 \u00d7 4 \u00d7 4), which is the basis of the degeneracy of the genetic code , e.g. an mRNA sequence of GAA or GAG will code for alanine, so some point mutations can alter the codon but have no effect on the amino acid sequence. These are called silent mutations and approximately 25% of point mutations have no effect. As well as coding for amino acids, codons also act as start and stop instructions. UAA, UAG or UGA is used as a stop codon by mRNA. If a point muta - tion produces a stop codon, the amino acid chain will terminate too early and is the effect of about 5% of point mutations. If one or two (but not three) bases are inserted or deleted, this will produce a frameshift mutation with much greater effect, because the code is based on triplets of bases (codons) and so changes dramatically if the groups of three are shifted along to produce a nonsense message. Amplification of sequences of three bases (triplet repeats) is called 'dynamic mutation' and is recognised as the cause in about 20 diseases, 3 examples of which are Huntington's disease, fragile X disease and myo - tonic dystrophy type 1. In each of these diseases, there is 'anticipation' which means that the disease often becomes more severe with each generation or occurs earlier. If the genes are inves - tigated, it is apparent that the number of triplet repeats correlates with the severity. The number needed for severe disease is different in the different condi - tions, with Huntington's disease requiring more than 40 CAG repeats, whereas fragile X disease requires several hundred repeats and is more severe in males. The mechanism is also different with the abnormal gene for Huntington's disease coding for a protein toxic to neurons, whereas the fragile X mechanism blocks transcription by methylating the promoter.MUTATION New sequence in viable cellMultiple breaks, and random joining of strands Repair, using opposite strand as template RESTITUTIONIrreparable damage, transcription impossible DELETIONDNA damaged by: Irradiation Drugs UV light Heat (Spontaneous mutation)Changes Loss of base Alteration of base Bullk lesion AlkylationSingle-strand break Point mutation Double-strand break (s) Cross-linkage Figure 1.24 Causes and types of DNA mutation and their consequences.What causes disease? 36 Part 1: Disease, health and medicine Gene disorders are most commonly produced by mutations in the DNA sequence. These can occur in the germ - line or the somatic cells. Mutations (Fig. 1.25 ) take various forms: lSubstitution of single nucleotide bases, producing missense mutations , e.g. sickle cell anaemia lInsertion or deletion of fewer than three bases, causing a frameshift mutation lCreation of a stop code by a point mutation lAmplification of a sequence of three bases lCopy number variations (CNVs). Epigenetic change : this is modulation of genes without alteration of the DNA sequence. Imprinting : this is an epigenetic process during gametogenesis that switches off an allele so that there is monoallelic gene expression. Single nucleotide polymorphism (SNP ) is a variation in single nucleotides anywhere in the DNA. They can be useful for DNA fingerprinting and other investigations.Basic biology Figure 1.25 Mutations.Normal sequence coding for 3 amino acids (A, B, C) Substitution of a single nucleotide resulting in a dierent amino acid (or could be silent or produce a stop code) i.e. D amino acid instead of B Insertion causing a frameshift resulting in amino acids E and F Ampli/f_ication of a sequence of three bases (triplet repeat expansion)A B B B BC A A AE FD C C37 Genetic causes of disease Chapter 1: What causes disease? Copy number variations CNVs are probably responsible for most of the diversity in normal humans and at least half are involved in gene-coding sequences. As they are so common, it is thought that some may convey an evolutionary advan - tage. They have also been identified in a variety of disorders, such as epidermal growth factor receptor (EGFR) copy number in non-small cell cancer and high CCL3L1 copy number in people with lower suscept - ibility to HIV infection. Single nucleotide polymorphisms Over 6 million SNPs have been identified in humans but only 1% are in coding regions and so they may have less biological effect, although they have been useful in studying inheritance if located near (and inherited with) a known disease-associated gene. This method is known as linkage disequilibrium . Epigenetic change Modulation of genes without alteration of the DNA sequence ( epigenetic change ) is important for homeosta - sis and development, and allows regulation of gene and protein expression through alteration of gene promot - ers and so on, e.g. by methylation of cytosine residues. It is important in cancer progression and treatment. If it occurs as a part of normal development, it is known as imprinting (see later). Imprinting Imprinting silences genes and occurs to some genes during gametogenesis, so that either only the father's or only the mother's allele will be expressed. The mechanisms involved in imprinting differ for differ - ent genes, but they are being intensely investigated because imprinting disorders occur in the assisted conception techniques of in vitro fertilisation and intracytoplasmic sperm injection. The most common disorders of imprinting are Prader-Willi, Angelman's and Beckwith-Wiedemann syndromes. Alterations in non-coding RNAs These are exciting areas of new research because non-coding RNAs are involved in regulation of genes and, hence, cell pathways. There are estimated to be around 1000 genes in humans for micro-RNAs (miRNAs) which are crucial for post-transcriptional silencing of genes. There are even more long non-coding RNAs (lncRNAs) that may be important in diseases such as atherosclerosis and cancer. MULTIFACT ORIAL DIS ORDERS Every new patient is asked about his or her 'family history', the idea being that if the parents and siblings have a particular disease then the patient is at increased risk. Unfortunately, for most diseases it is not known how great that increased risk may be because the inheritance does not follow simple mendelian princi - ples but is rather multifactorial. It is likely that there will be a variety of genes involved that interact with a number of environmental factors. Research into multifactorial disorders adopts a similar approach to single-gene problems. First, it is necessary to identify the diseases with a significant genetic component by comparing the incidence in family groups with that in the general population. This genetic contribution is termed heritability (Table 1.14 ) and some examples are listed below. The next step is to look for genetic, biochemical and immunological features that affected individuals have in common. It has been well established that certain HLA types are associated with particular diseases and this may be helpful in counselling affected families, e.g. in a family with ankylosing spondylitis, a first- degree relative has a 9% risk of developing the disease if HLA-B27 positive but less than a 1% risk if HLA-B27 negative. Disease Estimate of heritability (%) Schizophrenia 85 Asthma 80 Cleft lip and palate 76 Coronary artery disease 65 Hypertension 62 Neural tube defect 60 Peptic ulcer 35Table 1.14 Heritability or the genetic contribution to the aetiology of the disorderWhat causes disease? 38 Part 1: Disease, health and medicine A 41-year-old mother gives birth to a live male infant. She has had two previous normal pregnancies with the same father. Shortly after delivery, the baby seems to be relatively floppy, although he is moving all four limbs and has been crying and feeding successfully. Examination reveals that the baby's head is particularly round, the palpebral fissures are upward sloping and the medial epicanthic folds are prominent. The tongue is enlarged and heavily fissured. The baby's hands are broad and possess only a single palmar crease, whereas the little fingers are short and curved inwards. These features persist over the next few months and there is a delay in the child reaching the early motor milestones. Later, the child does not learn to walk until the age of 3/uni00A0and his speech is delayed until 54/uni00A0months, although/uni00A0by/uni00A0this time the diagnosis has already been/uni00A0made. Question 1 : What is the diagnosis? Answer : Down's syndrome - the physical features are characteristic. Question 2 : What is Down's syndrome? Answer: Down's syndrome is a chromosomal disorder in which the affected individual has trisomy 21. It should be noted that not all of chromosome 21 needs to be present in excess to produce Down's syndrome and that trisomy of a certain portion of the long arm alone will cause the disease. Question 3: Other than confirming the diagnosis in the child, is there any other role for postnatal genetic investigation in this family? Answer: Yes. Occasionally (around 3% of cases), Down's syndrome results from/uni00A0a balanced (robertsonian) translocation in one parent. In this situation, the parent has an abnormal karyotype in which the crucial part of one of the chromosome 21s is translocated on to another chromosome. The parent is phenotypically normal because, although the/uni00A0translocated portion of the chromosome is not in the right place, it is still present and can function normally. However, this means that the germ cells also carry the balance translocation and, when they undergo meiosis, a gamete results/uni00A0in which a normal chromosome 21 is accompanied by the augmented other chromosome, so that gamete has a double dose of the long arm of chromosome 21. (Chromosome 14 seems to be susceptible to acquiring the extra part of chromosome 21.) If a parent has a balanced translocation, they are at particular risk of having another child with Down's syndrome because the underlying cause persists. This is in contrast with the majority of cases in which the mutation is sporadic. Case study: an abnormal baby Read more in Pathology in Clinical Practice Case 26 The ultimate goal is to identify the gene or genes and the environmental factor(s), so that those at particularly high genetic risk could attempt to avoid the relevant environmental hazard. At a simple level, this would mean giving vitamin supplements to pregnant women at risk of producing babies with neural tube defects, or advising individuals with potential 'arteriopathy' to modify their diet and not smoke. Type 1 diabetes is a disease with a wide geograph - ical variation, in which a genetic predisposition and environmental factors seem to interact to produce the clinical manifestations of pancreatic islet cell damage. It is associated with HLA and two haplotypes have a particular association with the disease - DR4-DQ8 and DR3-DQ2 - which are present in 90% of chil - dren with type 1 diabetes. It is clear, however, that the environment plays a significant role, with viruses being the major culprit. Enteroviruses, rotaviruses and, in particular, rubella appear to be the principal candidates.39 Genetic causes of disease Chapter 1: What causes disease? The role of imaging in identifying disease in the unborn baby Imaging, in particular ultrasound, is extensively used in developed countries to identify prenatal disorders. The nuchal translucency scan (NTS) ( Fig. 1.26 ) uses ultrasound to non-invasively measure the amount of fluid collecting subcutaneously in the nape of the fetal neck at 11-13 weeks' gestation. The measurement is combined with blood tests to give a risk estimation for the presence of aneuploidy (an abnormal number of chromosomes). If the pregnancy is high risk, the mother can elect to have a more invasive test such as chorionic villous sampling or amniocentesis to detect a chromosomal disorder in the fetus. One of the most common disorders that NTS may help to identify is Down's syndrome (trisomy 21), which may otherwise have a normal morphological fetal ultrasound.At 18-22 weeks the morphology scan is performed. By this gestational age the fetus is virtually fully developed and large enough for a detailed ultrasound examination of the brain, facial bones, spine, heart, abdomen and limbs to be performed. An abnormal morphology ultrasound can trigger further invasive investigations such as amniocentesis, usually at a tertiary referral centre. Some disorders may be surgically treatable at birth and prenatal identification of these disorders, such as sacrococcygeal teratoma ( Fig. 1.27 ), allows the obstetrician and surgeon to closely monitor the pregnancy at a specialist centre, and plan an elective delivery and subsequent surgery. There are other disorders that may be identified which are untreatable genetic disorders. This allows parents to make informed choices whether to continue or terminate the pregnancy. Some centres will perform fetal M RI to help identify disorders. Imaging in the form of M RI or CT is also used in fetal or neonatal demise (see Fig./uni00A01.10 ) to identify genetic skeletal and visceral anomalies that may explain the death of the child. This also has impli - cations for genetic counselling of the involved families, particularly with regard to future pregnancies.Radiology Figure 1.27 Three-dimensional fetal ultrasound showing a mass arising from the lower back and buttocks of an 18-week-old fetus. This is a sacrococcygeal teratoma, which can be benign or malignant, and is treated with surgical excision at/uni00A0birth. Figure 1.26 (a) A normal nuchal translucency measurement is seen; (b) an abnormally thick nuchal translucency.BASIC DESIGN ANALYSIS FROM 'AN INTRODUCTION TO MECHANICAL ENGINEERING: PART 1' # This chapter is excerpted from An Introduction to Mechanical Engineering: Part 1 by Michael Clifford, Kathy Simmons, Philip Shipway. \u00a9 2006 Taylor & Francis Group. All rights reserved. 4 Learn more1.1 Basic design analysis Forces, moments and couples Although a force cannot be directly observed, its effect can be.A typical example is a force arising from the surface contact between two bodies, e.g. one pushing against the other. T woforces actually occur in this situation as shown in Figure 1.1. One is the 'action' of the man onthe wall and the other is the 'reaction' of the wall on the man.A force arises from the action (or reaction) of one body on another.Solid mechanics 1Basic design analysis Stress, strain and elasticity Beam bending Multiaxial stress and strain TorsionUNIT OVERVIEW Newton's third law tells us that the action and reaction forces in this situation (and generally) are equal and opposite. Figure 1.1 Newton's third law Unit 1 Solid Mechanics Richard Brooks Wall Man\u00ebAction ' of man on wallEqual and opposite 'reaction ' of w all on m an01-Unit 01_001-058.qxd 26/3/09 9:41 AM Page 1Such contact forces occur where bodies interact with each other; however, they can also occur internally within a single body. In this case, it is the microscopic particles, e.g. molecules, atoms,etc. which contact each other and interact with forces between themselves. For this chapter, wewill generally be dealing with macroscopic bodies where the interaction forces occur atexternal surface contacts. Another type of force occurring is that which arises from the remote influence of one body on another, such as the force of gravity. The Earth's gravity acting on a person gives rise to a forceacting at his or her centre of mass. This type of force is termed the person's weight and acts vertically downwards or towards the centre of the Earth. Magnetic attraction is another exampleof a remote (or non-contact) force arising from the influence of a magnetic field on a body. A force of 1 N is that force which, when applied to a mass of 1 kg, will result in an acceleration of the mass of 1 m s /H110022. Thus, in general, a force applied to a body tends to change the state of rest or motion of the body, and the relationship between the resulting motion (acceleration, a) and theapplied force, F, is given by Newton's second law, i.e. F/H11005mawhere m is the mass of the body. However, in this chapter, we will generally be concerned with bodies in equilibrium, where thereis no motion, i.e. static situations. For this to be the case, all forces acting on the body mustbalance each other out so that there is no resultant force (see the next section on 'equilibrium'). A force has both a magnitude and a direction and is therefore a vector quantity which can be represented by an arrow as shown in Figure 1.2. The magnitude of the force isrepresented by a label, e.g. 5 N as shown, or, alternatively, when solving problemsgraphically, by the length of the arrow. The direction of the force is clearly represented by the orientation of the arrow in space such as the angle /H9258to the x-direction. Thus, when considering problems in two dimensions, two scalar quantities are required to describe a force, i.e. its magnitude and direction - in the above case 5 N and /H9258\u00b0 respectively. T o aid the analysis of systems with several forces, the forces are oftenresolved into their components in two perpendicular directions, as shown in Figure 1.3 for the force F. The x- and y-directions are commonly chosen, although resolving in other (perpendicular) directions relevant to the boundaries of a body may be moreconvenient for a specific problem. From Figure 1.3 the magnitudes of the twocomponents in the x- and y-directions are given by: F x/H11005Fcos /H9258 Fy/H11005Fsin /H9258 (1.1) With this representation there are still two scalar quantities describing the force, in this case, Fxand Fy. This is illustrated in Figure 1.4, where the moment, M, of force F, about point O, is given by: M/H11005F.d (1.2) An example of a device which creates a moment is a spanner, also shown in Figure 1.4. The hand applies the force, F, at one end and imparts a moment, M= F. d, on the nut at the other end, O. A couple is a special case of a moment of a force and arises from a pair of equal and opposite parallel forces acting on a body but not through the same point, as shown inFigure 1.5. If the two forces, F, act at a distance dapart, then the magnitude of couple C, about any point, is given by: C/H11005F.d (1.3)The SI unit of force is the newton (N).An Introduction to Mechanical Engineering: Part 1 2Figure 1.2 Force as a vector Figure 1.3 Resolving the force vector into components The moment of a force about a point is equal to the product of the magnitude of the force and the perpendicular distance from the point to the line of action of the force. Figure 1.4 Moment of a force applied by a spannerF 5N Fy=F 9:41 AM Page 2As the two forces, F, in Figure 1.5, are equal and opposite, their sum is zero and the body on which they act is nottranslated. However, they do create a couple which tends to rotate the body. Therefore, a consequence of a couple acting on a body is to impart pure rotation.For this reason, the term 'pure moment' is often used instead of 'couple'. An example of a device which creates a couple is a wheel nut wrench, also shown in Figure 1.5. Here, the hands apply forces, F , in and out of the page at both ends of one armof the wrench, imparting a turning couple on a locked nut at O. When a couple or moment is applied at a point on a body its effect is 'felt' at all other points within the body. This can be illustrated with the cantilever beam shown in Figure1.6 where a couple of 5 kN m is applied at end A. If we assume that the couple is createdby the application of two equal and opposite 5 kN forces, 1 m apart, acting through a rigidbar attached to the beam at A, we can determine the influence that these forces also have atpoints B and C, at 5 m and 10 m from A respectively. Taking moments about B: M B/H110055 kN.(5 m /H110010.5 /H1100552.5 /H1100247.5 /H110055k Nm In both cases the effect, i.e. a 5 kN m turning moment, is felt at B and C. In other words,the turning moment felt on the bar is independent of the distance from A. Conditions of equilibrium For a body to be in equilibrium, it must not translate or rotate. Considering movement in oneplane only (i.e. a two-dimensional system), this means the body must not move in the x- or y-directions or rotate about its position. Three conditions are required of the applied forces for this to be the case. Resultants of forces When a number of forces act at a point on a body, their resultant force can be determinedeither algebraically or graphically. Algebraic method The algebraic method for determining the resultant of a number of forces has the following steps: ii(i) Resolve all forces into their x- and y-components. the x-components ( /H9018Fx) and the y-components ( /H9018Fy). (iii) Determine the magnitude and direction of the resultant force from /H9018Fxand /H9018Fy.. The following example illustrates the method. Figure 1.7 shows three forces FA,FBand FCacting at a point A. Determine the magnitude and direction of the resultant force at A.Solid mechanics 3Figure 1.5 Couple and wheel nut wrench (forcesact in and out of page) Figure 1.6 Influence of a moment or couple acting at a point These three conditions of equilibrium are: (i) the sum of all the acting forces in the x-direction must be zero, i.e. /H9018Fx/H110050. (ii) The sum of all the acting forces in the y-direction must be zero, i.e. /H9018Fy/H110050. (iii) The sum of all the moments about any point must be zero.F F FFd/2 d/2O O 5m1m 5mMoment/co uple of 5kNm felt at both B and C and all points along the be am C B A 5kN5kN01-Unit 01_001-058.qxd 26/3/09 9:41 AM Page 3The components forces act in the /H11002ve xand /H11002ve the resultant force is, /H9258/H11005tan/H110021/H20898/H20899 /H11005tan/H110021/H20898/H20899 /H110056.2\u00b0 to the negative x-direction as shown in Figure 1.7. Graphical Method The procedure for the graphical method of determining the resultant of a number of forces is shown in Figure 1.8 for the problem given above. Firstly, draw to scale each of the three vector forces, FA,FBand FC, following on from each other, as shown in the figure. The resultantforce, F R, is the single vector force that joins the start point A to the finishing point B, i.e. that closes the polygon of forces. Its magnitudeand direction ( /H9258) may be measured off from the scale vector diagram. (NB: it does not matter in which order the three vectors are drawn in the diagram.) The graphical method is useful to give a quick approximate solution, whereas the algebraic method normally takes longer but will yield an exact result./H110021.196 /H5007/H1100211/H9018Fy/H5007/H9018FxAn Introduction to Mechanical Engineering: Part 1 4Figure 1.7 Resultant of a number of forces acting at a point Figure 1.8 Resultant of forces acting at a point - graphical method 60\u00b0A6.2\u00b0 FB=8k NFA=4k N 9:41 AM Page 4Frictional forces Consider a solid body, i.e. a block, weight W, resting on the ground but in equilibrium under the action of an applied force, FA, as shown in Figure 1.9. In general, where the body contacts the ground there will be a reaction force (from the ground) acting on the body. This reactionforce has two components as follows: i(i) a tangential force, F, termed the friction force ; (ii) a normal force, N. As the body is in equilibrium, these two components of the reaction force counterbalance the applied force, F A, and the weight of the body, W,t o prevent any movement. (NB: the body's weight is given by its mass /H11003the acceleration of gravity, i.e. Mg and acts at the centre of mass.) The frictional force, F, exists because of the rough nature of the contact surface between the body and the ground. In some cases, where thecontact is smooth or lubricated, the frictional force will be negligible andthere will be a normal reaction force only. This is a special case only foundunder certain circumstances, e.g. contact surfaces in a lubricated bearing. If the applied force, F A, is slowly increased, the frictional component, F, will also increase to maintain equilibrium.At some point the applied force will become sufficiently large to overcomethe frictional force and cause movement of the body. Up to this point of 'slip' between thesurfaces, a relationship exists between the frictional force and the normal reaction force as follows: (1.4) Note the 'less than or equal to' sign indicates that a limiting condition can occur. This limitingcondition is the point of slip, at which point F/H11005/H9262N. Thus, the maximum value of F, i.e. the limiting frictional force, is proportional to N. The constant of proportionality, /H9262, is termed the coefficient of static friction and its value depends on the roughness of the two contacting surfaces and hence the contacting materials. T ypical values are in the range 0.1 - 1.0, where alower value indicates a smoother surface and reduced friction.Values outside this range canoccur for some material contact surfaces e.g. lubricated surfaces can have values lower than 0.1 while stick-slip surfaces, such as rubber on a hard surface, can have values in the range 1-10. A number of important observations can now be stated about the frictional force, F: (i)Fcannot exceed /H9262N; (ii) the direction of Falways opposes the direction in which subsequent motion would take place if slip occurred; (iii) the magnitude of Fis independent of the size of the contact area between the contacting surfaces; (iv) if slip does occur, the magnitude of Fis independent of the velocity of sliding between the two contact surfaces. Although in this chapter we will be concerned primarily with static friction up to the point of slip, if slip does occur, the coefficient of dynamic friction (also called the kinetic frictionalcoefficient, /H9262 k) is usually marginally lower than the coefficient of static friction. In the sliding (i.e. slipping) condition the limiting form of equation (1.4) still applies, i.e. F/H11005/H9262 kN. Free body diagrams T o analyse the forces in more complex systems, such as assemblies of components or structures containing many different elements, it is normal to break down the problem into separate freebodies. Figure 1.10 shows two bodies, body A positioned on top of body B which itself is located on the ground. T o analyse this problem for forces, we separate the two bodies and draw on each allthe external forces acting as shown in the figure. The aim is to solve for the unknown reactionforces between the two bodies and between body B and the ground.F/H11088/H9262NSolid mechanics 5Figure 1.9 Frictional force (F) and normal force (N) at point of contact between a block and thegroundFA F NG W01-Unit 01_001-058.qxd 26/3/09 9:41 AM Page 5Thus, for body A, the external forces are its weight, WA, acting at its centre of mass (WA/H11005MA.g) and the vertical reaction force, RB, from body B. There is no horizontal friction force at the contact between the bodies because there are no horizontal forcesacting. For body B, there is also its weight, W B/H11005MB.g, again acting at its centre of mass, the action force, RA, acting downwards from A and the reaction force, RG, acting upwards from the ground. Newton's third law tells us that RA/H11005RB, i.e.'for every action there is an equal and opposite reaction'. We can now look at the equilibrium of each body in turn: For body A, /H9018Fy/H110050 /H11030RB/H11005WA and for body B /H9018Fy/H110050 /H11030RG/H11005RA/H11001WB/H11005RB/H11001WB/H11005WA/H11001WB It is no surprise that the reaction force at the ground is equal to the sum of the weights of the two bodies. This is necessary to maintain the system in equilibrium. Although this is a simple problem, it clearly illustrates the value of separating the two bodies, allowing us to solve for the unknown reaction force between the bodies. Thediagrams of each separate body are referred to as freebody diagrams (FBDs). General design principles A number of general principles related to force analysis can be applied in design to simplify problems. In this section we will consider several of these principles. Principle of transmissibility A force can be moved along its line of action without affecting the static equilibrium of thebody on which it acts. This principle of transmissibility is illustrated in Figure 1.11 where theequilibrium of the body is the same whether it is subjected to a pushing force or a pullingforce acting along the same line of action. It should be pointed out that, although staticequilibrium is the same in each case, the internal forces within the body will be different. Statically equivalent systems A load system can be replaced by another one, provided the static behaviour of the body onwhich they act is the same. Such load systems are termed statically equivalent . Figure 1.12 shows a number of loads (five in total) each of 5 kN acting on a beam structure in such a way as to be evenly distributed along the length of the beam. If we are not interested inAn Introduction to Mechanical Engineering: Part 1 6Figure 1.10 Free body diagrams Key points about free body diagrams: (i) A free body diagram, as the name implies, is a diagram of a free body which shows allthe external forces acting on the body. (ii) Where several bodies (or subcomponents) interact as part of a more complex system, each body should be drawn separately, and interacting bodies should be replaced at their contact points with suitable reaction forces and/or moments. Figure 1.11 Principle of transmissibilityWBBA WA WBBA WA RB RA RGa b F Push=F Pull01-Unit 01_001-058.qxd 26/3/09 9:41 AM Page 6the internal forces developed within the beam but only the equilibrium of the beam as a whole, then this loading system can be replaced by a simpler point load of 25 kN applied at the centre of the beam. The two load systems are statically equivalent and the equilibrium conditions for the beam will apply, whichever of the loading systems is assumed. Two-force principle This is illustrated in Figure 1.13 where Body A is subjected to two forces, F1and F2,notacting along the same line of action. Taking moments about point A, the application point for F1, it is clear that there is a resultant moment and the body cannot be in equilibrium. For it to be in equilibrium, the distance dmust be zero. This is the case for Body B, where F1and F2act along the same line and cannot therefore generate a moment. In addition, F1must equal F2. Three-force principle This is illustrated in Figure 1.14 where Body A is subjected to three forces, F1,F2 and F3not acting along the same line of action. Taking moments about point O, where the lines of action of F1and F2meet, it is clear that there is a resultant moment arising from F 3and the body cannot be in equilibrium. For it to be in equilibrium, the distance dmust be zero. This is the case for Body B, where the lines of action of F1,F2and F3meet at O and there cannot be a resulting moment. In addition, the vector sum of F1,F2and F3must be zero. Pin-jointed structures A pin-jointed structure, as shown in Figure 1.15, comprises an assembly of several members, which are joined together by frictionless pin joints. Such a joint cannottransmit moments due to the free rotation of the pin . This simplification is found in practice to be valid for many structures and enables the analysis of forces within thestructure to be significantly simplified. The objective is usually to determine theforces occurring at each of the pin joints in the structure, and this is achieved byconsidering equilibrium of individual members and the structure as a whole.A solution can be obtained algebraically or graphically.Solid mechanics 7Figure 1.12 Statically equivalent The two-force principle states that, for a two-force body (i.e. a body with forces applied at two points only) to be in equilibrium, both forces must act along the same line of action. The three-force principle states that for a three-force body (i.e. a body with forces applied at three points only) to be in equilibrium, the lines of action of these forces must pass through a common point.Figure 1.13 Two-force g magnitude of F1=F2)Body A Body BF2 F2F1F1 a bA B O d Not in eq In eq uilibrium (providin solution to a pin-jointed structure problem Consider a wall bracket comprising a simple two-bar pin-jointed structure, ABC, as shown in Figure 1.16. Both members are of equal length andinclined to the horizontal at 45\u00b0. The joints at A, B and C are all pin joints,and the lower member, BC, is subjected to a vertical downward load, P, acting half way along its length. The weights of the members may beignored. The aim is to determine the forces at A, B and C in terms of theapplied load P. The first stage is to draw the freebody diagrams for the two members, also shown in Figure 1.16. Member AB is a two-force member as forces act only at the two ends of the member. For equilibrium of a two-force member, the directions of theforces, R Aand RB, must be along the same line, i.e. along the axis of the member.As AB is clearly in tension, the directions are as indicated in thefigure. Note that for some problems it may not be possible to establish onsimple inspection whether a member is in tension or compression. This isnot a problem, because if the forces are drawn incorrectly, say incompression rather than tension, the analysis will, in that case, result in anegative magnitudes for the forces. Moving to member BC, this is a three-force member with forces acting at both ends and the third force, P, acting at the centre of the member. The three-force principle could be used for this member to establish thedirections of the forces; however, we will not do so, as we are solving theproblem algebraically. R Bacting on BC at joint B must be equal and opposite to RBacting on AB at joint B (Newton's third law).As we do not know the direction of theforce at C, we will give it two unknown components, H Cand VC, as shown in Figure 1.16. Now looking at the equilibrium of BC: horizontal forces HC/H11002RBcos45\u00b0 /H110050 /H11030HC/H110050.707 RB (1.5) vertical forces about C and RA/H11005RB/H110050.354 P Both RAand RBact at 45\u00b0 to the horizontal, i.e. along the line of AB. Substituting for RBinto (1.5) and (1.6) gives, HC/H110050.25Pand VC/H110050.75PAn Introduction to Mechanical Engineering: Part 1 8Figure with respect to the horizontal is: tan /H9258C/H11005/H5007HVC C/H5007/H11005/H50070 0. .7 25 5P P/H5007/H110053 /H9258C/H1100571.6\u00b0 Thus, the magnitudes and directions of all three forces at the joints A, B and C have been determined. Geometrical solution to a pin-jointed structure problem Figure 1.17 shows a schematic model of a crane boom supported by a pin-joint at one end,A, and a cable attached to the other end, C, inclined at anangle of 30\u00b0 to the horizontal. The member is assumed to be weightless butcarries a vertical downwards load, P, part way along its length at position B. The aim is to determine the tension, T, in the cable and the magnitude and direction of the reaction force, R A. The first stage is to draw the freebody diagram (to a suitable scale) of the member ABC, also shown in Figure 1.17. The freebody diagram shouldinclude all forces acting on the member. The directions of Pand the cable tension, T, are known and can be drawn in immediately. However, the direction of R Ais not known. T o find this, the three-force principle can be used because the member has three forces acting on it and, for equilibrium, allthree forces must meet at a point. Thus, the line of action of Pshould be extended to intersect the line of action of Tat point O. Then the line of action of R Amust also pass through the point O to satisfy the three-force principle.AO therefore defines the direction of RA, shown in the figure as the angle /H9251to the horizontal. From a scale drawing, /H9251can be measured as 44\u00b0, or alternatively this value can be calculated by trigonometry in triangles ABOand BCO. The above stage only yields the direction of the unknown force, R A. Its magnitude and the magnitude of the tension T are still required. T o find these,a 'force polygon' is drawn. In this case it is actually a force triangle as there areonly three forces, but the general term is 'force polygon'. The trianglecomprises the vectors of the three forces, P,Tand R A, drawn following on from each other to form a closed tr iangle as shown in Figure 1.17. The triangle must close as the member,ABC, is in equilibrium under the action ofthe three forces and their sum must be zero. T o draw the triangle, firstly drawthe vector representing Pvertically downwards. Its end points define two points of the triangle. Next, at one end of the vector P, draw a line representing the direction of T.At the other end of P , draw a line representing the direction of R A(NB: it does not matter which end each of the force directions are drawn from, as long as it is a different end for each force). Thesetwo lines intersect at the third point of the triangle and the lengths of theother two sides (not P) give the magnitudes of Tand R Arespectively. Note also that the direction of RAis upwards as it must close the triangle. Measuring the force triangle gives the magnitudes of Tand RA, in terms of P, as, T/H110050.75Pand RA/H110050.9P These magnitudes can alternatively be found by using trigonometry as one side and three angles of the triangle are known, allowing the two unknown sides to be determined using thesine rule (see 'Trigonometry' overleaf).Solid mechanics di agram Force poly gonABAB C OCable P 26/3/09 9:41 Page 9Trigonometry Trigonometry is often to solve pin-jointed structure problems. Both the 'sine rule' and the 'ccosine rule' may be needed to solve for unknown sides and angles in vector polygons (ortriangles). These rules are given in Figure 1.18.An Introduction to Mechanical Engineering: Part 1 10Figure 1.18 Useful trigonometric relationships Free body diagrams The inclined edge of block B rests on top of the inclined edge of block A, as shown in Figure 1.19.A horizontalforce, P, is applied to block A. Block A can slide horizontally along the ground and block B can slidevertically against the wall.All surfaces are frictionalcontacts with a coefficient of friction /H9262.The masses of the blocks are M Aand MBrespectively. Draw the free body diagrams for both blocks when they are just on the point of slipping under the action of thehorizontal force P. The solution is also given in Figure 1.19. The two blocks are separated and drawn as free bodies.All contact surfaces containa normal reaction force and a parallel friction force.As thesystem is on the point of slip, the frictional force /H11005/H9262/H11003 normal reaction force at each contact surface. Note that where thetwo blocks contact each other, there are equal and oppositereaction and friction forces (Newton's third law). In thisproblem, there are two pairs of equal and opposite forces N and /H9262Nwhere the two bodies contact. Using the principle of statically equivalent systems, all forces are drawn as point forcesfor simplification. In reality, they will be distributed over thecontact surfaces. The weight of each body is a force acting atits centre of mass. Figure 1.19 Free body diagrams worked exampleA CB aSine rule bc a ba sin Ab sin Bc sin C\u2014\u2014=\u2014\u2014=\u2014\u2014 Cosine rule a2=b2+c2-2bccos A a Page 10Solid mechanics 11 Equilibrium and frictional forces Figure 1.20 shows a ladder of weight 500 N resting on two surfaces at points A and B. Dimensions are as indicated.The coefficient of friction at all contactingsurfaces is 0.4. Determine the maximum height to which a man of weight 1200 N can walk up the ladder before slip occurs. General solution procedure (see Figure 1.2 0): (i) Draw the freebody diagram of the ladder. (ii) At the point of slip, assume the man has climbed to a height, h, above the base point, B. (iii) Draw frictional forces acting opposite to the direction of slip.(iv) Assume both points A and B slip at the same time. (v) At slip, assume friction force /H11005/H9262/H11003 normal force. (vi) Use equilibrium of forces and moments to solve for unknown forces and height h. Figure 1.20 shows the free body diagram of the ladder with all forces acting, when on the point of slip. Solving for the angle /H9258 sin /H9258/H11005 /H50076 8/H5007/H110050.75 /H11030/H9258/H1100548.6\u00b0 and (1.8), we obtain N/H11005948.9 N and R/H11005781.6 N Taking moments about B /H11002500 cos /H9258.5/H110021200 cos /H9258.(a)/H11001R.(8)/H110050 /H11030a/H110055.8 m (i.e. distance up the ladder) Therefore, height of man, his h/H11005asin /H9258/H110055.8 (0.75) /H110054.35 mFigure 1.20 8m 6m BA 2m 3m N N01-Unit 01_001-058.qxd 26/3/09 9:41 AM Page 11An Introduction Mechanical Engineering: Part 1 12 Pin-jointed structure - algebraic solution The pin-jointed structure, shown in Figure 1.21, supports a block, E, of weight 14.4 N. Neglecting the weights of the members of the structure, use an algebraic solution to determine the vertical and horizontal components, and the magnitudes and directions of the resultant forces at the pin joints A and C on member AFC. Firstly, draw the free body diagrams of each member in the structure. These are shown in Figure 1.21. Here tension in the cable, T/H11005weight of the block E/H1100514.4 N. Equilibrium of the pulley: vertical forces V D/H11002T/H110050 /H11030VD/H11005T/H1100514.4 N horizontal forces HD/H11002T/H110050 /H11030HD/H11005T/H1100514.4 N Equilibrium of member BCD: vertical forces VB/H11002VC/H11002VD/H110050/H11030VB/H11005VC/H1100114.4 (1.9) horizontal forces HB/H11001HC/H11002HD/H110050/H11030HB/H11005/H11002HC/H1100114.4 (1.10) Moments about D VB(450) /H11002VC(300) /H110050/H11030VB/H110050.667 VC (1.11) From (1.9) and (1.11), VC/H11005/H1100243.2 N (the negative sign indicates that VCacts in the opposite direction to that drawn) Equilibrium of member FBD: vertical forces V C/H11002VA/H110050 /H11030VA/H11005/H1100243.2 N horizontal forces T/H11002HC/H11001HA/H110050/H11030HC/H11001HA/H1100514.4 (1.12) Moments about F HC(50) /H11002HA(150) /H110050/H11030HC/H110053HA (1.13) From (1.12) and (1.13), HA/H110053.6 N and HC/H1100510.8 N The magnitude of the resultant forces at A of these with respect to the horizontal are: .2 8/H5007/H110054 /H9258C/H1100575.96\u00b0 These directions are also illustrated in Figure 1.21. Note that the member AFC is a three-force system and the resultants, RAand RC,and the tension, T, must all meet at a point, as indicated.Figure 1.21 Pin-jointed structure - Pin-jointed structure - graphical solution The pin-jointed structure shown in Figure 1.22 supports a weight of 60 kN. Neglecting the weights of the members of the structure, use a graphical solution to determine the reaction force at point C and the tension in the cable. Since the directions of the weight, W, and the cable tension, T, are known, a graphical method provides a quick solution.Referring to Figure 1.22, the steps in the solution procedureare: (i) Draw the free body diagram of the whole structure (to a suitable scale) showing all forces acting on it. (ii) Using the three-force principle, the forces T,Wand R C must meet at a point. Thus extend the lines of Wand Tto meet at point O. Joining points O and C, gives the direction of force R C. (iii) Either measure or use trigonometry to determine the angles /H9251and /H9252, giving /H9251/H1100529.05\u00b0 and /H9252/H1100515.52\u00b0. Note that, so far, these angles give the directions of Tand RC but not their magnitudes. (iv) Draw the force polygon (see Figure 1.22) as follows: - First, draw a vertical vector representing W(the known force). - From the top and bottom end of W, draw lines representing the directions of Tand RC(NB: it does not matter which end each of the force directions aredrawn from, as long as it is a different end for eachforce). - Extend the lines of Tand R Cuntil they intersect at a point. This defines the force polygon (or triangle in thiscase because there are only three forces). Theintersection point gives the lengths of the vectors andhence the magnitudes of Tand R C. - Note that RCmust act upwards to close the polygon, i.e. ensure equilibrium. (v) From the force polygon, measure the magnitudes of T and RCas, T/H1100568.6 kN and RC/H11005124.5 kN Figure 1.22 worked examplea b cW0.3m 0.6m0.5m 0.5m RCFree body diagram Force polygon RCLine of RC Line of T 13INTRODUCTION: COMPUTER PROGRAMMING FROM 'PROCESSING: AN INTRODUCTION TO PROGRAMMING' # This chapter is excerpted from Processing: An Introduction to Programming by Jeffrey L. Nyhoff, Larry R. Nyhoff. \u00a9 2017 Taylor & Francis Group. All rights reserved. 5 Learn morexxiiiIntroduction: Welcome to Computer Programming Congratulations on your decision to try computer programming! Why Learn to Program? It may be that programming a computer is something that you aren' t sure you are able to do or even want to be able to do. If so, then we hope that this book changes your mind by provid - ing you with a friendly, straightforward, and solid introduction to computer programming. Being a computer \" u ser\" o nce meant writing programs for the computer. However, the emergence of personal computers beginning in the late 1970s was accompanied by a growth in the availability of \" a pplication\" s oftware, such as word processors and spread - sheet programs. Such software is written for \" e nd users,\" w ho do not need to be computer programmers. Thus, the concept of a computer user as a programmer gradually shifted to that of someone who uses software written by others . However, there are still some very good reasons for learning about computer program - ming in the current era of computing. L earning computer programming teaches you about what software really is. Computer software programs may seem complicated and mysterious. However, asyou gain experience with simpler examples of computer software, you will start tounderstand the fundamental nature of computer software. This is important knowl - edge, given that more and more areas of our lives are affected by computer software. L earning computer programming gives insight into what a programmer does. Someday, you may find yourself working on a team that includes a computer pro - grammer. Knowing something about what is involved in programming is likely tohelp you communicate and collaborate better with programmers. I nstead of changing to fit the software, you can design how the software works. When we use software that other people have written, we are often forced to adaptour ways of thinking and working to the way that the software has been designed. Incontrast, when you write your own software, you get to decide what the software doesand how it works.xxiv Introduction: Welcome to Computer Programming You cannot always count on someone else to create your software. Computer software is needed by so many people and in so many ways that there can never be enough people with programming abilities to develop all the software that users would like to have. Thus, knowing enough about computer programming to create or customize software may help you to provide software that you or others need and would not otherwise be available. Even a little knowledge of computer programming is better than none at all. Many people have no experience at all with programming. Thus, having even a little knowl - edge of computer programming puts you a step ahead in terms of understanding computing. Computer programming might already be, or turn out to be, something that you need to learn. Many areas of study and careers are enriched by a basic knowl - edge of computer programming, and a growing number are starting to require it. Traditionally, programming has paired well with math, science, and business. But in the present era, interests and skills in arts and media also are excellent pairings with computer programming. Today, computer programs are used to solve a very wide range of problems and serve a wide variety of purposes in nearly every area of human society. Computer programming is a creative activity. Computer programs are often used to solve problems, but computer programming is also a creative activity. Thus, you might find yourself writing a program as a means of expressing yourself or simply out of an urge to create something new. More and more artists and designers are learning to program, especially those who work in electronic media. Computer programming might turn out to be something that you are good at and enjoy doing. You will never know this without giving programming a try! These are just a few of the many good reasons for learning about computer programming. What Is Programming? Consider a \" program\" that you might be given at a band, orchestra, or choir concert. This program simply lists the order in which the musical numbers are performed. This notion of putting things in a certain sequence is one of the fundamental concepts of computer programming. Another useful analogy is that of a recipe, where certain actions with various ingredi - ents are performed in a certain order to achieve a certain result. A computer program is much like a recipe, involving the performance of a specific sequence of actions using cer - tain \" ingredients\" (items of information) for the purpose of producing certain desired results. In computing, such a recipe is also known as an algorithm .Introduction: Welcome to Computer Programming xxv A Tour of Processing We will give a more detailed introduction to Processing in the first chapter, but let' s start here with a brief tour of Processing that will give you a little taste of what it' s like and where we' re headed in this book. Do not worry if you do not understand all the details that are presented in this tour; everything in this introduction will be explained more fully in the coming chapters. Processing is an open-source project. It can be downloaded for free from https://processing.org and is available for Windows, Mac, and Linux computers.* When you open Processing, what you see is Processing' s integrated development envi - ronment or IDE: An IDE is simply a software environment in which you can develop and test programs. Compared with most IDEs, the Processing IDE is much simpler to use. Officially, the Processing IDE is known as the \" Processing development environment\" or PDE. Here in the PDE, you can enter programs and have Processing execute them. \" Hello, World!\" Example It is traditional in computer programming to begin with a program that simply displays the words \" Hello, World!\" Let' s create such a program in Processing. In the Text Editor section of the Processing window, * As of this writing, the latest official release is version 3.3.xxvi Introduction: Welcome to Computer Programming carefully enter the following: print(\"Hello, World!\"); For now, as you type, ignore any error messages that appear on a red bar in the Message Area of the Processing window: After you finish typing, these error messages should disappear. The top portion of the Text Editor area of the Processing window should now resemble the following: You have now written a line of code in Processing. This particular line of code is also an example of what is called a statement , because it is a complete instruction to perform a certain action. When we run this program, Processing will carry out this instruction by performing the action it describes. Next, click the Run button, which is found in the area of the Processing window known as the toolbar: You should see \" Hello, World!\" displayed in the black section at the bottom of the Processing window. This section of the Processing window is known as the console . Introduction: Welcome to Computer Programming xxvii If you don' t see the above displayed in the console, then here are some things to check in your code: The word print must be written entirely in all lowercase letters. Make sure you have both a left and a right parenthesis. The message to be displayed, \" Hello, World!\" must be enclosed in a pair of double quotes. The statement you entered must end with a semicolon. Once you see the \" Hello, World!\" greeting, you have successfully written and run your first program! You may now stop the program by pressing the Stop button: Notice the scroll bar on the right edge of the console: This bar allows you to scroll through the lines of the console output. There are occasions when it is helpful to enlarge the console area to see more of this program' s output. To do this: 1) Click and drag on the edge of the Processing window to enlarge this window. 2) Click and drag upward on the Message Bar to enlarge the console. xxviii Introduction: Welcome to Computer Programming You should now be able to view more lines of the console output without having to scroll. A Processing \" Sketch\" Displaying information in the console, such as our \" Hello, World!\" greeting, can be very useful when programming. However, there is a reason why programs in Processing are also called \" sketches\": programming in Processing can also involve drawing . As you may have noticed, when you clicked on the Run button, Processing also opened what is called the display window . Within this window is a rectangular gray area that we will refer to as the canvas because it can be drawn on using Processing functions. By default, a Processing sketch will render (generate) a canvas that consists of 100 col - umns of pixels and 100 rows of pixels. A pixel is a small square of a single color. In this case, all the pixels that make up the canvas are gray. The columns of pixels are numbered from left to right, beginning with zero. Likewise, the rows of pixels are numbered from top to bottom, beginning with zero. Thus, each pixel has a unique location, described by the column and the row in which it is located. For example, the pixel in column 50 and row 50 is near the center of the current canvas. Drawing an Ellipse Let' s delete our current statement that instructed Processing to display \" Hello, World!\" in the console. The Text Editor area of the Processing window should now be empty: Now, enter the following into the Text Editor area of the Processing window: ellipse(50, 50, 20, 10);Introduction: Welcome to Computer Programming xxix This is a statement instructing Processing to draw an ellipse. It includes four items of infor - mation that are needed to specify the ellipse that is to be drawn. The first and second items of information specify where the center of the ellipse should be: the pixel column and the pixel row, respectively. In the current statement, we have cho - sen a pixel location of column 50 and row 50, the center of the canvas: ellipse(50 , 50 , 20, 10); The third and fourth items specify the size of the ellipse to be drawn: the width of the ellipse in pixels and the height of the ellipse in pixels, respectively. In the current statement, we have chosen for the ellipse a width of 20 pixels and a height of 10 pixels: ellipse(50, 50, 20, 10 ); Notice that we have added a space after each comma. This spacing is not required, but this kind of \" whitespace\" can make code easier to read. In most cases, Processing is very forgiving of adding extra spaces and blank lines for this purpose. Press the Run button. You should now see an ellipse with its center located at pixel column 50 and pixel row 50, with a width of 20 pixels and a height of 10 pixels: You may now stop the program by pressing the Stop button: Alternatively, you can click to close the display window: xxx Introduction: Welcome to Computer Programming Animation and Interactivity The preceding ellipse-drawing program gave you a short demonstration of the kinds of programs we will ask Processing to execute. It is an example of a program written in what is called static mode . We will use static mode for much of this book because it allows us to write simpler programs. However, part of what makes Processing powerful and popular is its ability to create animated and interactive drawings. These more advanced capabilities won' t be explored extensively in this book and are not introduced until Chapter 7 because they require us to do more advanced programming using Processing' s active mode and draw() function. However, in the meantime, here is just a little taste of how these are possible in Processing. Again, do not worry if you do not understand everything that we are doing. For now, just type in the code and watch what happens. Start by modifying your program so that it matches the following: void draw() { ellipse(50, 50, 20, 10); } What we have done here is to enclose our current program inside of what is called the draw() function. What is special about the draw() function is that it automatically \" loops.\" In other words, Processing will automatically perform any statements that are contained within the draw() function over and over again when we run our program. When we press the Run button, we see no change in our sketch: This is because Processing is drawing an ellipse of the same size in the same canvas posi - tion, over and over again. Press the Stop button. Next, let' s change the statement that we have placed within the draw() function to the following: void draw() { ellipse(mouseX , mouseY , 20, 10); } Here, we have replaced the specific numbers describing the pixel column and pixel row for the location of the center of the ellipse with mouseX and mouseY . (Notice that both Introduction: Welcome to Computer Programming xxxi of these entries end in a capital letter: mouse X and mouse Y .) These are two \" variables\" that are built into Processing and continuously keep track of the current pixel location of the mouse pointer when it is over the canvas. (We' ll learn much more about variables in the chapters that follow.) Now, press the Run button. If you move your mouse pointer over the canvas, you should see something like the following appear: We see this result because, over and over again, Processing draws a 20-pixel by 10-pixel ellipse at the current location of the mouse pointer. You now have an interactive Processing sketch. Hopefully, this brief tour gives you a taste of the nature of Processing. Again, this last animated and interactive sketch makes use of some advanced features that won't be covered until Chapter 7, so do not worry about not understanding all the details in this example. Rest assured, the features of Processing will be introduced to you thoroughly and gradu - ally over the course of this book. Exercises 1) Modify the \" Hello, World!\" example from this chapter so that when you run the pro - gram, your first name is displayed in the greeting instead. Example: Hello, Rebecca! 2) Modify the code from the \" Hello, World!\" example in this chapter to the following: println(\"Hello, World\"); println(\"Welcome to Processing!\"); Run the modified program to see what output is produced. 3) Modify the previous example so that it produces the following output: Hello, World! Welcome to Processing! Let's get started. xxxii Introduction: Welcome to Computer Programming 4) Make the following change to the interactive sample program from this chapter: void draw() { ellipse(mouseX, mouseY, 10 , 20 ); } Run this program and describe the change in the result.INTRODUCTION FROM 'INTRODUCTION TO INDUSTRIAL ENGINEERING, SECOND EDITION' # This chapter is excerpted from Introduction to Industrial Engineering, Second Edition by Avraham Shtub, Yuval Cohen. \u00a9 2016 Taylor & Francis Group. All rights reserved. 6 Learn more11 Introduction Educational Goals This chapter presents the profession of industrial engineering (IE), the broad scope of areas in which industrial engineers are engaged in manufacturing and services, the market in which they operate, and the roles that they play in the economy. Understanding the historical background is an important component of the training in IE. The following historical review highlights significant events and people that have contributed to the development of the profession. We explain the need for integrated processes, supported by modern infor - mation systems, with an emphasis on the competitive market today. 1.1 Definitions and Examples Related to Industrial Engineering 1.1.1 Engineering The Merriam-Webster dictionary defines engineering as the design and creation of large structures such as roads and bridges or new products or systems by using scientific methods. According to the Merriam-Webster dictionary, \"to design\" is to plan and make decisions about something that is being built or created\u2014to create the plans, drawings, etc., that show how something will be made. Engineering design is a process of translation of requirements, specifica - tions, and needs into a language understood by the people responsible for making the new product, service, facility, or system. For example, the civil engineer translates the requirements for transport - ing a volume of traffic over a water barrier into the design of a bridge, includ - ing the geometry of the bridge, quantities of materials required to construct the bridge, the processing of materials, the layout and assembly of the parts, and finally the testing of the bridge during its construction and after its 2 Introduction to Industrial Engineering completion. The design is in a language understood by construction work - ers, purchasing agents, suppliers, subcontractors, quality control experts, and so on. 1.1.2 Industrial Engineering According to the Merriam-Webster dictionary, IE deals with the design, improvement, and installation of integrated systems (as of people, materials, and energy) in the industry. Modern IE is concerned with the design, management, and control of operational processes. For that purpose, IE combines classical knowledge in physics, mathematics, computing, and statistics with tools for incorporating the human factor, ergonomics, sociology, and psychology. For example, in the design of a new business branch, industrial engineers plan the work packages and their allocation to operators. Industrial engi - neers also design the work positions using their knowledge of ergonomics, facility layout planning, and efficient work planning. 1.1.3 Industrial Engineers Industrial engineers design organizational processes and perform projects and ongoing activities that may involve facilities, products, and systems. The facilities, products, systems, and processes are used to supply products or services. Industrial engineers often focus on processes that take into account the human factor. For designing organizational processes, industrial engi - neers collaborate with managers and their subordinates, and sometimes with peers, such as engineers (e.g., mechanical engineers, electrical engi - neers, software engineers, etc.). An industrial engineer is also involved in determining how to best utilize the resources of the organization. Resources such as workers, raw materials, capital, information, buildings, equipment, energy, and technological knowl - edge are used by industrial engineers to perform their tasks. Industrial engi - neers translate the goals of the organization, the constraints imposed, and the uncertainty, to find the best solutions for the organization. They do so by utilizing the rules of physics, mathematics, and statistics along with human factor related knowledge, such as ergonomics and psychology, and the rules of law, morality, and ethics. A relatively new area of industrial engineering is the design and imple - mentation of information systems that supports processes. In the past, industrial engineers integrated material requirement planning (MRP) sys - tems into industrial organizations. Later on, they played a vital role in the incorporation of enterprise resource planning (ERP) systems in many orga - nizations. Today, many industrial engineers work with ERP systems on a daily basis. With the advent of supply chain management, some industrial engineers entered the challenging world of interorganization data sharing.3 Introduction 1.1.4 Production/Service Systems Some organizations are engaged in the production or supply of products. Other organizations provide services and some do both. These organiza - tions use systems to perform their operations. We define a system as a col - lection of resources such as people, computers, information, machinery, and facilities working to achieve a common goal. The role of this system is to transform \"inputs\" such as raw material, energy, and demand information into \"outputs,\" which are products, information, and customer service. The output may include damaged items, which should be avoided or minimized as much as possible. 1.1.5 What Do Industrial Engineers Do? Industrial engineers are involved in designing organizational processes, performing projects and ongoing activities, and planning their operations. This includes a large variety of activities. A partial example includes, among others, the following: Design of production and service systems, design and implementation of processes, production management, design of sup - ply chains, planning and managing supply-chains operations, project man - agement, economics analysis, quality control, and design and operations of information systems. 1.1.6 Tools Used by the Industrial Engineer To succeed in his or her job, the industrial engineer needs understanding, skills, tools, and techniques in a variety of fields. We will review the skills necessary and demonstrate how these skills are used in the case of a com - pany in the automotive industry. 1.1.6.1 Understanding \"Engineering Language\": Drawings, Specifications, etc. For example, in the production of cars, engineering design passes the detailed drawings of the car to production engineering. An industrial engineer in a production engineering department will translate the design into a bill of material with information regarding the car assemblies, subassemblies, and the parts from which it is composed, determine which machines will be used in order to produce parts, design the supply chain that supplies car parts not manufactured by the factory, etc. 1.1.6.2 Understanding the Physical Processes, Knowledge of the Basic Laws of Physics Physical processes affect machine operation, maintenance, quality, and efficiency, as well as human performance and the associated ergonomics. 4 Introduction to Industrial Engineering Dexterity requires a compact comfortable work environment. It also requires lightweight tools and parts that are easy to handle and manipulate. The manufacturing process of a product is a process that combines a sequence of operations, performed by machines and humans, aimed at transforming raw materials into a finished product. The industrial engineer must understand the process and the physical principles involved in the pro - cess such as metal cutting, forging, etc. For example, in car assembly lines such as those used by Toyota or General Motors, quality problems are caused by physical processes. Industrial engi - neers should be able to analyze these problems and find effective solutions. Physical factors also affect the load and human posture of the assembly operator. The industrial engineer should be able to identify problems along the assembly line, and use ergonomic principles to design solutions for the problematic workstations. 1.1.6.3 Knowledge of Economics and Financial Management The industrial engineer's main role in many organizations is contribution to the bottom line profits. Therefore, operational decision making involv - ing intensive financial considerations is a main specialty of an industrial engineer. Investment decisions, and the effects of interest rate and taxation, are common problems that an industrial engineer should be able to tackle. Such problems appear in a car assembly line when buying a new machine or improved conveyor system. In service industries, these problems may be connected to the number of waiting positions (such as car spaces in a park - ing lot, number of chairs in a dentist waiting room, etc.). Industrial engineers have to decide what to produce inhouse and what to buy. For purchased items, they must decide from which country and which supplier to buy in order to minimize cost and maximize quality. The indus - trial engineer must make a decision that combines economic considerations, like the cost of production in each country and the cost of transportation of the various parts between the countries, as well as aspects of taxation and customs that should be considered in the decision process. 1.1.6.4 Understanding Mathematical and Statistical Models For example, in determining the size of production batches on a machine with long set-up time (the time to switch from one operation to another) compared to the time needed to process a single item, it might be better to produce in large batches to reduce the number of set-ups and, thus, the total machine time required. However, large batches create large and expensive inventories. To solve this problem, mathematical models trade off the desire to mini - mize set-up times and consequently produce large batches and the desire to minimize inventories by producing small batches \"just in time.\" When demand is random, that is, uncertain, the problem is harder to solve and the 5 Introduction industrial engineer must use statistical tools to determine the size of each batch. 1.1.6.5 Knowledge of Human Resources Management Since human resources are the center of any organization, and since indus - trial engineers are the designers of organizational processes, they need knowledge of human resource management. Some examples of the areas that they need to understand are task design, workplace design (ergonom - ics), workforce scheduling, determining incentives and remunerations, etc. For example, the decision to implement an incentive-based payment system and how to apply it is a traditional task of industrial engineers. Understanding the structure and the pros and cons of such systems is important, as different employees performing different tasks in different departments of the same organization may react differently to the same incentive-based payment system. Therefore, proper selection and implemen - tation of such systems is crucial. 1.1.6.6 Knowledge of Computerized Information Systems Organizations handle and generate vast amounts of data in the course of their operations. Daily data updates are commonplace in areas relating to inventories, orders, quality, production, deliveries, workforce, maintenance, sales, payments, etc. No organization can efficiently operate without this data stored and optimally accessed and organized by a computerized infor - mation system. Efficient scheduling of resources such as machines and employees and their integration with the timing of material supply requires advanced infor - mation systems that can process huge amounts of data, transforming it into information that supports management decisions. For example, the final assembly of cars, which consists of thousands of parts manufactured by thousands of operations and supplied by hundreds of suppliers, needs to be scheduled. To schedule such operations efficiently, an enterprise information system is necessary. Industrial engineers define the requirements for these enterprise information systems, and help install, adapt, modify, and integrate such systems for the organization. 1.2 Models Problem solving and decision making are important parts of the job of the industrial engineer. Textbooks and courses are often organized according to the types of problems. Industrial engineering textbooks have chapters dealing with problems related to inventory, production scheduling, service 6 Introduction to Industrial Engineering system design, procurement, and the like. One of the primary tools pre - sented to students in all their classes and textbooks, which will become a part of their professional toolkit, is problem modeling. A model is a simplified presentation of reality. Many real problems are very complex due to their size, the number of different factors to consider, and the dynamic and stochastic nature of interactions between many of these factors. By using simplifying assumptions, one develops a model of the problem. A good model of a real problem must not only be simple enough to understand and analyze but also be sufficiently a representative of the real problem so that, its solution can be implemented successfully on the real problem. Many models are mathematical ones. Most mathematical programming models define an objective function and a set of constraints. Such models are designed to find the values of the \"decision variables\" that meet the con - straints, while minimizing or maximizing the objective function. Conceptual models are also common. An organizational chart, for exam - ple, is a model that conceptually describes the relationships among members in the organization. When the level of uncertainty is high, statistical or stochastic models that represent the uncertainty of the real problem are used. Such tools include regression analysis and stochastic dynamic programming. When decision makers analyze a model, they are trying to find a good solution to the problem that the model represents. This solution is appropri - ate for solving the original problem if it is not too sensitive to the simplifying assumptions underlying the model. Therefore, a sensitivity analysis of the solution obtained must be performed to assess its suitability for solving the original problem. The relationship between the original problem, the model, and the solution is shown in Figure 1.1. 1.2.1 Use of Models Models are frequently used for routine repetitive decisions. A computer can handle some of these decisions automatically. Inventory management in a supermarket is a typical example of routine decisions: Orders for new ship - ments are required when the existing inventory level drops below a certain level. The value of this so-called \"reorder level\" or \"order point\" is calculated by fitting a model. Computer software can be set up to continuously monitor and update the level of inventory available based on transactions recorded Reality (problem )Simplifying AssumptionsModelMani pulating Analyzing Optimizin gDecision (solution ) FIGURE 1.1 Models and their use.7 Introduction at the checkout counters and order automatically from suppliers when the inventory level drops below the reorder level. Commercial business software packages are designed to support routine decisions. For example, software systems based on the logic of MRP auto - matically issue production and purchasing orders of certain items. These systems also provide data about past events, inventory, etc. Historical data are essential for the development of policies and are used to support the cost estimates of labor and materials, needed for bidding and marketing. Models can be used to solve nonroutine or ad hoc problems as well. A map is an example of such a model. A tourist can find his or her way in a city he or she never visited before using a map that represents real streets and avail - able attractions. The map has only two dimensions and in reality there are three dimensions, it is much smaller than the real city, and it is static while in the real city people and vehicles are moving. Despite all the simplifying assumptions, following the route from an origin to a destination on the map can help the tourist find his or her way in the real city. In much the same way, industrial engineers use various charts that model various aspects of processes (e.g., flow, quality, etc.). While a map and a chart are static models, industrial engineers often use dynamic simulation modeling to check different scenarios and support a decision-making process seeking the best scenario. This is discussed next. 1.2.2 Dynamic Aspect: Simulation and Dynamics Systems Simple models such as a map are static in nature, that is, these models pres - ent a snapshot at a given moment of the organization and its environment. In reality, time plays a very important role in decision making. Values of key parameters change over time. These include various factors in the orga - nization and its environment, which are dynamic. Information is collected over time. Competitors enter the market and develop new products at certain points along the timeline. Lecturers and practitioners in industrial engineering strive to integrate the dynamic aspect into their models. In the 1960s, the system dynamics approach was developed as a new tool for analyzing the dynamic nature of systems and processes (Forrester, 1961, 1968). Advanced simulation model - ing tools are based on the system dynamics approach. Forrester modeled systems and processes using two types of entities: Levels and rates. Rates generate changes in the levels, and levels are used as state variables so that the value of the levels at a given time determines the state of the system. Consider the following example of system dynamics: The fuel system in a car is analyzed to develop the best strategy for refueling the car. The objec - tive is to minimize fuel cost, and the constraints are the capacity of the fuel tank and the location of fueling stations. The rate of the car's fuel consump - tion is determined by factors such as speed, load, road conditions, etc.8 Introduction to Industrial Engineering Most drivers (decision makers) base their decision on when to refuel on factors such as the current fuel level, the distance to the next fueling station, and the cost per gallon/liter of fuel at each station. Figure 1.2 shows the rela - tionship between levels and rates in this example. Another simulation model is discrete event simulation (DES) developed at IBM in 1961 by Geoffrey Gordon and initially called general purpose simu - lation system (GPSS). Since the development of DES, many simulation lan - guages have been developed and evolved. For example, SIMULA evolved into BETA and its concepts are used in SimPy (Python based DES library). SLAM (simulation language for alternative modeling) evolved into SLAM-II, which developed into SIMAN, and finally into ARENA simulation software. Since the turn of the twenty-first century, many other DES software packages have emerged: Promodel, Simul8, SimEvent, Plant Simulation, and SimCAD Pro\u2014to name a few. Modern simulation languages are user-friendly, power - ful, and flexible. Simulation is considered an important tool that is used by industrial engineers for analyzing complex systems, most of which include random processes. 1.2.3 Simulation Models and Decision Making When using simulation as a tool for decision support, the simulation model presents three aspects of the real world: 1. The flow of objects such as materials, equipment, and people 2. The flow of information 3. The decision-making process+ Fuel levelProximity of gas station Refuel decisionFuel consumptionLoad Speed Road condition + +--+ +-Current location+ Cost per gallon - FIGURE 1.2 Levels and rates flow diagram ( + is positive correlation, is negative).9 Introduction In the inventory system simulation example, the flow of material deals with materials entering the system, their storage, and exit from the system. Information related to the flow of materials is collected during the simula - tion run. The user can see the exact time when a unit of material is created, and when it moves within the system or leaves it. The data collected during the simulation serve as a basis for understanding and analyzing the inven - tory system. The logic of decision making is part of the simulation model. Such logic can be based, for example, on a simple model that recommends issuing an order for new materials each time the inventory level drops below the des - ignated order point. In this case, the order level is the decision variable, and the simulation compares system performance for various reorder levels. The parameters of the model's input and the logic by which it operates are built into the simulation model. The advantage of this approach is that one can try out a large number of different decision rules by running the simulation. One more advantage is the possibility of running large simulations offline, that is, when the decision makers are not present. For example, the model can run at night, and in the morning the users get the results for analysis. The disadvantage of using simulation for decision making is that in real life many decisions are based on intuition and experience, and it is very dif - ficult (sometimes impossible) to program a computer to model intuition and experience. Furthermore, in many organizations, decisions are made by a group of employees from different fields. Group decision making is a very complex process, and there is not enough knowledge to model it with a rea - sonable degree of precision. 1.3 Teaching Industrial Engineering IE is taught through lectures, books, and projects; mostly using two approaches: 1. The case study approach: based on the analysis of events/specific situ - ations. Some case studies describe real problems and some describe imaginary situations. Each event presents a particular problem and students discuss the problem, analyze it, and find an appropriate solution. 2. The modeling approach: based on the development of models designed to handle the most important aspects of a problem. Some models are based on mathematical programming tools (e.g., linear program - ming), statistical tools (e.g., regression analysis), search techniques (e.g., genetic algorithms), and simulation. These tools are used to get insight into the model and the problem it represents.10 Introduction to Industrial Engineering For example, consider the relationship between the price of a product and the demand for this product. Assuming that there is no randomness, a math - ematical expression will find the price that will maximize revenue. The math - ematical expression is a simple model that shows the relationship between the price and the resulting demand. Using calculus, it is possible to find the opti - mal price that will maximize revenues. If randomness is considered, a math - ematical expression may enable finding the optimal expected (mean) revenue. Some industrial engineering courses combine the two approaches and present case studies that can be analyzed using the models learned during the course. 1.3.1 Industrial Engineering Curricula Curricula in IE programs in academic institutions, though not uniform, are based on similar principles. Freshman (first year) curriculum usually covers all core subjects includ - ing mathematics, physics, and information systems, along with the course \"Introduction to Industrial Engineering,\" which focuses on the role the industrial engineer fills in organizations, the training he or she needs, and the tools that he or she uses. Sophomore (second year) curriculum focuses on advanced courses in math - ematics including courses in operations research, probability and statistics, as well as basic courses in psychology, sociology, and process-product design. Junior (third year) curriculum moves to cover advanced courses on pro - duction and service systems. Senior (fourth year) curriculum is usually reserved for elective courses. Students select subjects that interest them. In many schools, fourth year stu - dents perform a final project. The final project is based on a real IE problem, which gives students an opportunity to get experience in IE, implement the knowledge they learned in the previous three years, and learn about new tools and techniques and new situations. 1.4 Historical Overview Humanity has been systematically planning major undertakings for thou - sands of years. The Egyptian pyramids, the two Temples in Jerusalem, ancient Roman roads and structures, the Great Wall in China, and Watt Angkor in Cambodia are examples of huge building projects carried out thousands of years ago. These undertakings required the organization of many people and proper planning. They were probably planned using methods that are very different from the methods used today by industrial engineers. For example, the production of most products in the past was carried out in workshops, 11 Introduction by expert craftsmen. These craftsmen acquired their profession by serving for many years as apprentices, and learning how to make the whole product, without any help from other people. Today, factories divide the production process into stages or steps, and most workers work on a small part of the whole production process, in production or assembly lines. Furthermore, computers, automated machines, and robots are parts of many production processes in the modern factory. The transition from the small shops of indi - vidual craftsmen to the modern automated factory with multiple workers (dividing the work among them and using automated machines and robots) was a long process spanning over more than 100 years. 1.4.1 Industrial Revolution: Eighteenth Century A turning point in the development of industrial engineering was the Industrial Revolution that started in England in the eighteenth century. Two main factors led to the transformation. One factor was the introduction of mechanical energy, which replaced human energy or energy from other sources such as animals, water, or wind. The invention of the steam engine in 1764 made this possible. The second factor was the transfer of production from the small workshops of craftsmen into factories where production was done by many workers, applying the principle of division of labor. In 1776, Adam Smith published a book analyzing the economic benefits of the division of labor. His theory is that breaking up the work required to pro - duce a product into a series of small simple tasks performed by a number of production workers increases efficiency. Each worker needs to know only a small part of the whole process required to manufacture the product, unlike earlier methods where craftsmen had to learn the whole process required to produce and assemble a product from start to finish. The application of division of labor resulted in the need to organize and manage the teams of production workers. In 1798, the American inventor Eli Whitney developed the idea of standard product parts. Whitney developed a system for producing muskets for the U.S. government. In his system, all the pieces of the same type produced by any worker (e.g., the barrel of the musket) were exactly the same. The finished product could be assembled from standard parts randomly selected from the stock and no special adjustments for each gun were needed. Division of labor and Eli Whitney's standardization of parts are the basis of the modern mass production system: identical parts are manufactured in batches, and a random selection of a set or kit of parts can be assembled into the final product, without needing adjustments. 1.4.2 New Developments in the Early Twentieth Century In 1911, Frederick Taylor (1856-1915) published his \"scientific management theory.\" His goal was to improve productivity by making employees more 12 Introduction to Industrial Engineering efficient. Taylor claimed that management should define the desired output, provide training for employees, and monitor them in order to generate the desired output. In addition, Taylor argued that to manage a production sys - tem, quantitative measurements of working time, material, and resources are needed in order to minimize waste and to build an efficient production system. Taylor brought awareness of the importance of proper production planning to the world of manufacturing and beyond. His planning relies on accurate measurements and deals with employee placement, training, and supervision. Taylor's philosophy highlighted the importance of work standards, which are the point of departure for performance planning and evaluation. At about the same time, Frank and Lillian Gilbert developed a method for predicting the time it will take to perform a given task. This method and philosophy aligned well with Taylor's scientific management theory and was accepted with enthusiasm by Taylor's followers. However, its application was too detailed and tedious. Ten years later, a more efficient technique called Motion & Time Measurement (MTM) was developed by Westinghouse Corporation and spread throughout the business world. In 1913, Henry Ford developed the assembly line. His idea was to bring division of labor and work standardization to perfection. The worker repeats short cycles of identical work and the product is conveyed to the worker on the line. Before Ford's car production assembly line began operation, the average time for the assembly of a car was about 12.5 h. Eight months later, when the assembly line was completed, and each worker had a specific role in the line, the average time for the production of a car was reduced to 93 min. Ford's assembly line applied the principles of scientific management\u2014 standard product design, division of labor, mass production of standard parts, and reduction of production costs. Ford's factory integrated these ideas, which led to peak efficiency at the time. In 1914, Henry Gantt developed a chart for scheduling process activities. The chart used the timeline as the horizontal axis and the vertical axis was dedicated to machines or operators (each one having its own horizon - tal timeline). In this way, the activities done at any point in time could be easily illustrated. The Gantt graphical model still serves as a popular tool for scheduling workstations, machines, and projects. In 1917 , F. W. Harris developed an optimization model for determining batch sizes for management and control of inventories. Proper management of inventory has a great impact on the profits of enterprises, and hence the importance of this development. Between 1927 and 1930, Elton Mayo at the Hawthorne plant of Western Electric studied psychological and sociological factors impacting the effi - ciency of a group of workers. These studies were based on experiments aimed at examining the effects of environmental changes such as lighting and noise on employees' performance. The results were surprising. For example, in some cases, even though the physical conditions of the work - ers deteriorated, performance of the workers did not change, and sometimes 13 Introduction even improved. The conclusion was that the fact that employees were aware that they were part of an experiment raised the level of their motivation and made them work more efficiently. This finding was the trigger leading managers and researchers to realize the importance of psychological and behavioral factors, and their direct impact on employee motivation and work efficiency. Studies of this kind have led to the management focus on the human factor, with an emphasis on creating conditions that encourage the employee to contribute to the organization. These were the early steps in the development of the discipline of management of human resources. During World War II, armies were faced with complex logistical prob - lems, such as the transfer of aircraft, ships, supplies, and troops between different parts of the world. At the same time, the operation of newly developed complex weapons (such as the new radar system) posed a plan - ning, modeling, and optimizing challenge. To cope with these challenges, operations research methodologies were developed. Operations research is based on the construction of mathematical and statistical models of complex problems. At that period, the model was typically a combination of objective function and constraints, and mathematical analysis was used to find an optimal, implementable solution for the model, and hence for the problem. After the war, experts in operations research returned to academia and industry and applied the new knowledge in public and private sectors. The wide applicability of operations research and its fast evolution has made it into a separate field of research and study. It has developed rapidly and con - tinues to do so today. Work in operations research requires complex calculations and nowadays is based on extensive computer use due to the need to deal with complex, large mathematical models. Operations research models are used to support complex decision making. A typical example of operations research models is the case of fashion goods supply chain management by international companies. Sewing facto - ries located in different countries sell their products around the world. The decision of which products to produce in each factory and how to ship the products from factories to the wholesale and retail stores is a very complex one that involves considerations such as the cost of transportation, the pro - duction capacity of the factories, the distances between the factories and the shops, the cost of labor and raw material in each country, the demand for different products in every country, etc. Operations research models support decision making in such complex problems. After World War II, a significant expansion of the public and private ser - vice sectors motivated the development of tools and techniques for plan - ning and managing service operations. Today, more than two-thirds of the workforce in the United States is employed in the service sector. Services are characterized by uncertainty related to customer arrivals and requirements. Operations research models were developed for analyzing queues and deal - ing with demand uncertainty, for these kinds of problems.14 Introduction to Industrial Engineering Techniques for planning and managing projects were developed during the 1950s, including the program evaluation and review technique (PERT). This tool is designed for project scheduling method and uses a statistical model to estimate the likelihood (or probability) that the project will end on a certain date. It was developed by the US Navy to support the Polaris nuclear submarine construction project. At about the same time, the critical path method (CPM) was developed by Union Carbide Corporation. CPM focuses on a project's critical activities\u2014 activities that management should focus on, as any delay in a critical activity will cause a delay in the entire project. In the 1970s and early 1980s, with the development of relatively inexpen - sive computers, industrial engineers started to use computers and software to solve complicated, large production and logistics problems. The develop - ment of MRP software that manages material in production facilities helped industrial engineers to quickly adapt production schedules and procure - ment planning to the dynamic needs of the market. In parallel to what was going on in the West, interesting developments also took place in Japan after World War II. Following the war, Japanese industry focused on the quality of its products, adopting the approach of experts such as Edward Deming and Joseph Juran. The total quality management (TQM) approach was developed here and later adopted by Western industry as well. The high quality of Japanese products eventually led to their success in the competitive world markets. Their cameras and cars were perceived to have higher quality than their competitors did, and, thus, were preferred by many consumers. As part of their efforts, the Japanese stopped using traditional quality targets: the ratio (percentage) of defective items to nondefective items in a production batch. In many Western companies, a defect ratio of 1% was considered acceptable. The Japanese, seeing defects as a waste, were able to reach a ratio of few defective parts per million (PPM). This achievement was the result of using TQM aimed at continuous quality improvement in all processes within the organization, from the design process to the production process through the supply process. The TQM approach has become a central part of the way many organi - zations throughout the world operate. In the United States, for example, a national effort to improve quality led to the Malcolm Baldrige National Quality Improvement Act of 1987 , signed into law on August 20, 1987 . The Malcolm Baldrige National Quality Award recognizes U.S. organizations in the business, health care, education, and nonprofit sectors for performance excellence. In the 1990s, TQM became so important to international trade that it evolved and became the international ISO-9000 family of standards. This standard includes a certification part, which is managed globally. Since its initiation, ISO-9000 has been updated several times and is still a prominent standard used worldwide.15 Introduction An important development that also emerged from Japan a decade after World War II is the Toyota production system (TPS). TPS is based on the idea of maximizing value to customers while minimizing waste of any kind. To achieve this goal, techniques for inventory management and production scheduling were developed under the inclusive title of Just in Time\u2014JIT. By the end of the 1970s, JIT and TPS were adopted and implemented successfully throughout Japan. Soon after, companies all over the world embraced them. At the same time, there was significant development in the use of com - puters in design, planning, manufacturing, and production management. Robotic systems, systems for computer aided design (CAD), and computer aided manufacturing (CAM) along with computerized flexible manu - facturing systems (FMS) were introduced. These systems have evolved and thrived and are still prominent in the realm of manufacturing and production. In recent years, the business world has become \"flat.\" Globalization has emphasized the need for rapid response to constant change. The need to compete in the global market led to the development of business process reengineering (BPR), an effort to improve processes by developing and implementing solutions that change organizational management prac - tices significantly (Cha et al., 2003). Organizations began using ERP at the turn of the last century. Such systems, based on an integrated management approach, provide an integrated solution for many organizational func - tions: production, purchasing, finance, marketing, human resources, plant maintenance, service and project management. The advantage of all the aforementioned systems is that they create synchronization and coordina - tion between the various parts of the organization, with the aim of improv - ing the level of quality and competitiveness. Following the direction of TPS, the effort is now on creating value for the customer while minimizing waste. A simple definition of the term value is \"what the customer is willing to pay for.\" Anything that does not generate customer value is a waste. The purpose of the industrial engineer is to bring the waste to a minimum and to build manufacturing and service systems that produce maximum value and minimal waste. In the last years of the twentieth century, the development of high-speed electronic communication networks, the Internet, facilitating direct con - tact between the supplier and the customer from anywhere over the globe, has made E-business boom and released an avalanche of information to be mined in aid of organizational growth and benefit. In addition, integration of the organization with its business environment, that is, its partners\u2014customers, suppliers, service recipients, and service providers, also became a necessity. Out of this need, information manage - ment systems were developed. Examples include MES: Manufacturing Execution Systems ERP: Enterprise Resource Planning16 Introduction to Industrial Engineering CRM: Customer Relations Management Systems SRM: Supplier Relations Management One especially important type of approach, supply chain management (SCM), was developed to help handle all the partners and stages of busi - ness practice. SCM deals with the acquisition of material from raw material by the manufacturer through to the customer's final product. They make use of hardware and software, and electronic communication to enhance productivity, reduce response time, and increase quality while minimiz - ing cost. These systems are continuously developing because of the global competition. The large amount of data (big data) being generated and the need to ana - lyze it, has led to the rapid development of the field of data mining (DM) as well as the transformation of operations research (OR). Together, these devel - opments have produced a new area of research, business analytics, which combines OR and the processing of large data sets. 1.4.3 Historical Timeline 1911: Frederick Taylor publishes the \"scientific management theory\" and establishes the principles of the study of time and labor. Frank and Lillian Gilbert develop the study of movement and lay the foundation for industrial psychology. 1913: Henry Ford develops the moving assembly line. 1914: Henry Gantt develops a chart for scheduling activities with tech - nological links between them. 1917: F. W. Harris develops models to determine batch size for the man - agement of inventory. 1930s: Application of statistical methods in quality control: 1927-1933\u2014Elton Mayo, at the Hawthorne plant of Western Electric, examines the impact of environmental changes on employee performance. 1940s: The development of Operations Research: Mathematical mod - els based on simplifying assumptions, models that allow analysis of complex problems in quantitative terms. 1947: George Denzig develops the simplex method for solving systems that can be described using linear models. 1950s and 1960s: The development of digital simulation; development of PERT and CPM methods for project management. 1970s: Development of a variety of software packages to manage rou - tine tasks; development of MRP .17 Introduction Latter part of the twentieth century: Adoption of Japanese manufacturing methods such as JIT, TQC. Development of CAD/CAM, FMS, CIM, and robots. Development and standardization of process development (ISO-9000), and streamline systems and processes such as BPR. Development of E-business and supply chain management methodologies. 1.5 Impact of Globalization on the Industrial Engineering Profession Globalization and the development of the Internet have created new chal - lenges and pushed many organizations facing competition from all over the world into a state of constant struggle. This rapidly changing environment, where product life cycles are short and global competition is fierce, forced many organizations to search for ways to increase competitiveness in order to survive. Competition can be expressed and appear in one or more of four dimensions: Cost, quality, time, and flexibility. Industrial engineering pro - vides the building blocks, tools, and techniques that organizations are using to improve their performance in these four dimensions. These dimensions are described in detail in the following sections. 1.5.1 Cost Cost has a major effect on the price of a product/service and reducing the cost enables the seller to reduce the price. In many markets, the price of the prod - uct or service has a decisive influence on the customer's decision to choose this product or service. To compete successfully in such markets, the organi - zations' production costs must be low in order to sell at a low price and still generate a profit. When the market cannot distinguish between the quality of one organization's product (or service) and that of another organization, price becomes a major factor in the customer's decision. Cost-based competition is tough, and only the most efficient organizations survive, when the goods or services of different organizations are perceived to be of the same quality. For example, in the PC industry Lenovo, HP , COMPAQ, and Dell as well as many small companies that offer similar products without having a famous brand name are all competing against each other. Clients who want a lead - ing brand's product are willing to pay more. Many customers are price sensitive and buy computers from less known companies that charge less, assuming that the components of these computers and their performances are not much different from the brand name computers. These customers are 18 Introduction to Industrial Engineering searching for the lowest cost computer with sufficient performance for their requirements. 1.5.2 Quality Quality pertains to both the offered product/service and the operational processes by which the product/service is attained. There is a difference between the product/service quality and the quality of the operational process through which the product/service is produced. Service/product quality should fit the intended market. The focus is on customer needs, expectations, and fitness for use of the service/product. In a quality driven market, quality products and services can demand higher prices. The qual - ity of the manufacturing process, however, is always critical, because poor quality creates waste of labor and material in the form of defective products. Quality-based competition is thoroughly discussed in Goetsch and Davis (2012) and Edwards Deming (1982). The Japanese automotive industry is a good example of an industry that gained market advantage due to the high quality standards of its products. Historically, people who bought Japanese cars experienced fewer break - downs compared to those who owned American-made cars. For many years, Japanese cars were ranked the highest in publications such as Consumer Report . Market reaction, in the United States, was a shift from buying American cars to buying Japanese cars. Standards such as ISO-9000 were developed to ensure compliance with process quality threshold requirements. High operational process quality is related to organization's proficiency, maturity, competitiveness, and reliabil - ity. Many companies require their long-term suppliers and supply contracts that span significant periods of time to meet standards that the suppliers might not have otherwise maintained. The aviation industry is a good example of the importance of process quality. While quality of components and products is important due to safety concerns, checking the finished parts of an aircraft does not ensure the required quality is attained. For instance, paint may cover manufac - turing defects, badly welded spots may pass the test, but break after a few flights, an assembly that looks fine may conceal loose coupling of compo - nents, etc. Therefore, in the aircraft industry, quality is monitored continu - ously throughout the manufacturing processes from raw materials to the finished product. Products are purchased only from factories that can prove that their production processes meet the high quality requirements of the aircraft manufacturers. 1.5.3 Time Time plays a key role when there is competition. It is significant in three major places: (1) Customer waiting time, (2) supply lead-time, and (3) production 19 Introduction time. Customers do not like to wait, and the faster they are served, the more competitive is the business. In many markets, supply lead-time (the time it takes to supply the product) is a key to competition. Sometimes custom - ers are willing to pay a higher price for a product with a shorter lead-time. Production time is indicative of production costs. Production time could be shortened in many cases, using effective scheduling techniques. McDonald's is an example of a thriving business that focuses on short cus - tomer waiting times. The importance of lead-time is obvious in retail sales before the holiday season in the United States. Retailers demand on time delivery, as goods supplied after the holiday season are much more difficult to sell, and sometimes even become impossible to sell. An organization that implements the TPS/JIT technique, discussed ear - lier, in its production plants (e.g., Toyota) is one that is focusing on produc - tion time. For such organization, the final assembly process of their products depends on the timely delivery of raw materials, parts, and subassemblies, by subcontractors and suppliers. These organizations, in order to reduce costs, purchase raw materials parts and components exactly when they are needed in the production process. No inventories are kept to guard against delays in supply. Therefore, the on-time delivery of raw materials parts and com - ponents is crucial; any significant delay can stop an entire assembly plant. 1.5.4 Flexibility Flexibility is defined as the ability of an organization to adapt itself in a short time to the changing demands of its customers and to the changing envi - ronment. Flexibility can be measured, for example, by how long it takes to change a car assembly line or adding the ability to assemble a new car model. A more extreme example is being able (or unable) to convert a production line producing one product to manufacture a new generation of products. Flexibility is important when market needs or the environment change fre - quently and the organization has to adapt itself constantly to these changes. The German car manufacturer Mercedes Benz is an example of flexibility. It is able to offer the individual customer the opportunity to have a car built according to his or her specifications, which are limited to the variety of models the company produces. For each model, the customer can choose different options for color, upholstery, stereo system, and other extras, and order a car based on his or her needs and expectations. To enable mass pro - duction of car models with different characteristics, the production line and the procurement process are designed for flexibility and quick transition from the production of one model to another model with some different specifications. It is important to note that each organization has to analyze the markets in which it competes, and to decide how it should compete in each market. The right balance between the four dimensions of competitiveness is market- and organization-specific.20 Introduction to Industrial Engineering 1.6 Industrial Engineering and Systems Industrial engineers design and manage production and service systems. The boundary of the system and the boundary of subsystems is an impor - tant issue and two extreme approaches exist with respect to this issue. The first approach is to view a production or a service system as an open system; the second approach views it as a closed system. Closed systems have clear boundaries with their surroundings and for each organizational unit within the system. In a closed system, manufacturing has no direct relationship with customers. Manufacturing gets requirements from marketing. In a similar way, manufacturing has no direct relationship with suppliers. The purchas - ing department serves as the contact between manufacturing and suppliers. In closed systems, each organizational unit defines the way it performs its tasks and the appropriate performance measures. This approach may lead to local solutions that are inadequate for the whole system. Consider, for example, a closed system in which production's local goal is to maximize the utilization of production resources such as machines and labor. The result may be overproduction, or production that exceeds demand and generates expensive inventories. Thus, the local goal of high utilization of resources creates a system-wide problem\u2014inventory accumulation. In open systems, different organizational units work as a team to achieve common goals throughout the organization, and to find solutions that are good for the whole system. Closed systems were very common because information on the entire production or service system was very hard to collect, store, retrieve, and analyze when the information was kept on paper. Development of inexpen - sive fast computer systems solved the problem, and today an organization's entire information library can be made available to all parties involved. In this case, the industrial engineer has access to all the information related to all the processes taking place in the organization. This is the foundation of supply chain management where organizations along the supply chain share information to improve the performance of the overall system, while different organizational units share information and set up common goals and performance measures. 1.7 Industrial Engineering and Process Design Industrial engineers design and implement processes in organizations. Although there is a large variety of processes, it is common to use Hammer and Champy (1993) five \"basic processes,\" which is generally found in most organizations:21 Introduction 1. The development process: The process starts with an idea for a new product or service and ends with the design of the new product or service and a working prototype. 2. Preparation of infrastructure: The process starts with a working proto - type of a new product and ends with the successful completion and testing of the production facility for the product. 3. Sales: The process starts with market research and ends with an order from a customer. 4. Delivery: The process starts with an order from a customer and ends with a delivery and receipt of payment from the customer who received the requested products. 5. Service: The process starts with a customer's request for service and ends when the service is provided to his or her satisfaction. Methods have been developed to support the planning of processes aimed at maximizing the value received by the customer by mapping the value chain. Industrial engineers plan the processes in the organization to achieve organizational goals and customer satisfaction. This role requires a thorough understanding of the organization and its environment, and, accordingly, the industrial engineer must cooperate and collaborate with other profes - sionals in the organization, and people from other units such as Marketing: This unit is responsible for contact with customers and processing of customer orders. Purchasing: This unit handles relationships with the external sources involving supply of products and services. Engineering: This unit is responsible for product design and the design of production-service systems. Finance: This unit is responsible for the organization's budget and management of cash flow including relationships with banks, pay - ments to suppliers, payments received from customers, etc. Production: This unit is responsible for the proper operation of the production system. 1.8 Need for Integrated and Dynamic Processes To address the competition in the markets, processes should be designed taking into account time, cost, flexibility, and quality. For example, the pro - cess of new product development should focus on the changing needs of customers while minimizing development time and the cost of development, 22 Introduction to Industrial Engineering but at the same time minimizing the cost of manufacturing and servicing the new product. The development team should understand and satisfy the vari - ety of customer needs in different markets by introducing flexibility in the product design. This process must be based on new product development teams that include marketing professionals who know customer needs and expectations, engineers and designers who know how to translate customer needs into specifications, plans, and assembly instructions, etc., and experts in the operations and service of the new product focusing on developing a quality product at a reasonable price to give the customers the best value for their money for the whole product life cycle. A similar approach is needed in all processes within the organization. It enables to react quickly to changing markets, reduce delivery times, lower costs, improve quality and flexibility, and improve cash flows. 1.9 Summary In summary, the role of the industrial engineer in the twenty-first century is to ensure the organization's success in dynamic and competitive markets. The emphasis is on the design of processes using information systems to cope with cost, quality, time, and flexibility requirements. This book will focus on the main processes in the organization, and the role of industrial engineers in planning these processes using simple models and information systems that support these models. References Cha, J., Jardim-Gonclaves, R., and Steiger-Garcao, A. (Eds.). 2003. Concurrent Engineering . Boca Raton, FL: Taylor & Francis. Edwards Deming, W. 1982. Out of the Crisis . Cambridge, MA: MIT Press. Forrester, J.W. 1961. Industrial Dynamics . Cambridge, MA: MIT Press. Forrester, J.W. 1968. Principles of Systems . Cambridge, MA: MIT Press. Goetsch, D.L. and Davis, S. 2012. Quality Management for Organizational Excellence: Introduction to Total Quality . 7th edn. Englewood Cliffs, NJ: Prentice Hall. Hammer, M. and Champy, J. 1993. Reengineering the Corporation, a Manifesto for Business Revolution . New York, NY: Harper Business.COUNTING AND PROOFS FROM 'DISCRETE MATHEMATICS WITH DUCKS' # This chapter is excerpted from Discrete Mathematics with Ducks by sarah-marie belcastro. \u00a9 2012 Taylor & Francis Group. All rights reserved. 7 Learn moreChapter 1 Counting and Proofs 1.1 Introduction and Summary Our introduction to discrete mathematics will begin with some problems. You should make a signicant effort to solve these problems before proceedingfurther\u2014it will help if you can meet with others to work collaboratively, but youcan also solve them on your own (it'll just take longer). Working these prob-lems will allow you to discover some basic principles (the sum and product andpigeonhole principles) of counting. The problems are followed by some reinforcing text that will make sure you acquire all the needed details. Please do not read it until after you have workedthrough the problems! It might spoil your fun. After that, things go downhill. (Just kidding.) One of the themes in this text- book is learning how to prove things, and we'll start by discussing proof andcounterexample right after the reinforcing text about the sum and product princi- ples. Finally, we will tell you everything you desire to know about the pigeonhole principle. 1.2 Try This! Let's Count Even though you have no experience with discrete mathematics yet, just jump inhere\u2014these problems do not require any prior knowledge and are great to discusswith classmates. Do not be alarmed if you do not nish the entire set within asingle class period. 1. At WEBS, America's Yarn Store, there are two aisles of sale yarns, six aisles of closeout yarns in the back warehouse, one aisle of Grandpa's Garage Saleyarns in the back warehouse, and one shelving unit of \u00a8 uber-clearance $2/ball yarns in the retail area. How many places can you go in WEBS to buy yarnthat is not full price? 34 1. Counting and Proofs 2. A group of friends goes out for single-scoop ice-cream cones. There are sugar cones, cake cones, and waffle cones. But there are only ve flavorsof ice cream left (peppermint, hoarhound, chocolate malt, gingerbread, andsquirrel). How many cone/ice cream combinations can be ordered? 3. At this ice-cream store, ice-cream scoops are stored right in the ice-cream containers. How many ice-cream scoops must be in use if two of them haveto be stored in the same flavor ice-cream container? 4. A server at the Luminous Nose restaurant goes to this same ice-cream store but decides to get a triple-decker cone. The stacking of scoops on the cone isimportant: a cone with peppermint atop two scoops of squirrel tastes differ-ent than a cone with two scoops of squirrel atop a scoop of peppermint, so anorder of peppermint-squirrel-squirrel is different from an order of squirrel-squirrel-peppermint. How many possible triple-decker ice-cream orders arethere? 5. Some people heading to a party stop by the ice-cream store to buy quarts of ice cream. How many orders of three quarts could they make? What ifthe three flavors have to be different? What if no one will agree to ordersquirrel ice cream? 6. Four teams are attending a local Ultimate Frisbee meet. If each team plays each other team exactly once, how many games are played? 7. Some of the players decide to form temporary teams in an arbitrary way. They put royal blue and lime green armbands into a bag, and each playercloses her eyes and grabs an armband to see which temporary team she'll beon. How many armbands need to be grabbed in order to ensure that one ofthe teams has at least two players? How many armbands need to be grabbedin order to assure that one of the teams has at least seven players? 8. Some conference-goers saunter over to the Healthy Snack Box Machine, where they each choose one of ve kinds of fruit, one of three herbal teas,and one of six flavors of wrap sandwich to get packed in a box. How manypossible snack boxes are there? 9. Let's generalize Problem 6 to a regional Ultimate Frisbee tournament where there are nteams attending. Teams are assigned numbers (1 through n) when they register. As before, each team will play each other exactly once.1.2. Try This! Let's Count 5 (a) How many games does Team 1 play? (b) How many games does Team 2 play? Wait, that counts the Team 1 versus Team 2 game twice. How many not-yet-counted games doesTeam 2 play? (c) Keep going. How many \"new\" (uncounted) games does Team iplay? (d) How many games are played in total? 10. Let's also generalize Problems 2 and 3 to a more reasonable ice-cream store. There are still three kinds of cones (the usual), but now there are kflavors of ice cream. (a) How many different single-scoop ice-cream cones can be ordered? (b) How many ice-cream scoops must be in use if two of them have to be stored in the same flavor ice-cream container? 11. Terminology alert: We write nite sets as lists of their members (also called elements). For example, {2,3,5,7}is an excellent set. So is {1,4}. These sets are disjoint because they have no members in common. On the other hand,{1,2}is not disjoint from either {2,3,5,7}or{1,4}.T h e union of two sets A,B(or many sets A,B,..., N) is a set containing all members of Aand of B(and of C,..., N). The union of the three sets listed so far is {1,2,3,4,5,7}. (a) How many elements are in the union of two disjoint nite sets? (b) How many members does a union of nitely many disjoint nite sets have? (c) Are the previous two questions related to any of the previous prob- lems? (d) How many members does the union of ndisjoint sets, each with m elements, have? 12. Another terminology alert: We call the notation (a,b)anordered pair and (a,b,c)anordered triple (and yes, we call (a,b,..., n)anordered n-tuple ). Generally, the rst member of the pair (or triple, etc.) is from some set A, and the second member of the pair (or triple, etc.) is from some set B,e t c . IfAhasmelements and Bhaskelements, how many ordered pairs can be formed from AandB? Is this related to any of the previous problems?6 1. Counting and Proofs 1.3 The Sum and Product Principles Hey! You! Don't read this unless you have worked through the problems in Section 1.2. I mean it! There are two principles that underlie most of the problems you worked in Sec- tion 1.2. Here they are, stated formally. Oh, wait, we need to dene one piece of notation rst. The number of elements in a set Ais denoted by|A|. The sum principle. The number of elements in a nite number of disjoint nite setsA,B,..., Nis the sum of their sizes |A|+|B|+\u00b7\u00b7\u00b7+|N|. You might think of this visually as in Figure 1.1. Problem 1, about WEBS, used the sum principle directly. Problems 6 and 9, about counting the number of games played in an Ultimate Frisbee tournament, used the sum principle by subdividing a set into smaller disjoint sets. Here is another example. Example 1.3.1. An employer offers ten days of paid vacation, three paid sick days, and four paid personal days per year. How many days can one not work andstill get paid? The sets Vof vacation days, Sof sick days, and Pof personal days are disjoint, so by the sum principle the total number is |V|+|S|+|P|= 10+3+4 = 17. Figure 1.1. The number of elements in the union of these three disjoint sets is 8 +5+2 = 15.1.3. The Sum and Product Principles 7 Figure 1.2. There are 18 elements total in three six- element sets, or in six three-element sets. We will eventually get around to guring out what to do if our sets aren't disjoint, but you'll have to wait for Chapter 7 for that. (There will be lots of otherinteresting things to think about in the meantime!) Wait, in order to continue, we need a second piece of notation! Ordered n- tuples (a,b,..., n)are members of the set denoted A\u00d7B\u00d7\u00b7\u00b7\u00b7\u00d7 N, called the Cartesian product of the sets A,B,..., N. The product principle. The number of elements in the Cartesian product of a nite number of nite sets A\u00d7B\u00d7\u00b7\u00b7\u00b7\u00d7 Nis the product of their sizes |A|\u00b7|B|\u00b7\u00b7\u00b7\u00b7\u00b7| N|. You might think of this visually as in Figure 1.2, where we might consider |A|=6a n d|B|=3. The same Cartesian product can be grouped as |B|copies of A,o ra s|A|copies of B. The product principle can also be formulated as making a collection of deci- sions or as putting choices in slots. For example, counting the number of waysto decide rst which of rrooms to enter and then which of the cchairs to sit in and then which of ppencils to pull out of a case uses the product principle to see that there are r\u00b7c\u00b7pways. Similarly, making license plates that start with three numbers and end in BAT uses the product principle to see that any ten digits canbe placed into each of the three number slots for a total of 1,000 license plates. Problems 2, 4, and 8, about counting single-scoop and triple-decker ice-cream orders and Healthy Snack Boxes orders, used the product principle. The subprob-lem of Problem 11 that asked for the number of elements in the union of ndisjoint sets, each with size m, could be solved using the sum principle by adding mto itself ntimes. Or, notice that adding mto itself ntimes is exactly what it means to multiply n\u00b7m(geometrically, make an n\u00d7mgrid of elements), and solve the problem using the product principle.8 1. Counting and Proofs Notice that we apply both sum and product principles by letting sets stand in for something else\u2014for example, the flavors of ice cream can be represented bythe elements of a ve-element set I(for ice cream), as can the types of cone by the elements of a three-element set C(for cone). This is a specic case of a more general counting technique of using stand-ins. For example, instead of countingpets in a shelter, one could count paws and divide by four. (It might be a goodidea to check that each pet retains all four paws, as otherwise, modications will need to be made to the total.) Sometimes we will let one set stand in for another set in our attempts to count. This will work as long as we know how the sizes ofthe sets in question are related to each other. Here is another example that uses the product principle. Example 1.3.2. The Restaurant Quatre- \u00b4Etoile offers prix xe meals only. (That means you pay a xed amount and get a k-course meal, where kusually varies between three and ve. And it's pronounced \"pree x.\") Their menu allows achoice of appetizers, a choice of main dishes, and a choice of desserts. We couldview the menu as three sets: Ahas members Puff Pastry Plantain Purses, and French Fries; Mhas members Veal Medallions with Infant Carrots, Foie Gras Falafel with Fig Fondue, Caviar-Crusted Croutons with Consomm\u00b4 e, Zucchini Stuffed with Okra and Mushrooms, and Filet Mignon with Hard-Boiled Onions; and, Dhas members Ice Cream with Chocolate-Covered Grasshoppers under Mint Sauce, and Eight-Layer Orange-Glazed Pound Cakewith Ganache Fillings. The product principle says that the number of differentmeals that could be ordered is |A|\u00b7|M|\u00b7|D|=4\u00b75\u00b72=40. Hey, can we use the sum and product principles together in one problem? Yes, it does happen. Example 1.3.3. A debit-card company, DCC Corp., decides that in order to in- crease security, it will allow three-digit and ve-digit personal identication num-bers (PINs) in addition to the usual four-digit PINs. Informally, we notice thatthere are ten choices for each digit, so 10 3possible three-digit PINs, 104possible four-digit PINs, and 105possible ve-digit PINs, for a total of 111,000 possi- ble PINs for DCC customers. In terms of sets, we let Tbe the set of possible three-digit PINs, Fbe the set of possible four-digit PINs, and Vbe the set of possible ve-digit PINs, so that by the sum principle the total number of possi-ble PINs is|T|+|F|+|V|. But we don't know the sizes of T,F,andV.H e r e is where the product principle comes in: Tis secretly the Cartesian product of three sets T 1,T2,T3, each corresponding to one of the digits of a three-digit PIN. So|T|=|T1\u00d7T2\u00d7T3|=|T1|\u00b7|T2|\u00b7|T3|. We know that |T1|=|T2|=|T3|=10.1.4. Preliminaries on Proofs and Disproofs 9 Likewise, Fis the Cartesian product of four ten-element sets and Vis the Carte- sian product of ve ten-element sets. Combining these observations, we obtain|T|+|F|+|V|=(|T 1|\u00b7|T2|\u00b7|T3|)+(|F1|\u00b7|F2|\u00b7|F3|\u00b7|F4|)+(|V1|\u00b7|V2|\u00b7|V3|\u00b7|V4|\u00b7 |V5|)=103+104+105=111,000. Both the sum and product principles are only stated for nite sets and for nite numbers of sets. If you are interested in learning a little bit about innite sets, lookat Chapter 15. You might notice at this point that we haven't said anything about ordering quarts of ice cream (as in Problem 5). Ha! This problem involves more advancedcounting ideas, and we will address their governing principles in Chapters 6 and 7. Check Yourself 1. Gelly Roll pens come in 6 colors of ne point and 11 of medium point, 10 moonlight colors, 10 shadow colors, 12 stardust colors, and 14 metallic colors. (Not kidding.) How many different Gelly Roll pens are there? 2. When redeeming a prize coupon, you may choose one of six charms and either one of three carabiners orone of two bracelets. How many different prize choices could you make? 1.4 Preliminaries on Proofs and Disproofs In order to begin our study of careful reasoning and how to communicate ourthoughts, we have to know the meanings of the words most commonly used in thereading and writing of mathematics. Denition 1.4.1 (a clump of 'em). Adenition is a precise statement of the mean- ing of a term. (Think dictionary, but better.) A conjecture is a statement proposed to be true and made on the basis of intuition and/or evidence from examples. (You already made some conjectures when you worked the problems in Section 1.2, and you'll make many more before this book is through.) A theorem is a statement that can be demonstrated to be true. A proposition is . . . well, some people use it as a smallish theorem, and others use it as a theorem offered (proposed) to the reader.Alemma is a small theorem, usually stated and proven in the process of proving a regular-size theorem. A corollary is a statement whose truth follows directly (or almost directly) from a related theorem. A proof is a justication of the truth of a statement using reasoning so rigorous that the argument compels assent.10 1. Counting and Proofs Notice that denitions are precise; they are precise not only so that one can distinguish between similar concepts but also because they are used as referencesfor rigorous reasoning. Denitions are not arbitrary (even though they often seemthat way). Instead, a denition comes about because someone needs it either toshorten communication or to help justify an idea. (Do you think that our deni-tion of \"denition\" fullls the criteria to be a denition?) Often a denition listscriteria that must be checked in order for the denition to be fullled; be on the watch for such criteria, as they are the key to using a denition as part of a proof. Here are a few examples of denitions\u2014you may already be familiar with these ideas. Denition 1.4.2. An integer n>1i sprime if the only positive divisors of naren and 1. By this denition, 3 is prime because 3 \u00b71=1\u00b73=3, and there is no different possible factorization into positive integers. Denition 1.4.3. A number is even if it is evenly divisible by 2. Equivalently, a number mis even if m=2kfor some integer k. A number misoddifm=2k+1 for some integer k. The number 64 is even because 64 =2\u00b732. However, the number 3 is not even because 3 =2\u00b73 2and3 2is not an integer, but 3 =2\u00b71+1 number 3 is odd. Denition 1.4.4. Abinary number is a number expressed using only the digits 0 and 1, with counting proceeding as 1 ,10,11,100,101,110,... and with places representing powers of two, increasing to the left and decreasing to the right. Thus, the number 64 is not binary because it uses digits other than 0 and 1, but 101 and 101011 .101 can be binary numbers or decimal numbers. The binary number 101 represents 22+0+20=5 in decimal notation, and the binary num- ber 101011 .101 represents 25+0+23+0+21+20+21+0+23=43.625 in decimal notation. (Remember that 21=1 2and 23=1 8.) You probably made some conjectures when you were working through the problems in Section 1.2. The creation of conjectures is a most important processin mathematics, so we will be concerned with it throughout this text. It is part ofwhat makes mathematics an art rather than a collection of facts or rules. Whenyou encounter a new problem or concept, you should generate and explore someexamples. This in turn will help you generate ideas, and then you can notice1.4. Preliminaries on Proofs and Disproofs 11 patterns and say what you think is true (and that's a conjecture!). Practice this process often. Start now by examining these data: 24=5+19=7+17=11+13. 8=3+5. 38=19+19=7+31. What property do the numbers on the left-hand sides of the equations have in common? What property do the numbers on the right-hand sides of the equations havein common? Come up with three more examples that t this pattern. Do you think the pattern always holds? What is your conjecture? (We will revisit this later.) One of the skills you must learn as a mathematician is making conjectures, and another is determining whether your conjectures\u2014and those conjectures othersshare with you\u2014are true. In that vein, you will often be asked to prove statementsthat are true, but sometimes you will be asked to prove statements that are false.(It is not possible to successfully prove a false statement.) Here are some examples of theorems. Example 1.4.5 (of theorems). Three. Yes, three theorems are here. Every natural number greater than 1 has a unique factorization into primenumbers. Suppose nteams play in a tournament. Then for each team to play each other team exactly once, there need to be (n1)+(n2)+\u00b7\u00b7\u00b7+1 games, which is equal to n(n1)/2 games. If an integer is expressed in both binary and decimal forms, the binary num- ber will have at least as many digits as its decimal equivalent. You proved the rst part of the second theorem above, and you may prove the accompanying formula in Chapter 4. A proof must be convincing in the logicalsense, but it need not explain why a theorem is true or provide insight as to why12 1. Counting and Proofs the theorem is true. Those are both devoutly to be wished, of course. A proof must compel assent and, in order to do so, must communicate to the reader or listener.Does this mean that a proof must be intelligible to anyone who reads or listens?In some sense, yes\u2014if someone doesn't believe your proof, then it is inadequate.But the reader/listener must make a reasonable effort to understand, by translatingsymbols and checking denitions of unfamiliar terms. Our next example requires a new bit of notation: aAmeans that ais an element of the set A. Example 1.4.6 (of a proof). Let us prove a special case of the product principle. We would like to show that for nite sets AandB, the number of elements in A\u00d7Bis|A|\u00b7|B|. First note that by denition, the elements of A\u00d7Bare ordered pairs(ai,bj),w h e r e aiAandbjB. For each element aiA,t h e r ea r e|B| pairs(ai,)because there are |B|different ways to put an element of Bin the slot. And, there are |A|elements of A, so the total number of pairs is (number of elements of A)\u00b7(number of pairs formable with one element of A)=|A|\u00b7|B|.W e have reached the desired conclusion, so we are done! The simplest proof technique is direct proof. Here is how to do it. Template for a direct proof: 1. Restate the theorem in the form if (conditions) are true, then (conclusion) is true . Most, but not all, theorems can be restated this way. (For example, some are secretly (conditions) are true if and only if (conclusions) are true , a structure you will learn about in Section 2.3.1.) 2. On a scratch sheet, write assume (conditions) are true orsuppose (condi- tions) are true . 3. Take some notes on what it means for (conditions) to be true. See where they lead. 4. Attempt to argue in the direction of (conclusion) is true. 5. Repeat attempts until you are successful.6. Write up the results on a clean sheet, as follows. Theorem: (State theorem here.) Proof: Suppose (conditions) are true.1.4. Preliminaries on Proofs and Disproofs 13 (Explain your reasoning in a logically airtight manner, so that no reader could question your statements.) Therefore, (conclusion) is true. (Draw a box or checkmark or writeQ.E.D.\u2014the abbreviation of quod erat demonstrandum , Latin for \"which was to be demonstrated\"\u2014to indicate that you're done.) Admittedly, there is a lot of grey area in just how one should argue in the di- rection of (conclusion) is true. This is where the creativity and art of proof come in. However, having a structure to work within is very helpful. Working back- wards from (conclusion) is sometimes helpful as part of the attempts, as long asthe results are presented \"forwards.\" One must be careful to avoid the temptationto start with the conclusion and work backwards and then hand that in as a nishedproof; the steps have to be reversible and presented in the appropriate order. (Onemust also avoid the temptation to give a few examples and call it a day. That isnota proof.) Let's think through a simple direct proof. Example 1.4.7 (of a direct proof). Let us show that if nis an even number, then for any integer k, the number knis even. We have been given the statement in if-then form, so we may suppose that nis an even number. Our desire is to nd a way to show that knis even. What do we know about even numbers? Well, the denition of an even number says that it is a multiple of 2, so that means that n=2mfor some integer m(in fact, it's the integern 2). We can substitute this into the expression we want to know about, kn, to see that kn=k2m. Aha! This is also 2(km)and that means the expression is a multiple of 2, and so it is even. We are done (except for writing it up nicely, which we leave to you in order to save sometyping). Usually direct proofs are not so simple. Sometimes they are much longer; sometimes they require a number of cases. Also, in the wide world of mathe-matics, people don't usually name the proof techniques they're using (except forinduction, which we'll learn about in Chapter 4). Thus, it is rare to nd the sen-tence, \"We proceed by direct proof\" written outside of an introduction to proof writing. Then there is the problem of dealing with false statements. What are you supposed to do if you are given a proposition to prove and it turns out to be false?Well, here's the deal. First, you have to gure out that the proposition is false. (It'snot a bad idea to suspect that any statement you're asked to prove might be false.)If a statement is false, you know why: you've found a particular case in which itis untrue, also known as a counterexample . So that's all you have to do . . . state that counterexample.14 1. Counting and Proofs Example 1.4.8 (of a counterexample). Proposition: Ifnis even, then 2 n5i s also even. This proposition is false, because 4 is an even number but 2 \u00b745=85=3 is odd and thus not even. An excellent reference for learning about proof techniques and proof writing isBook of Proof by Richard Hammack. It has tons of examples and elementary exercises and is freely available online [11]. Example 1.4.9 (of an open problem). Proposition: Ifn>2i se v e n ,t h e n ncan be written as the sum of two primes. Maybe you conjectured this on page 11. Surprise! This is a famous statement known as the Goldbach conjecture . No one knows whether this proposition is true or not! However, most people think it is very likely that the Goldbach conjectureis true\u2014it has been veried for numbers up to 3 \u00b710 18. Check Yourself 1. Prove that if nis even, then n2is even. 2. Prove that if nis odd, then n2+5n3 is also odd. 3.Challenge: Invent your own false proposition and accompany it with a coun- terexample. 1.5 Pigeons and Correspondences We will have much discussion of sets and subsets in Chapter 2, but for now wewill dene subsets so that we can count them. A subset A of a set Bis a set all of whose members are also members of B. For example, {1,4,duck}is a subset of {1,2,3,4,5,duck},b u t{duck,egg}is not. We would like to count the number of subsets of a nite set with nelements, so we will do it more than once, in different ways. The rst way excellently uses the product principle. It also uses the idea of one-to-one correspondence. This is the idea behind converting any counting prob-lem (call this one Problem 1) into another counting problem (perhaps called Prob-lem 2): if the items counted in Problem 1 are in one-to-one correspondence withthe items counted in Problem 2, then there are the same number of items countedin each problem. But before discussing this excellent way of counting subsets,let's do an example.1.5. Pigeons and Correspondences 15 Figure 1.3. By the product principle, there are 2nways to ll in these slots. Example 1.5.1. What are all the subsets of {egg,duck}? Certainly{egg}and {duck}are subsets. Also, {egg,duck}is a subset of itself (the elements are the same), and the empty set (denoted / 0) is also a subset. In fact, the empty set is a subset of every set, though in a rather boring way. So in total, {egg,duck}has four subsets. Consider these subsets as follows. Each subset corresponds to a way of lling in two blanks . The rst blank either has eggor it doesn't, and there are two options there. The second blank either has duck or it doesn't, and there are two options there. The product principle says there are 2 \u00b72=4 subsets in total. From this, one can abstract that if a set Ehasnelements, one of which is egg, then half of the subsets of Econtain the element egg. Each subset of E corresponds to a way of lling in nblanks, as indicated in Figure 1.3. The rst blank either has eggor it doesn't, and there are two options there. Likewise, each other blank either has its assigned element or it doesn't, and each has two options. The product principle says there are 2 \u00b7...\u00b72=2nsubsets in total. We will revisit this argument in another context (graph theory) in Chapter 10. Here is a related way to count the subsets of an n-element set. We assign a 1 or 0 to each set element, depending on whether it is or is not in the given subset (muchlike lling in or leaving a blank). This produces a one-to-one correspondence between subsets and strings of binary digits (called binary strings ). We again use the set{egg,duck}as an example. As shown in the table below, we convert each subset to a binary string. Subset Binary String Decimal Number Counting Number /0 00 0 1 {duck} 01 1 2 {egg} 10 2 3 {egg,duck} 11 3 416 1. Counting and Proofs We can read each binary string as representing a binary number and then con- vert each such binary number to decimal (base 10). However, the smallest of thosedecimal numbers is 0, which is not useful for counting, so we add 1 to each of thedecimal numbers. This effectively produces another one-to-one correspondence,between binary strings and counting numbers. (By the way, one-to-one correspon-dences are more formally known as bijections, and we will discuss them in moredetail in Chapter 3.) This reduces our original question to \"How many binary strings are there with ndigits?\" We might note that the largest binary number represented by an n-digit binary string is 111 ...1(nones). Now, there is one more binary string than there are numbers counting up to 111 ...1(nones) because we need to include the string 000...0(nzeroes). So, we can simply add 1 to the decimal equivalent of 111 ...1 (nones). And, we could add 1 before or after converting to decimal, so let's do it before and get 1000 ...0, or 1 followed by nzeroes. That's 2 n\u2014ta da! Each way of counting the number of subsets of a set is a different proof of Theorem 1.5.2. A set with n elements has 2nsubsets. It is useful to have different proofs of the same theorem because they give dif- ferent understandings of, or different perspectives on, the mathematics involved.Hidden in the above proofs is the following. Fact. If two sets AandBare in one-to-one correspondence, then they have the same size. Yes, you probably knew this, but it is worth stating explicitly so that you will remember it when it is useful. How exactly will it be useful? Well, we willfocus in Chapters 6 and 7 on a few types of counting problems\u2014and most othercounting problems can be solved by creating one-to-one correspondences withthose familiar problems. So trying to nd one-to-one correspondences is a skillyou'll want to acquire over time. There are related facts about the sizes of sets thatarenotin one-to-one correspondence, and we'll nd those in Chapter 3. Here is another explicit statement of a fact that you probably already know. The pigeonhole principle. If you have more pigeons than pigeonholes, then if every pigeon flies into a hole, there must be a hole containing more than one pigeon. (See Figure 1.4.) Really. Not kidding, it is actually called the pigeonhole principle by pretty much everyone; this is not a silly name invented for this book, unlike some othernames you will nd here. How on earth are these pigeons relevant?1.5. Pigeons and Correspondences 17 Figure 1.4. Pigeons sitting in pigeonholes. Example 1.5.3. Suppose you have a bag of pigeons, some grey and some black. More classically, suppose you have a drawer full of grey socks and black socks.How many pigeons/socks must you grab in order to be sure you have two of thesame color? One is clearly not enough, and will only ask to drive the bus; twomight be enough if you're lucky, but you could also get one grey and one black;but three gives the guarantee that even if the rst two were grey and black, respec-tively, the third must be either grey or black and thus be the same color as one ofthe rst two pigeons/socks. While we are making explicit things you know (but might not have stated outright), here is How to apply the pigeonhole principle: 1. Figure out what represents the pigeons. In Example 1.5.3, these were both pigeons and socks. 2. Figure out what represents the pigeonholes. In Example 1.5.3, the pigeon- holes are pigeon/sock colors. 3. Figure out how pigeons correspond to holes. In Example 1.5.3, a pigeon flies into a hole that matches its color. Sometimes it is not obvious how to apply the pigeonhole principle, and in such cases the explicit instructions will be useful. Let's do a more complicatedexample. Example 1.5.4. Did you know that in San Francisco, at least four people have the same number of hairs on their heads? Wow, that's gnarly. Intuition rst: The population of San Francisco is somewhere in the 730,000-775,000 range according to http:/ /www.infoplease.com . According to various unreferenced sources on \"teh intarwebs,\" the average person has 100,000 hairs on her/his head; those who are naturally blonde average18 1. Counting and Proofs 140,000 hairs. It seems that 180,000 would be a reasonable upper bound for the number of hairs on a human head, but let's be safe and use 200,000 as an upperbound. Then, 3\u00b7200,000=600,000<700,000<730,000, and so it looks like we have more than three people per hair-number. With pigeons: Pretend that each resident of San Francisco is a pigeon. And, pretend that there is a set of pigeonholes numbered from 1 to 200,000. Even if the rst 200,000 pigeons fly into different holes, and then the next 200,000 pigeons each fly to a hole containing only one pigeon, and then thenext 200,000 pigeons each fly to a hole containing only two pigeons, there will bethree pigeons in each hole and there are at least 130,000 pigeons who still needholes. Thus, there must be some hole that houses at least four pigeons, and there-fore there are at least four San Franciscans with the same number of hairs on theirheads. By the way, this kind of argument is known as an existence proof .T h a t ' s because we know the four people exist, but we don't know who they are. (This isalso called a nonconstructive proof , in contrast to a constructive proof ,i nw h i c h we would explain how to nd the four people.) Some people nd existence proofsunsatisfying. Oh, well. Example 1.5.4 used a variant on the pigeonhole principle, namely The generalized pigeonhole principle. If you have more than ktimes as many pigeons than pigeonholes, then if every pigeon flies into a hole, there must be ahole containing more than kpigeons. Notice that when proving Theorem 1.5.2, we used a one-to-one correspon- dence; the pigeonhole principle is essentially using the lack of a one-to-one cor- respondence. (After all, if there were a one-to-one correspondence, there wouldbe the same number of pigeons as pigeonholes.) We will investigate some formaldetails along these lines in Chapter 3. And, the generalized pigeonhole principleis essentially using the lack of a many -to-one correspondence. For a nal example, we will use Theorem 1.5.2 together with the pigeonhole principle. Example 1.5.5. Given any list of 25 numbers, each of which has at most ve digits, two subsets of the list have the same sum. Again, intuition rst: Any one of the numbers is less than 100,000, so the sum of all 25 of them is less than 2,500,000. Therefore any subset of the 25 numbers also has sum less1.6. Where to Go from Here 19 than 2,500,000. (We will ignore the empty set, even though it is a subset of the numbers.) To nd the lowest sum possible, consider the case of a subset that's just the number 00001. It has sum 1. Therefore, there are at most 2,500,000 different possible sums the subsets could have. Now, how many subsets are there? We know this from Theorem 1.5.2\u2014there are 225=33,554,432 possible subsets. (Actually, because we have ignored the empty set, we are only considering 2251=33,554,431 subsets.) There are way more subsets than sums, so two of the subsets must have the same sum. In terms of pigeons, we represent the subsets by pigeons and the subset-sums by pigeonholes; a pigeon flies to the pigeonhole labeled with its subset's sum. Check Yourself 1. List all the subsets of {egg,duck,goose}. How many are there? How many of them contain egg? ... duck ? ... goose ? 2. Consider a standard deck of cards with suits hearts ( ), spades (), clubs (), and diamonds ( ), and values 2-10, jack, queen, king, and ace. How many cards must you deal out before being assured that two will have the same suit? How many must you deal out before being assured that two willhave the same value? 1.6 Where to Go from Here This chapter contained a very basic introduction to enumerative combinatorics, the science of counting. To learn more, consult Chapters 6-9 (and then see where those chapters direct you!). More specically, binary numbers and strings are used throughout computer science as ways of representing data in computers. Sets and subsets are treatedextensively in Chapter 2. The study of number properties such as even,odd,a n d prime is part of the larger eld of number theory, of which we will encounter more in Chapter 5. One-to-one correspondences are studied at length in Chapter 3. Wewill address more proof techniques in Chapters 2 and 4, and Richard Hammackhas written the lovely Book of Proof [11] for further study. Yes, this is a brief section, but that's because this is the most introductory chapter! In other chapters we will give more information and advice.20 1. Counting and Proofs Credit where credit is due: Most of the problems in Section 1.2 were inspired by [3], and several problems in Section 1.7 were inspired by [1]. In Section 1.2,WEBS is a real store (see www.yarn.com ) and the Luminous Nose is a real restau- rant in Japan (or at least that's what I'm told the Luminous Nose building is).Example 1.5.3 refers to Don't Let the Pigeon Drive the Bus by Mo Willems. The grape-nut burgers in Problem 1 of Section 1.7 are Jim Henle's recipe, and Prob-lem 5 in Section 1.7 references an old internet joke from the age of modems. 1.7 Problems That Use Counting or Proofs 1. Bruno Burger's specialty is, you guessed it, burgers. They offer four dif- ferent burger patties (chicken, sh, soy, and grape-nut) with your choice of seven vegetables (onions, lettuce, tomato, kale, red onions, zucchini, and eggplant). How many patty-with-a-vegetable burgers can be ordered? 2. The Supreme Bruno is any patty-with-a-vegetable burger plus a condiment (choose from Worcestershire sauce, wasabi sauce, or mustard); you can alsohave cheese, or not. How many Supreme Brunos could be ordered? 3. Prove that the sum of two even numbers n 1andn2is also even. 4. Prove that the sum of two odd numbers n1andn2is even. 5. You are assigned to communicate with a truly ancient computer. You must do this by telephone by shouting binary digits over the line, in clumpsof eight digits. How many different eight-digit binary strings are there toshout? 6. A local creperie offers sweet crepes and savory crepes. A sweet crepe could have any fruit (banana, strawberry, mango, apple, lemon) and anysyrup (nutella, chocolate, caramel, honey). A savory crepe could have anyvegetable (broccoli, mushroom, spinach) and any protein (turkey, cheese,prosciutto). How many different crepes are on the menu? 7. Prove that every binary number nthat ends in 0 is even. 8. Prove that every odd number nends in 1 in its binary representation. 9. Scary Clown offers a Sad Meal containing a sandwich, a salad, a dessert, and a drink. (They are not mixed together in the box.) There are 11 typesof sandwiches, 3 types of salads, and 5 different kinds of desserts. A person1.7. Problems That Use Counting or Proofs 21 with low standards for food could eat a different Sad Meal every day for three years. So how many drinks are possible choices for a Sad Meal? 10. Prove, or nd a counterexample: the difference of two consecutive perfect squares is odd. 11. Every US coin is stamped with the year in which it was minted. How many coins do you need to have in your pocket to be assured that at least two ofthem have the same last digit? How many do you need to be assured that atleast two have the same rst digit? 12. Prove, or nd a counterexample: the sum of two perfect squares is even. 13. In order to keep track of circulation numbers, the library asks you to note on a form, when you leave the library, which combinations of 15 subjectareas and of 8 types of material (books, current journals, databases, boundjournals, videotapes, microlm, microche, DVDs) you used. How manypossible ways are there to ll in a line on the form? 14. (Still about the library) Of course, not every combination is realistically possible, as the library does not hold materials in every type for every disci-pline. If the library has six types of material for each discipline, how manypossible ways are there to ll in a line on the form? 15. (And more about the library) More realistically, some disciplines use ma- terials in more differing forms than others. Let's look at just a few disci-plines. The Dance holdings are in videotape, DVD, current journals, boundjournals, and books. The Math holdings are in books, current journals,databases, bound journals, videotapes, and microlm. The Computer Sci- ence holdings are in books, databases, and DVDs. Ancient Studies holdings are just bound journals, videotapes, microlm, and microche. How manypossible ways are there to ll in a line on the form for these four disciplines? 16. Prove, or nd a counterexample: the sum of two primes is even.17. At Chicago O'Hare International Airport, there are an average of 1,042 flights per day (source: http:/ /flightstats.us/airport.php?code=ORD ). Prove that at least two of these flights must take off within 90 seconds of eachother. 18. Prove that if nis even, then (1) n=1.22 1. Counting and Proofs 19. How many different seven-digit phone numbers are there? 20. How many different seven-digit phone numbers begin with 231- and contain no 9s? 21. Is the product of two odd numbers even or odd? Prove it.22. Let us try to strengthen the result in Example 1.5.5. (a) Does a list of distinct ve-digit numbers of length 20 have the property that there must be two subsets of the list with the same sum? (b) What is the smallest list of distinct ve-digit numbers such that there must be two subsets of the list with the same sum? 23. Prove that if nis any integer, then 3 n 3+n+5 is odd. (Suggestion: do one case for nodd and one case for neven.) 24. A cold-footed centipede has a drawer lled with many, many socks. And yes, that centipede does have 100 feet. If the centipede only owns green and brown socks, how many must it pull from the drawer in the dark of themorning to be assured that it has a matching set for all of its feet (100 socksof the same color)? What if the centipede also owns polka-dotted socks?What if the centipede's drawer has many, many socks of kdifferent colors? 25. Challenge: What if the centipede wants 50 (possibly different) matching pairs, one pair for each pair of feet? Consider rst a centipede who only owns green and brown socks, then a centipede who also owns stripey socks, and then a centipede who owns kdifferent colors of socks. 1.8 Instructor Notes Most of the notes for instructors given in this text are simply descriptions of whatI do in class and how I think about it. You should do what works for you inyour classroom; feel free to ignore any advice I give that does not apply to your situation. However, I hope that some of this commentary is of use. The rst week of the semester often has less class time than most other weeks. It is feasible to spend only one or two class meetings on this chapter. The rst class meeting must of course begin with some orientation (such as introductions and/orsyllabus review) but the bulk of the class can be spent with students working ingroups on problems from Section 1.2. It is worth reassuring students that even1.8. Instructor Notes 23 though they have no experience yet with discrete mathematics, these are problems they can approach just by thinking about them; discrete math is a natural way ofthinking. Working in groups on the rst class day has the advantages of setting a collab- orative and interactive tone early on and having classmates meet each other (thisis especially useful for rst-year class members). I advise counting the studentsoff as 1,2,..., n 4(where nis the number of students present), asking the 1s to collect in one area, the 2s in another, etc., and reminding students to introduce themselves to each other before starting work. Be sure to reserve ten minutes atthe end of class to discern which problems have been completed by all groups andelicit verbal explanations of their solutions from group representatives. To reinforce what students learned in class, have them read Sections 1.3-1.5 for the next class, specically assigning the Check Yourself problems. A good warmup for the second day of class is asking the students to share their Check Yourself Challenge responses. This may lead to a discussion of otherCheck Yourself problems if students have questions about them. Then have theclass walk the instructor through their choice of proof that a set of size nhas 2 n subsets, and use this as an opening to discuss how to turn an argument into a written proof. Generally, students will have different ways of explaining the sameproof, and generally, they will not have very precise language this early in thesemester. It may take one-half to one hour for students to hash out this simple proof, even with prompts from the instructor. This is a valuable exercise for them to learn how much work is involved after solving a problem in order to submithomework. If any time remains in class, ask whether students have questions overthe reading or Check Yourself problems, and then revisit problems not completedor discussed the rst day. (If you have lots of extra time, have the students startin on the Counting Exercises\u2014but be sure to save a few to have them write up ashomework!) In assessing your students after the rst week of classes, remember that they will not have been able to master basic proof techniques yet\u2014they're just starting!Mastery will come over a period of weeks as they practice proof writing in multi-ple mathematical contexts. In case you desire (now or later) additional basic proofproblems for your students, a selection of them is provided in Section 4.12.1.PSYCHIATRY FROM 'MIND MAPS FOR MEDICAL STUDENTS CLINICAL SPECIALTIES' # This chapter is excerpted from Mind Maps for Medical Students Clinical Specialties by Olivia Smith. \u00a9 2017 Taylor & Francis Group. All rights reserved. 8 Learn moreMAP 1.1 Depression 2 TABLE 1.1 T reatment of depression 4 TABLE 1.2 Antidepressants 6 MAP 1.2 Anxiety 8 MAP 1.3 Obsessive compulsive disorder (OCD) 10 TABLE 1.3 Anxiolytics and hypnotics 12 MAP 1.4 Schizophrenia 14 TABLE 1.4 Antipsychotics 16 MAP 1.5 Bipolar disorder 18TABLE 1.5 Personality disorders 20 MAP 1.6 Anorexia nervosa 22 MAP 1.7 Bulimia nervosa 24 MAP 1.8 Attention deficit hyperactivity disorder (ADHD) 26 TABLE 1.6 Dementia 28Chapter One Psychiatry Psychiatry 1 K30033_C001.indd 1 28/02/17 11:02 amPsychiatry 2 Map 1.1. Depression Classification Mild (4-5 symptoms) Moderate (6-7 symptoms) Severe (8-10 symptoms)U nable to complete daily tasksReal difficulty in completing daily tasksCan continue with daily tasks somatic symptoms +/- psychotic symptomsPresentation Somatic or psychotic symptomsSymptoms These may be split into three broad categories: core symptoms, negative thinking and somatic symptoms: Core symptoms: depressed mood , anergia, anhedonia. Negative thinking: thoughts of guilt, low self esteem, thoughts of suicide and death, poor concentration. Somatic symptoms: decreased weight (increased weight seen in atypical depression), sleep disturbance with early morning w aking, decreased libido , constipation, psychomotor retardation or agitation. These symptoms may be used to classify depression as mild , moderate or severe: Psychotic symptoms are mood congruent or incongruent: Mood congruent: Delusions: of poverty , guilt, punishment; if the patient holds the delusion that they are dead, then this is known as Cotard' s syndrome. Hallucinations: Auditory: or withdraw al.Treatment Depends on the classification of depression. It includes psychological therapies such as CBT, antidepressants and ECT (see Table 1.1, p. 4)Investigations Ensure that the patient is really suffering from depression and not an organic disorder . This involves taking a careful history from the patient and the use of questionnaires such as HADS , PHQ-9, GAD-7 followed by investigations depending on patient presentation. Always assess suicide risk. Baseline bloods: FBC, U&E, LFTs (including GGT and MCV for alcohol misuse), TFTs (hypothyroidism may cause low mood),ESR, glucose, calcium, vitamin B12 and folate levels . Specific tests are only used if indicated by history and examination (e.g. urine for toxicology , dexamethasone suppression test, syphilis serology etc). Radiology: CT or MRI may be indicated in some cases . Causes The cause is a complicated interaction between genetic s, neurohormo- nal and psychosocial factors. A few examples are given below: Genetic: family history of depression. Neurohormonal: the monoamine hypothesis of depression is popular , which suggests that there are low levels of serotonin, noradrenaline and dopamine in the brain. Other theories include the suggestion of increased cortisol levels . Psychosocial: adverse life events and negative childhood experiences such as abuse, the loss of a parent and bullying. Chronic physical illness, unemployment and the lack of a confiding relationship are linked to increased rates of depression.What is depression? This is a condition of perv asive low mood. It is diagnosed using the ICD- 10 or the DSM-5 and the following criteria need to be fulfilled: 1. Symptoms must be present for at least 2 weeks with a change from normal mood and at least two to three core symptoms . 2. Change in mood must not be secondary to drug or alcohol misuse, a medical condition or an adverse life event such as bereavement. 3. There must be impairment of social functioning. MAP 1.1. Depr ession K30033_C001.indd 2 28/02/17 11:02 amPsychiatry 3 Map 1.1. Depression Classification Mild (4-5 symptoms) Moderate (6-7 symptoms) Severe (8-10 symptoms)U nable to complete daily tasksReal difficulty in completing daily tasksCan continue with daily tasks somatic symptoms +/- psychotic symptomsPresentation Somatic or psychotic symptomsSymptoms These may be split into three broad categories: core symptoms, negative thinking and somatic symptoms: Core symptoms: depressed mood , anergia, anhedonia. Negative thinking: thoughts of guilt, low self esteem, thoughts of suicide and death, poor concentration. Somatic symptoms: decreased weight (increased weight seen in atypical depression), sleep disturbance with early morning w aking, decreased libido , constipation, psychomotor retardation or agitation. These symptoms may be used to classify depression as mild , moderate or severe: Psychotic symptoms are mood congruent or incongruent: Mood congruent: Delusions: of poverty , guilt, punishment; if the patient holds the delusion that they are dead, then this is known as Cotard' s syndrome. Hallucinations: Auditory: or withdraw al.Treatment Depends on the classification of depression. It includes psychological therapies such as CBT, antidepressants and ECT (see Table 1.1, p. 4)Investigations Ensure that the patient is really suffering from depression and not an organic disorder . This involves taking a careful history from the patient and the use of questionnaires such as HADS , PHQ-9, GAD-7 followed by investigations depending on patient presentation. Always assess suicide risk. Baseline bloods: FBC, U&E, LFTs (including GGT and MCV for alcohol misuse), TFTs (hypothyroidism may cause low mood),ESR, glucose, calcium, vitamin B12 and folate levels . Specific tests are only used if indicated by history and examination (e.g. urine for toxicology , dexamethasone suppression test, syphilis serology etc). Radiology: CT or MRI may be indicated in some cases . Causes The cause is a complicated interaction between genetic s, neurohormo- nal and psychosocial factors. A few examples are given below: Genetic: family history of depression. Neurohormonal: the monoamine hypothesis of depression is popular , which suggests that there are low levels of serotonin, noradrenaline and dopamine in the brain. Other theories include the suggestion of increased cortisol levels . Psychosocial: adverse life events and negative childhood experiences such as abuse, the loss of a parent and bullying. Chronic physical illness, unemployment and the lack of a confiding relationship are linked to increased rates of depression.What is depression? This is a condition of perv asive low mood. It is diagnosed using the ICD- 10 or the DSM-5 and the following criteria need to be fulfilled: 1. Symptoms must be present for at least 2 weeks with a change from normal mood and at least two to three core symptoms . 2. Change in mood must not be secondary to drug or alcohol misuse, a medical condition or an adverse life event such as bereavement. 3. There must be impairment of social functioning. MAP 1.1. Depr ession K30033_C001.indd 3 28/02/17 11:02 amPsychiatry 4 Table 1.1. Treatment of depression TABLE 1.1. Treatment of depression. Treatment depends on the classification of depression. Classification of depression Method of treatment Mild Conservative therapy This is a 'watchful waiting' approach and involves: An exercise regime: the current recommendations are three times a week for 45 minutes lasting 10-12 weeks Alcohol and lifestyle advice Sleep hygiene Guided self help Moderate - severe Conservative therapy: An exercise regime as above Psychological therapies (e.g. cognitive behavioural therapy [CBT], which challenges the patient's thoughts and feelings in order to change them), counselling, interpersonal psychotherapy, dynamic therapy Medical therapy: Antidepressants (see Table 1.2, p. 6). Most patients are started on an SSRI first line If this initial therapy does not work, patients may be switched to alternative antidepressants, have their therapy augmented with antipsychotic or antiepileptic medication by a specialist or be referred for ECT (usually 6-12 sessions, twice weekly). The pathway followed depends on NICE and local guidance K30033_C001.indd 4 28/02/17 11:02 amK30033_C001.indd 5 28/02/17 11:02 amPsychiatry 6 TABLE 1.2. Antidepressants. Class of antidepressant Examples Uses Side effects Selective serotonin reuptake inhibitors (SSRIs)Citalopram Sertraline (often used in those who have previously had a myocardial infarction) Fluoxetine (has a long half-life) Paroxetine DOBS: Depression OCD Bulimia Social phobias GI upset Sexual dysfunction Hyponatraemia in the elderly Discontinuity syndrome: shivering, anxiety, headache, nausea, dizziness Serotonin syndrome: muscle rigidity, seizures, cardiovascular collapse, hyperthermia. Treat Antihistaminergic: weight gain, drowsiness (venlafaxine) Peripheral neuropathy (duloxetine) Increased blood Selegiline is a MAO-B inhibitor that is licensed for use in Parkinson's disease Antimuscarinic: dry mouth, urinary retention, constipation, blurred vision The Cheese Reaction - hypertensive crisis that occurs with ingestion of tyramine containing substances (e.g. cheese, pickled herring, soybean products, etc.) 2 antagonist Mirtazapine Depression PTSD Increased appetite and weight reuptake inhibitors (NRIs)Reboxetine DAP: Map 1.2. Anxiety What is anxiety? Anxiety is a normal emotion that lik ely has been experienced by most of us during our lives. However , when anxiety is such that it interferes with daily functioning and performance, it is considered to be pathological. This relationship is called Yerkes-Dodson law . Anxiety may be classified into many different subgroups: Organic causes: Hyperthyroidism. Hypoglycaemia. Phaeochromocytoma. Cerebral disorders: Phobic disorders (e .g. agoraphobia). Non-situational disorders (e .g. generalized anxiety disorder [a triad of apprehension, motor tension and autonomic overactivity]). Reaction to stressful events (e .g. PTSD). OCD (see Map 1.3, p. 10). Secondary to depression or psychosis . Secondary to a medical condition. Secondary to psychoative substance abuse (e .g. alcohol intak e or withdraw al, amphetamines, benzodiazepine withdraw al).Symptoms These may be generalized or paroxysmal. Remember as P ANICS: P - Palpitations, pins & needles A - Abdominal discomfor t N - Nausea and vomiting I - Intense fear of dying (angor animus ) C - Chest pain, choking S - Sweating, swallowing difficulty (globus hystericus), shortness of breath These symptoms may occur at different times and of v arying intensity depending on the underlying disorder (e .g. if a patient had a social phobia, then an excessive anxious response would only occur on a specific social situation such as delivering a speech). Treatment Depends on the type of anxiety disorder diagnosed, but consists of psychological and pharmacological therapy . Psychological therapy: CBT. Behavioural Pharmacological therapy: Antidepressants (see Table 1.2, p. 6). Anxiolytics (see Table 1.3, p. 12).Investigations There is no specific investigation for anxiety disorders, but it is vital to exclude an organic cause . Therefore, perform initial investigations : Bloods - FBC, U&E, TFTs, glucose, calcium levels . ECG. Toxicology report if indicated. Urinary VMA/pHVA if indicated (fo r phaeochromocytoma).Causes The genetic/biological model: Inherited disorder - many patients have a first-degree family relative with the disorder . Abnormal receptors in the 5-HT , noradrenaline and GAB A systems . The social/psychological model: Response to stressful life events . A psychologically susceptible patient may misinterpret a normal body stimulus .MAP 1.2. Anxiety K30033_C001.indd 8 28/02/17 11:02 amPsychiatry 9 Map 1.2. AnxietyWhat is anxiety? Anxiety is a normal emotion that lik ely has been experienced by most of us during our lives. However , when anxiety is such that it interferes with daily functioning and performance, it is considered to be pathological. This relationship is called Yerkes-Dodson law . Anxiety may be classified into many different subgroups: Organic causes: Hyperthyroidism. Hypoglycaemia. Phaeochromocytoma. Cerebral disorders: Phobic disorders (e .g. agoraphobia). Non-situational disorders (e .g. generalized anxiety disorder [a triad of apprehension, motor tension and autonomic overactivity]). Reaction to stressful events (e .g. PTSD). OCD (see Map 1.3, p. 10). Secondary to depression or psychosis . Secondary to a medical condition. Secondary to psychoative substance abuse (e .g. alcohol intak e or withdraw al, amphetamines, benzodiazepine withdraw al).Symptoms These may be generalized or paroxysmal. Remember as P ANICS: P - Palpitations, pins & needles A - Abdominal discomfor t N - Nausea and vomiting I - Intense fear of dying (angor animus ) C - Chest pain, choking S - Sweating, swallowing difficulty (globus hystericus), shortness of breath These symptoms may occur at different times and of v arying intensity depending on the underlying disorder (e .g. if a patient had a social phobia, then an excessive anxious response would only occur on a specific social situation such as delivering a speech). Treatment Depends on the type of anxiety disorder diagnosed, but consists of psychological and pharmacological therapy . Psychological therapy: CBT. Behavioural Pharmacological therapy: Antidepressants (see Table 1.2, p. 6). Anxiolytics (see Table 1.3, p. 12).Investigations There is no specific investigation for anxiety disorders, but it is vital to exclude an organic cause . Therefore, perform initial investigations : Bloods - FBC, U&E, TFTs, glucose, calcium levels . ECG. Toxicology report if indicated. Urinary VMA/pHVA if indicated (fo r phaeochromocytoma).Causes The genetic/biological model: Inherited disorder - many patients have a first-degree family relative with the disorder . Abnormal receptors in the 5-HT , noradrenaline and GAB A systems . The social/psychological model: Response to stressful life events . A psychologically susceptible patient may misinterpret a normal body stimulus .MAP 1.2. Anxiety K30033_C001.indd 9 28/02/17 11:02 amPsychiatry 10 Map 1.3. Obsessive compulsive disorder (OCD) What is OCD? OCD is a psychiatric disorder characterized by obsessive thoughts, ruminations and compulsive rituals. It affects men and women equally . The mean age of onset is 20 years . The condition is associated with anankastic personality disorder , Gilles de la Tourette syndrome, depression and, less commonly , schizophrenia and basal ganglia disorders .Treatment Psychological therapy: prevention. Thought stopping. Cognitive modelling. Pharmacological therapy: Antidepressants (see Table 1.2, p. 6), particularly clomipramine, which has strong anti-obsessional actions Anxiolytics (see Table 1.3, p. 12). Buspirone is used if mark ed anxiety present. Psychosurgical: This is rare and only considered for intractable cases . Examples include stereotactic cingulotomy or yttrium radioactive implants . Investigations There is no specific test for OC D. (See Map 1.2, p. 8, for tests required to rule out organic causes of anxiety and other types of anxiety disorder .)Causes Genetic factors: 3-7% of sufferers have a first-degree relative with the impulses , ruminations and rituals . The ICD-10 highlights six features that are highly suggestive of the disorder: 1. Obsessions and compulsions that have been present for at least 2 weeks . 2. The obsessions and compulsions decrease the patient' s function. 3. The patient is aw are that these thoughts are generated from their own mind. 4. These thoughts are unpleasantly repetitive . 5. At least one of these thoughts is no t resisted. 6. The compulsions and rituals performed are not, in themselves, pleasurable for the patient.MAP 1.3. Obsessive compulsive disorder (OCD) K30033_C001.indd 10 disorder (OCD)What is OCD? OCD is a psychiatric disorder characterized by obsessive thoughts, ruminations and compulsive rituals. It affects men and women equally . The mean age of onset is 20 years . The condition is associated with anankastic personality disorder , Gilles de la Tourette syndrome, depression and, less commonly , schizophrenia and basal ganglia disorders .Treatment Psychological therapy: prevention. Thought stopping. Cognitive modelling. Pharmacological therapy: Antidepressants (see Table 1.2, p. 6), particularly clomipramine, which has strong anti-obsessional actions Anxiolytics (see Table 1.3, p. 12). Buspirone is used if mark ed anxiety present. Psychosurgical: This is rare and only considered for intractable cases . Examples include stereotactic cingulotomy or yttrium radioactive implants . Investigations There is no specific test for OC D. (See Map 1.2, p. 8, for tests required to rule out organic causes of anxiety and other types of anxiety disorder .)Causes Genetic factors: 3-7% of sufferers have a first-degree relative with the impulses , ruminations and rituals . The ICD-10 highlights six features that are highly suggestive of the disorder: 1. Obsessions and compulsions that have been present for at least 2 weeks . 2. The obsessions and compulsions decrease the patient' s function. 3. The patient is aw are that these thoughts are generated from their own mind. 4. These thoughts are unpleasantly repetitive . 5. At least one of these thoughts is no t resisted. 6. The compulsions and rituals performed are not, in themselves, pleasurable for the patient.MAP 1.3. Obsessive compulsive disorder (OCD) K30033_C001.indd hypnotics TABLE 1.3. Anxiolytics and hypnotics. Drug name Mechanism of action Uses Side effects Buspirone 5-HT1A partial agonist Generalized anxiety disorder Nausea and vomiting Dizziness Headache Blurred vision Amobarbital Increases the inhibitory action of GABA by binding to the barbiturate binding site on the GABAA receptor. Increased influx of Cl- ions Severe insomnia Dependence Withdrawal symptoms Daytime sedation Cardiorespiratory depression Drug interactions since it induces p450 system Zolpidem Binds to the benzodiazepine binding site on the GABAA receptorInsomnia Dependence Tolerance Sedation Drowsiness Dizziness Diazepam Increases the inhibitory action of GABA by binding to the benzodiazepine binding site on the GABA receptor. Increased influx of Cl- ionsAnxiety Insomnia Status epilepticus Dependence Tolerance Cardiorespiratory depression Drowsiness Sedation Flumazenil Competes at the benzodiazepine binding site. It is therefore an antagonist to the actions of zolpidem and diazepam 11:02 amPsychiatry 14 Causes The exact cause of schizophrenia is unknown but there are many theories: 1. The dopamine hypothesis - dopaminergic over activity . 2. Serotonergic overactivity - due to the superiority of clozapine in treating treatment resistant schizophrenia. 3. Genetics - higher incidence in those with a family history . Association with the DISC1 gene (Disrupted In SChizophrenia). 4. Drug abuse - particularly cannabis use at an early age . 5. Group A personality disorder . 6. Illness during pregnancy . 7. Winter births . 8. Adverse life events .What is schizophrenia? This is a chronic psychiatric disorder in which the patient experiences distorted realit y. It affects men and women equally, although the former tend to have an earlier onset. The condition is associated with a higher suicide rate than the general population (10-15%).Symptoms The ICD-10 suggests that symptoms need to be present for at least 1 month. These symptoms may be described as Schneider' s first rank symptoms (remember as TAP2) or , more broadly , as positive and negative symptoms . Schneider' s first rank symptoms: T - Thought disorder - thought insertion, withdraw al, broadcasting. This may interfere with speech, leading to neologisms, thought stopping and knight's move thinking. A - Auditory hallucinations - thought ech o, running commentary . P - Passivity phenomenon - belief that body is controlled by an external agency . P - delusional Perceptions - thinking an everyday object has a specific meaning for the patient. Positive symptoms: Thought disorder - thought insertion, withdraw al, broadcasting. Delusions . Ideas of reference . Hallucinations . Passivity phenomena. (ABCP): Blunting of affect. Catatonia. Poverty of ideation. Investigations There is no specific investigation for schizophre- nia. It is a clinical diagnosis but it is vital to rule out other causes of psychosis , such as drug- induced psychosis, and to perform a risk assessment. Moreover , baseline bloods should be performed as well as an ECG due to the possible side effects of antipsychotic medication.Treatment Depends on whether it is an urgent or non-urgent situation. Follow your local guideline s. Psychological therapy: CBT. Family intervention - prognosis is worse in families with high expressed emotion. Art therapy. Liaise with social work er regarding housing difficulties and employment . Pharmacological therapy: Antipsychotics (see Table 1.4, p. 1.4. Schizophrenia K30033_C001.indd 14 28/02/17 11:02 amPsychiatry 15 Map 1.4. SchizophreniaCauses The exact cause of schizophrenia is unknown but there are many theories: 1. The dopamine hypothesis - dopaminergic over activity . 2. Serotonergic overactivity - due to the superiority of clozapine in treating treatment resistant schizophrenia. 3. Genetics - higher incidence in those with a family history . Association with the DISC1 gene (Disrupted In SChizophrenia). 4. Drug abuse - particularly cannabis use at an early age . 5. Group A personality disorder . 6. Illness during pregnancy . 7. Winter births . 8. Adverse life events .What is schizophrenia? This is a chronic psychiatric disorder in which the patient experiences distorted realit y. It affects men and women equally, although the former tend to have an earlier onset. The condition is associated with a higher suicide rate than the general population (10-15%).Symptoms The ICD-10 suggests that symptoms need to be present for at least 1 month. These symptoms may be described as Schneider' s first rank symptoms (remember as TAP2) or , more broadly , as positive and negative symptoms . Schneider' s first rank symptoms: T - Thought disorder - thought insertion, withdraw al, broadcasting. This may interfere with speech, leading to neologisms, thought stopping and knight's move thinking. A - Auditory hallucinations - thought ech o, running commentary . P - Passivity phenomenon - belief that body is controlled by an external agency . P - delusional Perceptions - thinking an everyday object has a specific meaning for the patient. Positive symptoms: Thought disorder - thought insertion, withdraw al, broadcasting. Delusions . Ideas of reference . Hallucinations . Passivity phenomena. (ABCP): Blunting of affect. Catatonia. Poverty of ideation. Investigations There is no specific investigation for schizophre- nia. It is a clinical diagnosis but it is vital to rule out other causes of psychosis , such as drug- induced psychosis, and to perform a risk assessment. Moreover , baseline bloods should be performed as well as an ECG due to the possible side effects of antipsychotic medication.Treatment Depends on whether it is an urgent or non-urgent situation. Follow your local guideline s. Psychological therapy: CBT. Family intervention - prognosis is worse in families with high expressed emotion. Art therapy. Liaise with social work er regarding housing difficulties and employment . Pharmacological therapy: Antipsychotics (see TABLE 1.4. Antipsychotics. Classification Examples Mechanism of actionUses Side effects Typical Haloperidol Chlorpromazine ThioridazineBlock D2 receptors, thereby increasing concentration of cAMP1Schizophrenia Psychosis Mania Tourette's syndromeAntipsychotic medications block several receptors, which results in an array of side effects: D2 receptors - Tardive dyskinesia R - Restless lower limbs (akathesia) A - Acute dystonia P - Parkinsonisms Mesocortical pathway: increases negative symptoms (see Map 1.4, p. 14). Mesolimbic pathway: decreases positive symptoms (see Map 1.4, p. 14). 1 antagonist: postural hypotension Antimuscarinic: dry mouth, Antihistaminergic: weight gain, drowsiness Neuroleptic malignant syndrome (NMS) - this is a life-threatening reaction that may be caused by an adverse reaction to antipsychotic drugs. Symptoms of NMS include: fever, muscle rigidity, altered mental status and increasing concentration of cAMP1 receptors, but are also effective in blocking 5-HT2, 1 and H1 receptorsSchizophrenia Olanzapine may also be used for anxiety disorders, OCD, mania, depression and Tourette's syndrome Side effects are the same as those listed for typical agents; however, there are far fewer EPSE and anticholinergic side effects, which is why atypical agents are preferred to the older, typical medications. Specific side effects: Clozapine (used in treatment resistant schizophrenia): agranulocytosis Olanzapine: weight gain Mood stabilizer Lithium Unknown. Thought to act in a similar way to other single charged cations by interfering with membrane ion transport mechanisms Bipolar disorder Mania Common: tremor, diarrhoea, increased appetite Those that require blood test monitoring: nephrogenic diabetes insipidus, hypothyroidism abnormality Special points: narrow therapeutic index. Monitor Table 1.4. Antipsychotics K30033_C001.indd 17 28/02/17 11:02 amPsychiatry 18 Map 1.5. Bipolar disorder What is bipolar disorder? Major depression alongside at least one manic (bipolar I) or one hypomanic (bipolar II) episode characterizes this disorder . Patients will eventually suffer from depressive symptoms. In some w ays this disorder may be viewed as a cyclical interchanging between elev ated and low mood where the patient is functionally normal between episodes . Men and women are equally affected. MAP 1.5. Bipolar disorderCauses The cause is a complicated interaction between genetic, neurohormonal, neuroanatomical and psychosocial factors. A few examples are given below: Genetic: family history bipolar disorder . Possible involvement of chromosomes 6q an d 8q21. Neurohormonal: the monoamine hypothesis. Neuroanatomical: increased size of lateral ventricles, abnormal HP A axis . Psychosocial: adverse life events and negative childhood experiences such as abuse, PTSD . Treatment Depends on whether it is an urgent ornon-urgent situation. Follow your local guidelines . Psychological therapy: CBT. Family focused therapy . Liaise with social work er regarding housin g difficulties and employment . Pharmacological therapy: Antipsychotics and mood stabilizers (see Table 1.4, p. 16). Antiepileptic medications are also used either independently or in combination with lithium. Investigations There is no specific investigation for bipola r disorder . It is a clinical diagnosis but it is vital to rule out other causes of psychosis , such as drug-induced psychosis, as well as organic mood disorders and to perform a risk assessment. Moreover , baseline bloods should be performed as well as an ECG due to the possible affects of antipsychotic medication. (Note: QTc prolongation may occur with all antipsychotics .) Investigations as for depression (see Map 1.1, p. 2).Types of bipolar disorder Types Key featur es Bipolar I Bipolar II Rapid cycling Cyclothymia At least one manic episode lasting >1 week. Usually coupled with periods of depression, but some patients may only have manic episodes . >1 episode of severe depression, but only coupled with hypomania. >4 mood swings withi n a year . Mood swings that are not as severe as those in bipolar disorder . Follows a cyclic pattern that may last for longer periods. Symptoms Those of depression (see Map 1.1, p. 2). Those of mania: these symptoms must be present for at least 1 week. Remember as DIG F AST: D - Distractibility I - Irresponsible behaviour (e .g. hedonistic behaviour without considering the consequences such as borrowing or spending v ast sums of money and having unprotected sexual intercourse) G - Grandiosity with delusions of power/wealth F - Flight of ideas A - Activity increases S - Sleep decreases T - Talkativeness K30033_C001.indd 18 28/02/17 11:02 amPsychiatry 19 Map 1.5. Bipolar disorderWhat is bipolar disorder? Major depression alongside at least one manic (bipolar I) or one hypomanic (bipolar II) episode characterizes this disorder . Patients will eventually suffer from depressive symptoms. In some w ays this disorder may be viewed as a cyclical interchanging between elev ated and low mood where the patient is functionally normal between episodes . Men and women are equally affected. MAP 1.5. Bipolar disorderCauses The cause is a complicated interaction between genetic, neurohormonal, neuroanatomical and psychosocial factors. A few examples are given below: Genetic: family history bipolar disorder . Possible involvement of chromosomes 6q an d 8q21. Neurohormonal: the monoamine hypothesis. Neuroanatomical: increased size of lateral ventricles, abnormal HP A axis . Psychosocial: adverse life events and negative childhood experiences such as abuse, PTSD . Treatment Depends on whether it is an urgent or non-urgent situation. Follow your local guidelines . Psychological therapy: CBT. Family focused therapy . Liaise with social work er regarding housin g difficulties and employment . Pharmacological therapy: Antipsychotics and mood stabilizers (see Table 1.4, p. 16). Antiepileptic medications are also used either independently or in combination with lithium. Investigations There is no specific investigation for bipola r disorder . It is a clinical diagnosis but it is vital to rule out other causes of psychosis , such as drug-induced psychosis, as well as organic mood disorders and to perform a risk assessment. Moreover , baseline bloods should be performed as well as an ECG due to the possible affects of antipsychotic medication. (Note: QTc prolongation may occur with all antipsychotics .) Investigations as for depression (see Map 1.1, p. 2).Types of bipolar disorder Types Key featur es Bipolar I Bipolar II Rapid cycling Cyclothymia At least one manic episode lasting >1 week. Usually coupled with periods of depression, but some patients may only have manic episodes . >1 episode of severe depression, but only coupled with hypomania. >4 mood swings withi n a year . Mood swings that are not as severe as those in bipolar disorder . Follows a cyclic pattern that may last for longer periods. Symptoms Those of depression (see Map 1.1, p. 2). Those of mania: these symptoms must be present for at least 1 week. Remember as DIG F AST: D - Distractibility I - Irresponsible behaviour (e .g. hedonistic behaviour without considering the consequences such as borrowing or spending v ast sums of money and having unprotected sexual intercourse) G - Grandiosity with delusions of power/wealth F - Flight of ideas A - Activity increases S - Sleep decreases T - Talkativeness K30033_C001.indd 19 28/02/17 11:02 amPsychiatry 20 Table 1.5. Personality disorders TABLE 1.5. Personality disorders. These are pervasive difficulties in personality that impact upon a patient's social functioning in a detrimental way. They are incredibly difficult to treat and often require years of psychotherapy. Cluster General characteristics Specific subtypes A Odd eccentric behaviour Do not form meaningful relationships Psychosis is not present1. Paranoid: Suspicious Defence mechanism: projection 2. Schizoid: Social withdrawal/likes social isolation 3. Schizotypal: Eccentric behaviour and beliefs 'Magical thinking' B The emotional cluster Associated with mood disorders Associated with substance abuse1. Antisocial: Affects males more than females Criminal behaviour and disregard for other members of society 2. Borderline: Affects females more than males Associated with depression Associated with deliberate self harm Feelings of emptiness Unstable interpersonal relationships Black and white thinking Impulsive behaviour Defence mechanism: splitting 3. Histrionic: Attention seeking, very flirtatious female Sexually provocative K30033_C001.indd 20 28/02/17 11:02 amPsychiatry 21 Table 1.5. Personality disorders4. Narcissistic: Affects males more than females Grandiose delusions Lack of empathy Loves admiration and loathes criticism C The anxious cluster Associated with anxiety disorders1. Avoidant: Very sensitive to rejection Avoids social situations 2. Anankastic: Associated with OCD Perfectionist personalities 3. Dependent: Low self esteem 'Clingy' K30033_C001.indd 21 28/02/17 11:02 amPsychiatry 22 Map 1.6. Anorexia nervosa Symptoms Excessive weight loss . Weakness and peripheries . Bradycardia. Thin lanugo hair over face . Inability to perform squat test. Co-morbid depression/OCD . Signs Signs of induced purging: Russell' s Tooth enamel that is pitted/eroded. . Signs of electrolyte imbalance: Cardiac .Treatment Psychoeducation concerning weight and nutrition. Psychological therapy: CBT. Family focused . Interpersonal Pharmacological therapy: Correction of electrolyte imbalance . Restore healthy weight. Prescribe meals that are nutritionall y appropriate. Urgent situations may require refeeding under the Mental Health Act. Complications Death. Endocrine dysfunction (e.g. amenorrhoea). Metabolic alkalosis - from excessive vomiting. Metabolic acidosis - from laxative abuse . Cardiac complications (e .g. arrhythmias and QT prolongation that may lead to sudden death). Refeeding syndrome - results in hypophosphataemia, which can lead to rhabdomyolysis, arrhythmias, respiratory failure, convulsions, coma and death. nervosa? is an eating disorder that is characterized by ICD-10 by four k ey points: 1. BMI <17.5. 2. morbid of fatness . 4. Endocrine dysfunction (e .g. amenorrhoea). This condition affects females 10-20 times more than males. It is associated with social classes I and II as well as certain professions (e.g. models and dancers).Causes The cause is a complicated interaction between genetics, neurohormonal and psychosocial factors. A few examples are given below: Genetic: family history of anorexia nervosa. Neurohormonal: abnormalities in serotonin metabolism. Psychosocial: adverse life events , perfectionist personalities, high achieving families, media expectations of thinness relating to the ideal female form. Investigations Clinical assessment: overall clinical assessment including the use of tools suchas the SCOFF questionnaire: S - Have you ever made yourself Sick because you are uncomfortably full? C - Do you feel that you have lost Control over how much you eat? O - Have you lost One stone in a 3 month period? F - Do you believe yourself to be Fat when others say you are thin? F - Does Food dominate your life? BMI = weight (kg)/height (m U&E, LFTs, TFTs, glucose , calcium levels. ECG. Blood pressure . Toxicology report if indicated. MAP 1.6. Anor exia nervosa 22 28/02/17 11:02 nervosaSymptoms Excessive weight and . Bradycardia. Thin lanugo hair over face . Inability to perform squat test. Co-morbid depression/OCD . Signs Signs of induced purging: Russell' s Tooth enamel that is pitted/eroded. . Signs of electrolyte imbalance: Cardiac .Treatment Psychoeducation concerning weight and nutrition. Psychological therapy: CBT. Family focused . Interpersonal Pharmacological therapy: Correction of electrolyte imbalance . Restore healthy weight. Prescribe meals that are nutritionall y appropriate. Urgent situations may require refeeding under the Mental Health Act. Complications Death. Endocrine dysfunction (e.g. amenorrhoea). Metabolic alkalosis - from excessive vomiting. Metabolic acidosis - from laxative abuse . Cardiac complications (e .g. arrhythmias and QT prolongation that may lead to sudden death). Refeeding syndrome - results in hypophosphataemia, which can lead to rhabdomyolysis, arrhythmias, respiratory failure, convulsions, coma and death. nervosa? is an eating disorder that is characterized by ICD-10 by four k ey points: 1. BMI <17.5. 2. morbid of fatness . 4. Endocrine dysfunction (e .g. amenorrhoea). This condition affects females 10-20 times more than males. It is associated with social classes I and II as well as certain professions (e.g. models and dancers).Causes The cause is a complicated interaction between genetics, neurohormonal and psychosocial factors. A few examples are given below: Genetic: family history of anorexia nervosa. Neurohormonal: abnormalities in serotonin metabolism. Psychosocial: adverse life events , perfectionist personalities, high achieving families, media expectations of thinness relating to the ideal female form. Investigations Clinical assessment: overall clinical assessment including the use of tools such as the SCOFF questionnaire:S - Have you ever made yourself Sick because you are uncomfortably full? C - Do you feel that you have lost Control over how much you eat? O - Have you lost One stone in a 3 month period? F - Do you believe yourself to be Fat when others say you are thin? F - Does Food dominate your life? BMI = weight (kg)/height (m U&E, LFTs, TFTs, glucose , calcium levels. ECG. Blood pressure . Toxicology report if indicated. MAP 1.6. Anor exia nervosa 23 28/02/17 11:02 amPsychiatry 24 Map 1.7. Bulimia nervosa Symptoms Remember that patients may actually be overweight due to binge eating behaviour . Co-morbid depression/OCD. Signs Signs of induced purging: Russell' s enamel that is pitted/eroded. imbalance: Cardiac arrhythmias. Hypokalaemia is associated with vomiting as well as laxative abuse . Treatment Psychological therapy: CBT. Family focused Antidepressants such as TCAs and SSRIs have been shown to decrease purgative behaviour . Urgent situations are less common than for anorexia nervosa since patients are often of normal weight.MAP 1.7. Bulimia nervosa What is bulimia nervosa? This is an eating disorder that is characterized by ICD-10 by three k ey points: 1. Patient engages in binge eating . 2. There is evidence of purgative behaviour (e.g. vomiting to counteract the effects of binge eating and increased weight). 3. A morbid fear of fatness .Causes The cause of bulimia is unclear , but it is thought to be due to complex interactions between genetic, neurohormonal and psychosocial factors. A few examples are given below . Genetic: family history of bulimia nervosa. Neurohormonal: theories involving alteration of serotonin and noradrenaline exist. Psychosocial: adverse life events, perfectionist personalities, past dieting behaviour , anorexia nervosa, personality disorders particularly borderline patients, low self esteem and depression. Investigations Like anorexia nervosa, there is no specific underlying test for bulimia nervosa. However , it is important to rule out organic causes of weight gain and weight loss as well as performing a psychiatric ev aluation. It is important to perform the investigations listed below , particularly U&E, since electrolyte disturbances are common with purgative . BMI = - FBC, U&E, LFTs, TFTs, glucose, calcium levels. ECG. Blood pressure . Toxicology report if indicated. K30033_C001.indd 24 28/02/17 11:02 amPsychiatry 25 Map 1.7. Bulimia nervosaSymptoms Remember that patients may actually be overweight due to binge eating behaviour . Co-morbid depression/OCD. Signs Signs of induced purging: Russell' s enamel that is pitted/eroded. imbalance: Cardiac arrhythmias. Hypokalaemia is associated with vomiting as well as laxative abuse . Treatment Psychological therapy: CBT. Family focused Antidepressants such as TCAs and SSRIs have been shown to decrease purgative behaviour . Urgent situations are less common than for anorexia nervosa since patients are often of normal weight.MAP 1.7. Bulimia nervosa What is bulimia nervosa? This is an eating disorder that is characterized by ICD-10 by three k ey points: 1. Patient engages in binge eating . 2. There is evidence of purgative behaviour (e.g. vomiting to counteract the effects of binge eating and increased weight). 3. A morbid fear of fatness .Causes The cause of bulimia is unclear , but it is thought to be due to complex interactions between genetic, neurohormonal and psychosocial factors. A few examples are given below . Genetic: family history of bulimia nervosa. Neurohormonal: theories involving alteration of serotonin and noradrenaline exist. Psychosocial: adverse life events, perfectionist personalities, past dieting behaviour , anorexia nervosa, personality disorders particularly borderline patients, low self esteem and depression. Investigations Like anorexia nervosa, there is no specific underlying test for bulimia nervosa. However , it is important to rule out organic causes of weight gain and weight loss as well as performing a psychiatric ev aluation. It is important to perform the investigations listed below , particularly U&E, since electrolyte disturbances are common with purgative . BMI = - FBC, U&E, LFTs, TFTs, glucose, calcium levels. ECG. Blood pressure . Toxicology report if indicated. K30033_C001.indd 25 28/02/17 11:02 amPsychiatry 26 Map 1.8. Attention deficit hyperactive disorder (ADHD) Symptoms Decreased concentration. Poor school performance . Forgetfulness . Hyperactive behaviour . Inability to organize tasks . Fidgeting. Very talkative . Often interrupts .Treatment Psychological therapy: CBT. Family focused therapy including parent management therapy . Educational intervention. Pharmacological therapy: Methylphenidate (Ritalin) is the treatment of choice .Complications Substance misuse. Dissocial personality disorder . Unemployment. Low self esteem. Increased rate of suicide .What is ADHD? This is perv asive, developmentally inappropriate behaviour in which the patient lacks concentration and is hyperactive. It is more common in males than females and must be present in at least two different settings (e .g. at home and at school) . The symptoms must be present for at least 6 months .Causes The cause is a complicated interaction between genetics, neurohormonal and psychosocial factors. A few examples are given below. Genetics: possible involvement of chromosomes 5, 6 and 11. Neurohormonal: dysregulation of dopamine and noradrenaline . Psychosocial: familial dysfunction, parental stress, potentially food additives . Investigations There is no specific test for ADHD , but it is important to perform a full developmental , medical and familial assessment as well as obtaining information from the child 's school concerning their behaviour . The Conners Comprehensive Assessment Scale may aid initial assessment and follow-up appointments .MAP 1.8. Attention deficit hyper active disorder (ADHD) K30033_C001.indd 26 28/02/17 11:02 amPsychiatry 27 Map 1.8. Attention deficit hyperactive disorder (ADHD)Symptoms Decreased concentration. Poor school performance . Forgetfulness . Hyperactive behaviour . Inability to organize tasks . Fidgeting. Very talkative . Often interrupts .Treatment Psychological therapy: CBT. Family focused therapy including parent management therapy . Educational intervention. Pharmacological therapy: Methylphenidate (Ritalin) is the treatment of choice .Complications Substance misuse. Dissocial personality disorder . Unemployment. Low self esteem. Increased rate of suicide .What is ADHD? This is perv asive, developmentally inappropriate behaviour in which the patient lacks concentration and is hyperactive. It is more common in males than females and must be present in at least two different settings (e .g. at home and at school) . The symptoms must be present for at least 6 months .Causes The cause is a complicated interaction between genetics, neurohormonal and psychosocial factors. A few examples are given below. Genetics: possible involvement of chromosomes 5, 6 and 11. Neurohormonal: dysregulation of dopamine and noradrenaline . Psychosocial: familial dysfunction, parental stress, potentially food additives . Investigations There is no specific test for ADHD , but it is important to perform a full developmental , medical and familial assessment as well as obtaining information from the child 's school concerning their behaviour . The Conners Comprehensive Assessment Scale may aid initial assessment and follow-up appointments .MAP 1.8. Attention deficit hyper active disorder (ADHD) K30033_C001.indd 27 28/02/17 11:02 amPsychiatry 28 Table 1.6. Dementia TABLE 1.6. Dementia. Dementia is a syndrome of a progressive global decline in cognitive function. Type of dementia Causes Signs and symptoms Investigations Treatment Complications Alzheimer's disease Exact cause unknown. Risk factors include: Down's syndrome due to amyloid precursor protein (APP) gene load Familial gene associations: APP - chromosome 21 Presenilin-1 - chromosome 14 Presenilin-2 - chromosome 1 Apolipoprotein E4 (APoE4) alleles - chromosome 19 Hypothyroidism Previous head trauma Family history of Alzheimer's disease Amnesia Disorientation Changes in personality Decreasing self care Apraxia Agnosia Aphasia Lexial anomia Paranoid delusions Depression Wandering Aggression Sexual disinhibitionMental state examination and mini-mental state examination vitamin B12 and folate levels, blood culture, ECG, chest x-ray, CT, MRI, SPECT Three main findings on histology: BAT B - Beta amyloid plaques A - Acetylcholine T - neurofibrillary Tangles Memantine - of falls K30033_C001.indd 28 28/02/17 11:02 amPsychiatry 29 Table 1.6. DementiaVascular dementia Is the second most common cause of dementia Caused by infarcts of small and medium sized vessels in the brain Genetic association with cerebral autosomal dominant arteriopathy with subcortical infarcts and leukoencephalopathy (CADASIL) on 19Follows deteriorating stepwise progression. There are three types: 1. Vascular dementia following stroke 2. Multi-infarct dementia following multiple strokes 3. Binswanger disease following microvascular infarcts Amnesia Disorientation Changes in personality Decreasing self care Depression Signs of UMN lesions (e.g. brisk reflexes) SeizuresMental state examination and mini-mental state examination folate levels, levels, screen, syphilis serology, ECG, chest x-ray, CT, MRI, SPECT Dietary advice Smoking cessation Treat DM and hypertension AspirinSignificant co-morbidity (e.g. cardiovascular disease and renal disease) Continued overleaf K30033_C001.indd 29 28/02/17 11:02 amPsychiatry 30 Table 1.6. Dementia TABLE 1.6. Dementia. Dementia is a syndrome of a progressive global decline in cognitive function (continued ). Type of dementia Causes Signs and symptoms Investigations Treatment Complications Dementia with Lewy bodies Associated with Parkinson's disease Avoid antipsychotic drugs in these patientsIs a triad of: 1. Parkinsonianism - bradykinesia, gait disorder 2. Hallucinations - predominately visual, usually of animals and people 3. Disease process follows a fluctuating course Mental state examination and mini-mental state examination Addenbrooke's cognitive ANTIPSYCHOTICS - cause hypersensitivity to neuroleptics Levodopa may be used to treat Parkinson's symptoms but these may worsen psychotic symptoms Neuroleptic hypersensitivity Autonomic dysfunction Fluctuating blood pressure Arrhythmias Increased risk of falls Frontotemporal dementia (Pick's disease) Genetic association with chromosome 17q21-22 and tau gene 3 mutations Amnesia Disorientation Changes in personality Decreasing self care Mutism Echolalia Parkinsonism DisinhibitionMental state cognitive examination (ACE-III) CT, MRI, SPECTCurrently none. Only supportive treatment available. Increased risk of falls Increased risk of infection K30033_C001.indd 30 28/02/17 11:02 amPsychiatry 31 Table 1.6. DementiaHistology: depends on subtype: 1. Microvacuolar type - microvacuolation 2. Pick type - widespread gliosis, no microvacuolation 3. MND type - histological changes like MND Huntington's dementia Caused by Huntington's disease, which is an autosomal dominant disorder where there is a defective gene on chromosome 4 Causes uncontrollable choreiform movements and dementiaUncontrollable choreiform movements Diagnostic irritability - SSRIs Dysphagia Increased risk of falls Increased risk of infection Continued overleaf K30033_C001.indd 31 28/02/17 11:02 amPsychiatry 32 Table 1.6. Dementia TABLE 1.6. Dementia. Dementia is a syndrome of a progressive global decline in cognitive function (continued ). Type of dementia Causes Signs and symptoms Investigations Treatment Complications Creutzfeldt-Jakob disease (CJD) Caused by prions Progressive and without cure There is also variant CJD (vCJD), which has an earlier onset of death Rapidly progressive dementia (4-5 months) Amnesia Disorientation Changes in personality Depression Psychosis Ataxia SeizuresEEG - triphasic spikes seen LP - for 14-3-3 protein CT, MRINo cure Increased risk of infection Coma Heart failure Respiratory failure Other causes HIV Vitamin B12 deficiency Syphilis Wilson's disease - autosomal recessive condition where copper accumulates within the tissues Dementia pugilistica (aka \"punch drunk\" syndrome) - seen in boxers and who suffer multiple concussions K30033_C001.indd 32 28/02/17 amBODY SIZES FROM 'FITTING THE INTRODUCTION TO ERGONOMICS / HUMAN FACTORS ENGINEERING, SEVENTH EDITION' # This chapter is excerpted from Fitting the Human: Introduction to Ergonomics / Human Factors Engineering, Seventh Edition by Karl H.E. Kroemer. \u00a9 2017 Taylor & Francis Group. All rights reserved. 9 Learn more5Chapter ONe Body sizes We all experience changes in body size: quick growth during childhood followed by a period of fairly constant dimensions during adulthood for about 20-40 or more years until final variations come with senescence. As a rule, men grow to be taller as adults than women do. During any of the age periods, some persons are smaller or bigger than their peers are and body proportions can differ widely among individuals. 1.1 Our e arth's populations The most common way to describe the bodies of populations, and of individuals as well, is by standing height (stature) and body weight. Table 1.1 contains the 1990 estimates of adult stat - ures for 20 different regions of the Earth. Such estimates give an overall impression about the differ - ences in adults' body sizes, but designers need more precise anthropometric information. Variances, even though small compared to how similar we are, must be put into exact num - bers so that we can set up clothing tariffs, sizes of eyeglass frames, heights of workbenches, cockpit dimensions\u2014all dif - ferent to fit various user groups. 1.2 Measurements We can estimate body bulk, or we may ask persons about their body size, and if they know, they can tell us; however, with the current concerns about obesity in many countries, some Body sizes differ height and weight anthropometrics around the globe6 Fitting the h uman respondents are likely to add a bit to their height and slightly reduce their weight. Therefore, actual measurements are in order. Table 1.2 lists the measured heights and weights of persons all around the globe. When checking the entries in the table we notice that often the measured samples are small and that many regions and populations on Earth are not represented. Yet, altogether, this table alerts us to the magnitudes of dif - ferences in average body sizes and weights among groups of people.table 1.1 Estimates of average Stature (in mm) in regions of the Earth Region Females Males Africa North 1610 1690 West 1530 1670 Southeast 1570 Asia extraction 1670 W., Aune, I. A., and Pieper, U., Occupational Safety and Health, 65, 21-42, 1990.7 Body sizes table 1.2 Measured heights and weights of adults: Averages (standard deviations) Sample sizeStature (mm)Weight (kg) Algeria Females (Mebarki and Davies 1990)666 1576 (56) 61 (1) Brazil Males (Ferreira 1988; cited Al-Haboubi 1991)3076 1699 (67) nda CameroonUrban 1620 Atanga 2006)558 1721 75 ChinaFemales (Taiwan) about 6001572 (53) 52 (7) Males (Taiwan) (Wang, Wang, and Liu 2002)about 6001705 (59) 67 (9) France Females 5510 1625 (71) 62 (12) Males (IFTH and Goncalves, personal communication 2006)3986 1756 (77) 77 (13) Germany Female army applicants 301 1674 64 Male army applicants (Leyk, (10) Males (Chakarbarti 1997)710 1650 (70) 57 (11) East-Ctr. India male farm workers (Victor Nath and Verma 2002)300 1638 (56) 57 (7) (Continued)8 Fitting the h uman table 1.2 (Continued) Measured heights and weights of adults: Averages (standard deviations) Sample sizeStature (mm)Weight (kg) East India male farm workers (Yadav Tewari and Prasad 1997)134 1621 (58) 54 (7) South India male workers (Fernandez and Uppugonduri 1992)128 1607 (60) 57 (5) Iran Female students 74 1597 (58) 56 (10) Male students (Mououdi 1997)105 (10) IrelandMales (Gallwey and Fitzgibbon 1991)164 1731 (58) 74 (9) Italy Females 753 a 1610 (64) 58 (8) Females 386b1611 (62) 58 (9) Males 913a 1733 (71) 75 (10) Males (aConiglio et al. 1991) (bRobinette et al. 2002)410b 1736 (67) 73 (11) JapanFemales 240 1584 (50) 54 Males (Kagimoto 1990)248 66 (8) NetherlandsFemales (18-65 years old) 1679 (75) 73 (16) Males (18-65 years old) (Robinette et al. 2002)564 1813 (90) 84 (16) Russia Female herders (ethnic Asians) 246 1588 (55) nda Female students (Russians) 207 1637 (57) 61 (8) Female students (Uzbeks) 164 1578 (49) 56 (7) Female factory workers (Russians)205 1606 (53) 61 (8) Female factory workers (Uzbeks) 301 1580 (54) 58 (9) Male students (Russians) 166 1757 (56) 71 (9) Male students (Uzbeks) 150 1700 (52) 65 (7) Male factory workers (Russians) 192 1736 (61) 72 (10) Male factory workers (ethnic mix) 150 1700 (59) 68 (8) (Continued)9 Body sizes table 1.2 (Continued) Measured heights and weights of adults: Averages (standard deviations) Sample sizeStature (mm)Weight (kg) Male farm mechanics (Asians) 520 1704 (58) 64 (8) Male coal miners (Russians) 150 1801 (61) nda Male construction workers (Russians) (Strokina and Pakhomova 1999)150 1707 (69) nda Saudi Arabia Males (Dairi 1986; cited by Al-Haboubi 1991)1440 1675 (61) nda Singapore Males (Pilot trainees) (Singh Peng Lim and Ong 1995)832 1685 (53) nda Sri Lanka Females 287 1523 (59) nda Males (Abeysecera 1985; cited by Intaranont 1991)435 1639 (63) nda Thailand Females 250 a 1512 (48) nda Females 711b 1540 (50) nda Males 250a 1607 (20) 1991) (bNICE cited by Intaranont 1991)1478b 1654 Male soldiers (Kayis and Oezok 1991a)5108 1702 (60) 63 (7) United States Females ~3800 1625 75 Males (Ogden et al. 2004)~3800 1762 87 Midwest workers with shoes and light clothes Females 125 1637 (62) 65 (12) Males (Marras and Kim 1993)384 1778 (73) 84 (16) Male miners (Kuenzi and Kennedy 1993)105 1803 (65) 89 (15) (Continued)10 Fitting the h uman The designer needs specific data: describing the size of the head for fitting helmets, for example, or showing reach dis-tances for devising a proper workspace. As a rule, such infor - mation cannot be deduced from stature or weight but must be specifically measured. Selecting a representative sample of the group of interest, and performing the measurements on the persons, is usually a formidable task. The traditional technique was to take measurements with handheld devices, such as tapes, anthropometers, and gauges, and then to record the data. A newer technique uses automatic scanning and storing of the three-dimensional dimensions of the surface of the human body\u00b0; yet current information still relies predominantly on h ow to measuretable 1.2 (Continued) Measured heights and weights of adults: Averages (standard deviations) Sample sizeStature (mm)Weight (kg) U.S. Army soldiers Females (1989) 2208 a 1629 (64) 62 (8) Females (2014) 1986c 1626 (64) 67 (11) Males (1989) 1774a 1756 (67) 76 (11) Males (2009) 1475b 1760 (nda) 84 (nda) Males (2014) (aGordon et al. 1989) (bGordon 2009) (cGordon et al. 2014)4082c1755 (67) 85 (14) North Americans (Canada and U.S.) Females (18-26 years old) 1264 1640 (73) 69 (18) Males (18-65 years old) (Robinette et al. 2002)1127 1778 (79) 86 (18) Vietnamese living in the United States Females 30 1559 (61) 49 Males (Imrhan, Nguyen, and Nguyen 1993)41 1646 (60) 59 Source: Kroemer, K. H. E., Kroemer, H. J., and Kroemer-Elbert, K. E. Engineering Physiology: Bases of Human Factors/Ergonomics, fourth ed., Springer, Heidelberg, Germany, 2010. All sources except Gordon, Blackwell, Bradtmiller et al. 2014 are listed there. Note: nda, no data available.11 Body sizes results of the hands-on approach. Figure 1.1 depicts 36 of the most commonly taken measurements, and Table 1.3 describes these measurements and their use\u00b0 in anthropometry and design. Table 1.4 is an example of the results of such detailed measures taken on Russian students between 1984 and 1986. Table 1.5 gives anthropometric data measured on young Chinese adults in Taiwan between 1996 and 2000. There are compilations of data describing the body sizes of populations in Russia, France, Japan, the United Kingdom, the United States, and a few others; yet, unfortunately, similarly detailed information remains missing on most populaces, prob - ably because it is so laborious and expensive to obtain. Thus, if we need information on other groups of people, we have to estimate the data or, better, do some measuring. 1.3 No \"average person\" There is one serious problem with average data, such as those shown in Tables 1.1, 1.2, 1.4, and 1.5. We may not design a glove or a workplace for the average person because that is just a statistical artifact: if we tried to design for that phan - tom, the resulting glove or workplace would be too small for half the people, while too big for the others. Instead, it is necessary to consider specific users, for example, very big and tall people, so that they can fit into an airplane seat, or we must pay particular attention to small people, such as to make sure that they can reach items stored on a high shelf. If doorways were fixed to suit people of average height, many persons passing through them would strike the lintels with their heads. To avoid headaches, we need a bit of advice about the statis- tics\u00b0 that describe the distributions of anthropometric mea- surements and, then, to compile them into tables. Figure 1.2 depicts a typical collection of anthropometric measurements, the stature of a group of men. Statisticians call this symmetric bell-shaped curve normal (or Gaussian): the data cluster in the middle, and the farther away from the center, the fewer data points exist.russian and Chinese adults Compiling more information the \"normal\" distribution12 Fitting the h uman 18 9 10 11 12 13 141517 16 19 2021182 34 5 6 7 22 23 24 25 28272629 30 31 32 33343536 FIGUre 1.1 Illustrations of commonly measured body dimensions. (Adapted from Kroemer, K. H. E., Kroemer, H. J., and Kroemer-Elbert, K. E., Engineering Physiology : Bases of Human Factors/Ergonomics , fourth ed., Springer, Heidelberg, 2010.)13 Body sizes table 1.3 Descriptions of common body measures and their applications Dimensions Applications 1. Stature The vertical distance from the floor to the top of the head, when standingA main measure for comparing population samples. Reference for the minimal height of overhead obstructions. Add height for more clearance, hat, shoes, stride. 2. Eye height, standing The vertical distance from the floor to the outer corner of the right eye, when standingOrigin of the visual field of a standing person. Reference for the location of visual obstructions and of targets such as displays; consider slump and motion. 3. Shoulder height (acromion), standing The vertical distance from the floor to the tip (acromion) of the right shoulder, when standingStarting point for arm length measurements; near the center of rotation of the upper arm. Reference point for hand reaches; consider slump and motion. 4. Elbow height, standing The vertical distance from the floor to the lowest point of the right elbow, when standing, with the elbow flexed at 90\u00b0Reference for height and distance of the work area of the hand and the location of controls and fixtures; consider slump and motion. 5. Hip height (trochanter), standing The vertical distance from the floor to the trochanter landmark on the upper side of the right thigh, when standingTraditional anthropometric measure, indicator of the leg length and the height of the hip joint. Used for comparing population samples. 6. Knuckle height, standing The vertical distance from the floor to the knuckle (metacarpal bone) of the middle finger of the right hand, when standingReference for low locations of controls, handles, and handrails; consider slump and motion of the standing person. 7. Fingertip height, standing The vertical distance from the floor to the tip of the extended index finger of the right hand, when standingReference for the lowest location of controls, handles, and handrails; consider slump and motion of the standing person. 8. Sitting height The vertical distance from the sitting surface to the top of the head, when sittingReference for the minimal height of overhead obstructions. Add height for more clearance, hat, and trunk motion of the seated person. 9. Sitting eye height The vertical distance from the sitting surface to the outer corner of the right eye, when sittingOrigin of the visual field of a seated person. Reference point for the location of visual obstructions and of targets such as displays; consider slump and motion. 10. Sitting shoulder height (acromion) The vertical distance from the sitting surface to the tip (acromion) of the shoulder, when sittingStarting point for arm length measurements; near the center of rotation of the upper arm. Reference for hand reaches; consider slump and motion. (Continued)14 Fitting the h uman table 1.3 (Continued) Descriptions of common body measures and their applications Dimensions Applications 11. Sitting elbow height The vertical distance from the sitting surface to the lowest point of the right elbow, when sitting, with the elbow flexed at 90\u00b0Reference for the height of an armrest, of the work area of the hand and of keyboard and controls; consider slump and motion of the seated person. 12. Sitting thigh height (clearance) The vertical distance from the sitting surface to the highest point on the top of the horizontal right thigh, with the knee flexed at 90\u00b0Reference for the minimal clearance needed between the seat pan and the underside of a structure, such as a table or desk; add clearance for clothing and motions. 13. Sitting knee height The vertical distance from the floor to the top of the right kneecap, when sitting, with the knees flexed at 90\u00b0Traditional anthropometric measure for lower leg length. Reference for the minimal clearance needed below the underside of a structure, such as a table or desk; add height for shoe. 14. Sitting popliteal height The vertical distance from the floor to the underside of the thigh directly behind the right knee, when sitting with the knees flexed at 90\u00b0Reference for the height of a seat; add height for shoe. 15. Shoulder-elbow length The vertical distance from the underside of the right elbow to the right acromion, with the elbow flexed at 90\u00b0 and the upper arm hanging verticallyTraditional anthropometric measure for comparing population samples. 16. Elbow-fingertip length The distance from the back of the right elbow to the tip of the extended middle finger, with the elbow flexed at 90\u00b0Traditional anthropometric measure. Reference for fingertip reach when moving the forearm in the elbow. 17. Overhead grip reach, sitting The vertical distance from the sitting surface to the center of a cylindrical rod firmly held in the palm of the right handReference for the height of overhead controls operated by a seated person. Consider ease of motion, reach, and finger/ hand/arm strength. 18. Overhead grip reach, standing The vertical distance from the standing surface to the center of a cylindrical rod firmly held in the palm of the right handReference for the height of overhead controls operated by a standing person. Add shoe height. Consider ease of motion, reach, and finger/hand/arm strength. 19. Forward grip reach The horizontal distance from the back of the right shoulder blade to the center of a cylindrical rod firmly held in the palm of the right handReference for forward reach distance. Consider ease of motion, reach, and finger/hand/arm strength. (Continued)15 Body sizes table 1.3 (Continued) Descriptions of common body measures and their applications Dimensions Applications 20. Arm length, vertical The vertical distance from the tip of the right middle finger to the right acromion, with the arm hanging verticallyA traditional measure for comparing population samples. Reference for the location of controls very low on the side of the operator. Consider ease of motion, reach, and finger/hand/arm strength. 21. Downward grip reach The vertical distance from the right acromion to the center of a cylindrical rod firmly held in the palm of the right hand, with the arm hanging verticallyReference for the location of controls low on the side of the operator. Consider ease of motion, reach, and finger/hand/arm strength. 22. Chest depth The horizontal distance from the back to the right nippleA traditional measure for comparing population samples. Reference for the clearance between the seat backrest and the location of obstructions in front of the trunk. 23. Abdominal depth, sitting The horizontal distance from the back to the most protruding point on the abdomenA traditional measure for comparing population samples. Reference for the clearance between the seat backrest and the location of obstructions in front of the trunk. 24. Buttock-knee depth, sitting The horizontal distance from the back of the buttocks to the most protruding point on the right knee, when sitting with the knees flexed at 90\u00b0Reference for the clearance between the seat backrest and the location of obstructions in front of the knees. 25. Buttock-popliteal depth, sitting The horizontal distance from the back of the buttocks to the back of the right knee just below the thigh, when sitting with the knees flexed at 90\u00b0Reference for the depth of a seat. 26. Shoulder breadth (biacromial) The distance between the right and left acromionsA traditional measure for comparing population samples. Indicator of the distance between the centers of rotation of the two upper arms. 27. Shoulder breadth (bideltoid) The maximal horizontal breadth across the shoulders between the lateral margins of the right and left deltoid musclesReference for the lateral clearance required at shoulder level. Add space for ease of motion and tool use. 28. Hip breadth, sitting The maximal horizontal breadth across the hips or the thighs, whatever is greater, when sittingReference for seat width. Add space for clothing and ease of motion. (Continued)16 Fitting the h uman table 1.3 (Continued) Descriptions of common body measures and their applications Dimensions Applications 29. Span The distance between the tips of the middle fingers of the horizontally outstretched arms and handsA traditional measure for comparing population samples. Reference for sideway reach. 30. Elbow span The distance between the tips of the elbows of the horizontally outstretched upper arms when the elbows are flexed so that the fingertips of the hands meet in front of the trunkReference for the lateral space needed at upper body level for ease of motion and tool use. 31. Head length The distance from the glabella (between the browridges) to the most rearward protrusion (the occiput) on the back, in the middle of the skullA traditional measure for comparing population samples. Reference for headgear size. 32. Head breadth The maximal horizontal breadth of the head above the attachment of the earsA traditional measure for comparing population samples. Reference for headgear size. 33. Hand length The length of the right hand between the crease of the wrist and the tip of the middle finger, with the hand flatA traditional measure for comparing population samples. Reference for hand tool and gear size. Consider manipulations, gloves, tool use. 34. Hand breadth The breadth of the right hand across the knuckles of the four fingersA traditional measure for comparing population samples. Reference for hand tool and gear size and for the opening through which a hand may fit. Consider manipulations, gloves, tool use. 35. Foot length The maximal length of the right foot, when standingA traditional measure for comparing population samples. Reference for shoe and pedal size. 36. Foot breadth The maximal breadth of the right foot, at right angle to the long axis of the foot, when standingA traditional measure for comparing population samples. Reference for shoe size and spacing of pedals. 37. Weight (kg) Nude body weight taken to the nearest tenth of a kilogramA traditional measure for comparing population samples. Reference for body size, clothing, strength, health, etc. Add weight for clothing and equipment worn on the body. Source: Kroemer, K. H. E., \"Extra-Ordinary\" Ergonomics: How to Accommodate Small and Big persons, the Disabled and Elderly, Expectant Mothers and Children. Boca Raton, Florida, CRC, 2006c.17 Body sizestable 1.4 Body size measures (mm) taken between 1984 and 1986 on Russian and Uzbek students 18-22 years of age 1849 56 1542 1637 52 1498 1578 1658 49 2. Eye height, standing Ethnic Russians (Moscow) 1547 1637 1728 55 1433 1538 Ethnic Russians (Moscow) 1004 1083 1162 48 941 1010 1080 42 Uzbeks (Tashkent) 985 1042 1099 35 909 970 1031 37 5. Hip height (trochanter) nda nda nda nda nda nda nda nda 6. Knuckle height, standing Ethnic Russians (Moscow) 710 773 836 39 676 731 786 792 35 632 687 742 33 7. Fingertip height, standing Ethnic Russians (Moscow) 508 668 729 37 582 635 687 32 Uzbeks (Tashkent) 579 635 691 34 546 599 652 32 (Continued)18 Fitting the h umantable 1.4 (Continued) Body size measures (mm) taken between 1984 and 1986 on Russian and Uzbek students 18-22 years of age percentile Mean95th percentile SD 8. Sitting height Ethnic Russians (Moscow) 860 912 964 32 806 859 911 32 Uzbeks (Tashkent) 858 905 952 29 793 839 885 28 9. Sitting eye height Ethnic Russians (Moscow) 737 790 844 33 694 742 790 29 Uzbeks (Tashkent) 737 784 830 28 676 723 771 29 10. Sitting shoulder height (acromion)nda nda nda nda nda nda nda nda 11. Sitting elbow height Ethnic Russians (Moscow) 202 243 284 25 196 236 275 24 Uzbeks (Tashkent) 186 229 272 26 191 229 267 23 12. Sitting thigh height (clearance) Ethnic Russians (Moscow) 122 151 179 18 126 148 172 14 Uzbeks (Tashkent) 120 143 165 14 114 142 170 17 13. Sitting knee height Ethnic Russians (Moscow) 520 562 603 25 487 527 567 24 Uzbeks (Tashkent) 494 531 569 23 446 487 528 25 14. Sitting popliteal height Ethnic Russians (Moscow) 429 468 508 24 386 423 461 23 Uzbeks (Tashkent) 400 430 460 18 366 398 430 20 (Continued)19 Body sizestable 1.4 (Continued) Body size measures (mm) taken between 1984 and 1986 on Russian and Uzbek students 18-22 years of age 15. Shoulder-elbow length nda nda nda nda nda nda nda nda 16. Elbow-fingertip length nda nda nda nda nda nda nda nda 17. Overhead grip reach, sitting Ethnic Russians (Moscow) 1199 1276 1354 1152 1219 41 18. Overhead grip reach, standing nda nda nda nda nda nda nda nda 19. Forward grip reach Ethnic Russians (Moscow) 697 759 821 38 641 702 763 37 Uzbeks (Tashkent) 686 745 803 36 609 673 737 39 20. Arm length, vertical nda nda nda nda nda nda nda nda 21. Downward grip reach nda nda nda nda nda nda nda nda 22. Chest depth Ethnic Russians (Moscow) 207 245 312 20 209 242 256 21 Uzbeks (Tashkent) 211 244 276 20 200 233 265 20 23. Abdominal depth, sitting nda nda nda nda nda nda nda nda 24. Buttock-knee depth, sitting Ethnic Russians (Moscow) 561 610 660 30 536 584 631 29 Uzbeks (Tashkent) 541 595 648 33 515 564 612 30 25. Buttock-popliteal depth, sitting Ethnic Russians (Moscow) 476 517 557 25 446 496 540 29 (Continued)20 Fitting the h umantable 1.4 (Continued) Body size measures (mm) taken between 1984 and 1986 on Russian and Uzbek students 18-22 years of age Uzbeks (Tashkent) 459 504 550 28 423 472 520 29 26. Shoulder breadth (biacromial) Ethnic Russians (Moscow) 369 397 425 17 334 360 386 16 Uzbeks (Tashkent) 349 377 404 17 320 347 373 16 27. Shoulder breadth (bideltoid) Ethnic Russians (Moscow) 416 458 492 23 377 412 446 21 Uzbeks (Tashkent) 409 438 466 17 352 381 410 17 28. Hip breadth, sitting Ethnic Russians (Moscow) 323 362 410 23 334 372 411 23 Uzbeks (Tashkent) 316 349 381 20 329 364 399 21 29. Span Ethnic Russians (Moscow) 1671 1579 1698 72 30. Elbow span Ethnic Russians (Moscow) 874 935 995 37 808 870 933 38 Uzbeks (Tashkent) 842 909 976 41 781 837 894 34 31. Head length nda nda nda nda nda nda nda nda 32. Head breadth nda nda nda nda nda nda nda nda 33. Hand length Ethnic Russians (Moscow) 174 188 202 9 155 168 182 8 (Continued)21 Body sizestable 1.4 (Continued) Body size measures (mm) taken between 1984 and 1986 on Russian and Uzbek students 18-22 years of age Uzbeks (Tashkent) 175 188 201 8 nda nda nda nda 34. Hand breadth Ethnic Russians (Moscow) 80 87 95 5 71 76 82 3 Uzbeks (Tashkent) 82 89 96 4 73 79 87 4 35. Foot length Ethnic Russians (Moscow) 247 266 286 12 222 239 256 11 Uzbeks (Tashkent) 242 260 279 11 220 237 254 10 36. Foot breadth Ethnic Russians (Moscow) 87 97 107 6 82 88 95 4 Uzbeks (Tashkent) 85 96 107 7 81 90 98 5 37. Weight (kg) Ethnic Russians (Moscow) 57 71 85 9 49 60 73 7 Uzbeks (Tashkent) 53 65 76 7 45 56 68 7 Source: Strokina, A. N., and Pakhomova, B. A., Anthropo-ergonomic Atlas, Moscow State University Publishing House, Moscow, Russia, 1999. Note: The measured sample consisted of 166 male and 207 female Russians from Moscow and 150 male and 164 female Uzbeks from Tashkent. nda, no data available.22 Fitting the h umantable 1.5 Body size measures (mm) taken between 1996 and 2000 on nearly 1200 Chinese adults in Taiwan, 25-34 years of age 1572 1659 53 2. Eye height, standing nda nda nda nda nda nda nda nda 3. Shoulder height (acromion), standing 1309 1396 1484 53 1204 standing 993 1059 1126 40 915 978 1040 38 5. Hip height (trochanter) 780 860 939 48 735 802 869 41 6. Knuckle height, standing 705 757 809 32 653 708 762 33 7. Fingertip height, standing 610 659 708 30 566 618 670 32 8. Sitting height 861 910 959 30 794 846 898 32 9. Sitting eye height 742 791 839 29 681 732 783 31 10. Sitting shoulder height (acromion) 560 602 645 26 516 561 605 27 11. Sitting elbow height 226 264 303 24 211 252 294 25 12. Sitting thigh height (clearance) nda nda nda nda nda nda nda nda 13. Sitting knee height 474 521 569 29 431 471 510 24 14. Sitting popliteal height 380 411 442 19 350 379 408 18 15. Shoulder-elbow length 308 338 369 19 280 309 339 18 16. Elbow-fingertip length 382 427 472 27 339 384 429 27 17. Overhead grip reach, sitting 1128 1208 1289 49 1033 1105 1177 44 18. reach, standing 1872 2002 2133 79 1721 1831 1942 67 19. Forward grip reach 650 710 770 36 597 651 705 33 20. Arm length, vertical 684 738 793 33 618 669 720 31 (Continued)23 Body sizestable 1.5 (Continued) Body size measures (mm) taken between 1996 and 2000 on nearly 1200 Chinese adults in Taiwan, 25-34 years of age percentile Mean95th percentile SD 21. Downward grip reach nda nda nda nda nda nda nda nda 22. Chest depth 187 217 248 19 182 213 244 19 23. Abdominal depth, sitting nda nda nda nda nda nda nda nda 24. Buttock-knee depth, sitting 507 558 608 31 487 530 572 26 25. Buttock-popliteal depth, sitting nda nda nda nda nda nda nda nda 26. Shoulder breadth (biacromial) 323 369 415 28 282 324 366 25 27. Shoulder breadth (bideltoid) 422 460 499 23 367 406 445 24 28. Hip breadth, sitting 315 360 404 27 316 353 390 23 29. Span 1625 1738 1852 69 1469 1571 1672 62 30. Elbow span 820 894 968 45 737 801 866 39 31. Head length 185 197 209 7 176 187 198 6 32. Head breadth 154 167 181 8 146 161 175 9 33. Hand length 168 183 199 10 154 167 181 8 34. Hand breadth 77 86 94 5 68 75 82 4 35. Foot length nda nda nda nda nda nda nda nda 36. Foot breadth nda nda nda nda nda nda nda nda 37. Weight (kg) 53 67 81 9 40 52 64 7 Source: Wang, M. J. J., Wang, E. M. Y ., and Lin, Y . C., Anthropometric Data Book of the Chinese People in Taiwan, The Ergomics Society of Taiwan, Hsinchu, Taiwan, 2002.24 Fitting the h uman Such a normal distribution is easy to describe by two statistical values: one is the well-known mean (m), also often called the average . The other descriptor is the standard deviation (SD), a measure of the peakedness or the flatness of the distribution. (Note that these descriptors do not apply to nonnormal distribu - tions, which require more involved statistical treatments. There is a bit more about this in Chapter 4, which concerns muscle strength data.) If we know the m and the SD, we can calculate the numeri - cal value of any point, percentile (p), in a normal distribution. The fifth percentile is often of design interest: 5% of all data are smaller, 95% are larger. Obviously, the mean (average) is the same as the fiftieth percentile: half the data lie below; the other half, above. The fifth percentile, p5 for short, is 1.65 SD below the mean; conversely, p95 is 1.65 SD above m. Table 1.6 contains multiplication factors k needed to calculate various percentage points in a normal distribution. For devising gloves, hand tools, or hand-operated controls, we need information about hand sizes. Figure 1.3 shows rel - evant measurements, and Table 1.7 contains available data. The table shows that for many groups of people, hand data are missing, so we must either measure or estimate the missing numbers. Collections of anthropometric data provide a wealth of infor - mation to the skilled statistician, but laypersons, including engineers or designers, can use the data as well, for example, to calculate percentiles and cut-off values and to determine Mean and average percentiles hand sizes Further advice Numb er of pe rsons 162 175 188 Height in cm 95% 2.5% 2.5% FIGUre 1.2 Typical distribution of anthropometric data.25 Body sizes adjustment ranges of uniform or composite population groups. Another task is to estimate the data on groups of people, such as to fill in the vacant cells in Table 1.7. In doing so, it is advan - tageous to employ the advice given in books written for ergon - omists and human factors engineers, listed at the end of the chapter under the section Further Reading.table 1.6 Values of factor k for computing percentiles (p) from mean (m) and standard deviation (SD) kPercentile (p) located below the mean (m) Percentile (p) located above the mean (m) p = m k \u00d7 SD p = m + k \u00d7 SD 4.25 0.001 99.999 2.33 1 99 2.06 2 98 1.96 2.5 97.5 1.88 3 97 1.65 5 95 1.28 10 90 1.04 15 85 1.00 16.5 83.5 0.84 20 80 0.67 25 75 0 50 50 2 4 31 5 FIGUre 1.3 Common measurements of hand and wrist.26 Fitting the h uman table 1.7 Hand and wrist sizes (mm) Hand measures PopulationMen Women Mean SD Mean SD 1. Length British 180 10 175 9 British, estimated 1986190 10 175 9 Chinese, Taiwan 183 10 167 8 French 190 nda 173 nda Germans 189 9 174 9 Germans, soldiers 2006191 nda 176 nda Japanese nda nda nda nda Russians, Moscow 188 9 168 8 U.S. soldiers 193 10 180 10 U.S. Vietnamese 177 12 165 9 2. Breadth at knuckles British 85 5 75 4 Chinese, Taiwan 86 5 75 4 French 86 nda 76 nda Germans 88 5 78 4 Japanese nda nda 90 5 Russians, Moscow 87 5 76 3 U.S. soldiers 88 4 78 4 U.S. Vietnamese 79 7 71 4 3. Maximal breadth British 105 5 92 5 Chinese nda nda nda nda French nda nda nda nda Germans 107 6 94 6 Japanese nda nda nda nda Russians nda nda nda nda U.S. soldiers nda nda nda nda U.S. Vietnamese 100 6 87 6 4. Circumference at knuckles British nda nda nda nda Chinese nda nda nda nda French nda nda nda nda Germans nda nda nda nda Japanese nda nda nda nda Russians nda nda nda nda U.S. soldiers 212 10 187 9 U.S. Vietnamese nda nda nda nda (Continued)27 Body sizes 1.4 Designing to fit the body Nearly every adult on Earth can fit into an airplane, or use com - mon hand tools, if these products are sized well. Yet individuals within the species vary from each other; we need differently sized shoes to fit the individual feet. Even among seemingly similar groups, body sizes or body segment measurements can differ significantly. For example, in the United States, agricul - tural workers are, on average, 2.5 cm shorter than other work - ers. Female American agricultural and manufacturing workers have larger waist circumferences than those in other occupa-tions. Firefighters, police, and guards are taller and also heavier (males by 7 kg; females over 10 kg) than persons in all other occupations\u00b0. Before we begin to design a glove, a helmet, or other objects that must fit its user exactly, we must decide which range of relevant body sizes we want to accommodate. We have a choice among five approaches: p eople differ Design principlestable 1.7 (Continued) Hand and wrist sizes (mm) Hand measures PopulationMen Women Mean SD Mean SD 5. Wrist circumference British nda nda nda nda Chinese nda nda nda nda French nda nda nda nda Germans nda nda nda nda Japanese nda nda nda nda Russians nda nda nda nda U.S. soldiers 176 9 154 8 U.S. Vietnamese 163 15 137 18 Source: Gordon, C. C., Blackwell, C. L., Bradtmiller, B., Parham, J. L., Barrientos, P., Paquette, S. P., Corner, B. D. et al., 2012 Anthropometric Survey of U.S. Army Personnel: Methods and Summary Statistics. Technical Report NATICK/TR-15/007, U.S. Army Natick Soldier Research, Development and Engineering Center, Natick, MA, 2014; International Journal of Industrial Ergonomics, 12, Imrhan, S. N., Nguyen, M. T., and Nguyen, N. N., Hand anthropometry of Americans of Vietnamese origin, 281-287, Copyright (1993), with permission from Elsevier; Kroemer, K. H. E., Extra-Ordinary Ergonomics: How to Accommodate Small and Big Persons, the Disabled and Elderly, Expectant Mothers and Children. CRC, Boca Raton, FL, 2006c; Leyk, D., Kuechmeister, G., and Juergen, H. W., Journal of Physiological Anthropology 25, 6, 363-369, 2006.28 Fitting the h uman 1. Custom-fit each individual: This is a laborious and expen - sive solution, justifiable in exceptional cases. 2. Have several fixed sizes: This can be a reasonable solu - tion, but all sizes must be available and \"between-sized\" users may not be accommodated well. 3. Make it adjustable: This is usually the approach that pro - vides the best fit to all people, but the adjustment features must be easy to use. 4. Design for the extreme body sizes: This is the appropriate solution when we must assure that everybody Can operate a gadget, so locate an emergency stop button within the shortest reach; or Can fit through an opening, so make a door or escape hatch wide enough for even the largest person; or Cannot pass through an opening behind where danger lurks, so make railings or safety guards at machinery tight. 5. Select those persons whose bodies fit the existing design: This is the last and worst resort if we failed to achieve the fundamental principle of good design: all intended users should be able to employ our design effectively and efficiently. Solutions 2 and 3 are the most common. For this, we need to determine the range of body sizes that we intend to accom - modate with our design: we must set the lower and upper end points of the fit range. Often, we aim to fit all persons bigger than the smallest 5% and smaller than the biggest 5%; in other words, we are accommodating the central 90% of a group. In doing so, we knowingly exclude 10%, half of them very small and the others very big. The design end points, the minimum and the maximum of the range to be fitted, depend on the design purpose and therefore must be selected carefully. We may decide to divide our designs into several sizes (solution 2), each appropriate for a subgroup of all users. This is a routine approach for ready-made clothing: clothes come assembled in size clusters. Within each range, adjustment features (solution 3) can provide further fitting: good examples are shoes with laces and seats of office chairs that can be raised and lowered.Fit a range Select design limits29 Body sizes The measures shown in Figures 1.1 and 1.2 and in Tables 1.1 through 1.4 are dimensions taken on the body while stand-ing or sitting still. In reality, hardly anybody is stiffly static at work; we usually move about. To design for movement, the engineer needs to modify the static data. The recommendations in Table 1.8 can help accomplish this task. Summary Fitting equipment and tasks to persons of various body sizes requires (a) anthropometric data and (b) proper procedures. Data on many populations are available; missing information may be estimated or, better, measured following standard procedures. Design procedures often involve the selection of percentile values that serve as lower and upper limits of accommodation ranges.Statics and dynamicstable 1.8 Guidelines for the conversion of standard measuring postures to functional stances and motions To consider Do this Slumped standing or sittingDeduct 5-10% from appropriate height measurements Relaxed trunk Add 5-10% to trunk circumferences and depths Wearing shoes Add approximately 25 mm to standing and sitting heights; more for high heels Wearing light clothing Add about 5% to appropriate dimensions Wearing heavy clothing Add 15% or more to appropriate dimensions. (Note that mobility may be strongly reduced by heavy clothing.) Extended reaches Add 10% or more for strong motions of the trunk Use of hand tools Center of handle is at about 40% of hand length, measured from the wrist Comfortable seat height Add to subtract up to 10% from the standard seat height Source: Kroemer, K. H. E., \"Extra-Ordinary\" Ergonomics: How to Accommodate Small and Big persons, the Disabled and Elderly, Expectant Mothers and Children, CRC, Boca Raton, Florida, 2006c.30 Fitting the h uman Fitting steps Step 1: Determine which body dimensions are important for your design. Step 2: Decide on the range(s) to be fitted, on cut-off point(s). Step 3: Design, then test. Modify as necessary. Further reading The literature contains the newest anthropometric information, usually published in journal articles or as research reports. Handbooks, encyclopedias, and standards are often a few years behind. Bradtmiller, B. (2015) Anthropometry in human systems integration. Chapter 8 in Boehm-Davis, D. A., Francis, T. D., and Lee, J. D., eds., APA Handbook of Human Systems Integration. American Psychological Association, Washington, DC. Gordon, C. C., Blackwell, C. L., Bradtmiller, B., Parham et al. (2014) 2012 Anthropometric Survey of U.S. Army Personnel, Methods and Summary Statistics. Technical Report Natick/ TR-15/007. U.S. Army Natick Soldier Research. Development and Engineering Center, Natick, MA. ISO 7250-1:2008 Basic human body measurements for technological design\u2014Part 1: Body measurement definitions and landmarks. International Organization for Standardization, Geneva. ISO 15535:2012 General requirements for establishing anthropomet - ric databases. International Organization for Standardization, Geneva. ISO 20685:2010 3-D scanning methodologies for internationally com - patible anthropometric databases. International Organization for Standardization, Geneva. Kroemer, K. H. E. (2008) Anthropometry and biomechanics: Anthromechanics. Chapter 2 in Kumar, S., ed., , second ed. CRC, Boca Raton, FL. Kroemer, K. H. E., Kroemer, H. J., and Kroemer-Elbert, K. E. (2010) Engineering Physiology , fourth ed. Springer, Heidelberg. Marras, W. S., and Karwowski, K., eds. (2006) The Occupational Ergonomics Handbook , second ed. CRC, Boca Raton, FL. Paquette, Gordon, C., and Bradtmiller, B. (2009) Anthropometric Survey (ANSUR) II Pilot Study: Methods and Summary Statistics. Technical Report Natick/TR-09/014. U.S. Army Natick Soldier Research, Development and Engineering Center, Natick, MA.31 Body sizes Notes The text contains markers, \u00b0, to indicate specific references and comments, which follow. 1.2 Measurements: Techniques : Bradtmiller 2015; Gordon et al. 1989, 2014; Paquette, Gordon, and Bradtmiller 2009; Roebuck 1995. Compilations of data : see, for example, Bradtmilller (2015) and Kroemer (2010). Measurements and their use : ISO Standards 7250, 15535, 20685; Kroemer 2006c, 2010. Haslegrave (Appendix); Roebuck 1995. 1.4 Designing to fit the body: Differences among occupational groups : Hsiao, Long, and Snyder 2002.THE ART OF PROGRAMMING MECHANICS FROM 'HOLISTIC GAME DEVELOPMENT WITH UNITY: AN ALL-IN-ONE GUIDE TO IMPLEMENTING GAME MECHANICS, ART, DESIGN AND PROGRAMMING' # This chapter is excerpted from Holistic Game Development with Unity: An All-in-One Guide to Implementing Game Mechanics, Art, Design and Programming by Penny de Byl. \u00a9 2017 Taylor & Francis Group. All rights reserved. 10 Learn moreCHAPTER 1 The Art of Programming Mechanics Everyone can be taught to sculpt: Michelangelo would have had to be taught how not to. So it is with the great programmers. Alan Perlis 1.1 Introduction In 1979, art teacher Betty Edwards published the acclaimed Drawing on the Right Side of the Brain. The essence of the text taught readers to draw what they saw rather than what they thought they saw. The human brain is so adept at tasks such as pattern recognition that we internally symbolize practically everything we see and regurgitate these patterns when asked to draw them on paper. Children do this very well. The simplicity in children's drawing stems from their internal representation for an object. Ask them to draw a house and a dog and you will get something you and they can recognize as a house and dog or, more accurately, the icon for a house and dog, but something far from what an actual house and dog look like. 1 This is evident in the child's drawing in Figure 1.1. The title of the book, Drawing on the Right Side of the Brain , also suggests that the ability to draw should be summoned from the side of the brain traditionally associated with creativity and that most bad drawings could be blamed on the left. Different intellectual capability is commonly attributed to either the left or the right hemispheres. The left side being responsible for the processing of language, mathematics, numbers, logic, and other such computational activities, whereas the right side deals with shapes, patterns, spatial acuity, images, dreaming, and creative pursuits. From these beliefs, those who are adept at computer programming are classified as left brained and artists as right brained. The segregation of these abilities to either side of the brain is called lateralization . While lateralization has been generally accepted and even used to classify and separate students into learning style groups, it is a common misconception that intellectual functioning can be separated so clearly. In fact, the clearly defined left and right brain functions are a neuromyth stemming from the overgeneralization and literal isolation of the brain hemispheres. While some functions tend to reside more in one side of the brain than the other, many tasks, to some degree, require both sides. For example, many numerical computation and language activities require both hemispheres. Furthermore, the side of the brain being utilized for specific tasks can vary among people. Studies have revealed that 97 % of right-handed people use their left hemisphere for language and speech processing and 70% of left-handed people use their right hemisphere. In short, simply classifying programmers as left brainers and artists as right brainers is a misnomer. This also leads to the disturbing misconception that programmers are poor at art skills and that artists would have difficulty in understanding programming. Programming is so often generalized as a logical process and art as a creative process that some find it inconceivable that programmers could be effective as artists and vice versa. 2Holistic Game Development with Unity FIG 1.1 Dogs in the yard of a castle by Tabytha de Byl aged 4.When Betty Edwards suggests that people should use their right brain for drawing, it is in concept, not physiology. The location of the neurons the reader is being asked to use to find their creative self is not relevant. What is important is that Dr. Edwards is asking us to see drawing in a different light\u2014in a way we may not have considered before. Instead of drawing our internalized symbol of an object that has been stored away in the brain, she asks us to draw what we see. To forget what we think it looks like. In the end, this symbolizes a switch in thinking away from logic and patterns to images and visual processing. There is no doubt that some people are naturally better at programming and others at art. However, by taking Edwards' anyone can draw attitude, we can also say anyone can program. It just requires a little practice and a change of attitude. 1.2 Programming on the Right Side of the Brain While it is true that pure logic is at the very heart of all computer programs, it still requires an enormous amount of creativity to order the logic into a program. The process is improved greatly when programmers can visualize the results of their code before it even runs. You may liken this to a scene from The Matrix where the characters look at screens of vertically flowing green numbers and text but can visualize the structure and goings on in a photorealistic, three-dimensional virtual reality. To become a good computer programmer, you need to know the language of the code and be able to visualize how it is affecting the computer's memory and the results of running the program. Learning a computer language is one key to being able to program. However, understanding how the language interacts with the computer to produce its output is even more important. Good programmers will agree that it is easy to switch between programming languages once you have mastered one. The fundamental concepts in each are the same. In some languages, such as C, C++, C#, Javascript, Java, and PhP , even the text and layout look the same. The basic code from each aforementioned language to print Hello World on the computer screen is shown in Listings 1.1 through 1.6. Listing 1.1 C #include < stdio.h > main(){ printf(\"Hello World\"); } Programming < iostream using namespace cout < \"Hello World\" < < endl; } Listing 1.3 C# public class HelloWorld{public static void Main() { System.Console.WriteLine(\"Hello World\"); } } Listing 1.4 JavaScript (in bold) embedded in HTML. <html> <head> <title> Hello main(String args[]){ System.out.println(\"Hello World\"); } Listing 1.6 PHP < ?php echo \"Hello World\"; ? > 4Holistic Game Development with UnityUmberto Eco, the creator of Opera Aperta , described the concept of art as mechanical relationships between features that can be reorganized to make a series of distinct works. This too is true of programming. The same lines of programming code can be reorganized to create many different programs. Nowhere is this shared art/programming characteristic more obvious than in fractals. Fractals are shapes made up of smaller self-similar copies of themselves. The famous Mandelbrot set or Snowman is shown in Figure 1.2. The whole shape is made up of smaller versions of itself. As you look closer, you will be able to spot tens or even hundreds of smaller snowman shapes within the larger image. A fractal is constructed from a mathematical algorithm repeated over and over where the output is interpreted as a point and color on the computer screen. The Mandelbrot set comes from complex equations, but not all fractal algorithms require high-level mathematical knowledge to understand. The Barnsley fern leaf is the epitome of both the creative side of programming and algorithmic nature of art. Put simply, the algorithm takes a shape, any shape, and transforms it four times, as shown in Figure 1.3. It then takes the resulting shape and puts it through the same set of transformations. This can be repeated infinitum; however, around 10 iterations of this process give a good impression of the resulting image (see Figure 1.4). Creating images with these types of algorithmic approaches is called procedural or dynamic generation. It is a common method for creating 5The Art of Programming Mechanics FIG 1.2 The Mandelbrot set and periodicities of orbits.assets such as terrain, trees, and special effects in games. Although procedural generation can create game landscapes and other assets before a player starts playing, procedural generation comes into its own while the game is being played. Programming code can access the assets in a game during run time. It can manipulate an asset based on player input. For example, placing a large hole in a wall after the player has blown it up is achieved with programming code. This can only be calculated at the time the player interacts with the game, as beforehand a programmer would have no idea where the player would be standing or in what direction he would shoot. The game Fracture by Day 1 Studios features dynamic ground terrains that lift up beneath objects when shot with a special weapon. 6Holistic Game Development with Unity (a) (b) (c) FIG 1.4 Three iterations of Barnsley's fern leaf transformations after (a) 2 iterations, (b) 5 iterations, and (c) 10 iterations. Orig inal shap e Transform 1 shrink and slightly tilt clockwis e about 5 \u00b0 Transform 2 quar ter the size, and tilt appr ox. 45\u00b0 clockwis e Transform 3 quar ter the size, and tilt appr ox. 45\u00b0 anticl ockwis e Transform 4 halve squa sh into upr ight lineResulting shap e FIG 1.3 Transformations of Barnsley's fern leaf. For Research Procedural Generation in Unity The Unity website has a project with numerous procedural generation demonstrations. At this point in your game development learning journey, you may not be able to understand the underlying code, but the examples will show you what is possible and the types of things you will be able to achieve by the end of this book. The Unity project can be downloaded from http://u3d.as/content/unity-technologies/ procedural-examples/3zu. A purpose-built programming language for creating art is Processing. The syntax of the code is not unlike JavaScript and contains all the fundamental programming concepts you will learn about in Section 1.4. The image in Figure 1.5 was created with Processing by randomly plotting circles and drawing a series of curves from a central location to each circle. Art created by Casey Reas, shown in Figure 1.6, created with Processing has been displayed at Gallery (DAM) Berlin. 7The Art of Programming Mechanics FIG 1.5 An image created with processing.1.3 Creating Art from the Left Side of the Brain Most people know what they like and do not like when they see art. However, if you ask them why they like it, they may not be able to put their thoughts into words. No doubt there are some people who are naturally gifted with the ability to draw and sculpt and some who are not. For the artistically challenged, however, hope is not lost. This is certainly Betty Edwards' stance. A logical approach to the elements and principles of design reveals rules one can apply to create more appealing artwork. They are the mechanical relationships, alluded to by Umberto Eco, that can be used as building blocks to create works of art. These fundamentals are common threads found to run through all good artwork. They will not assist you in being creative and coming up with original art, but they will help in presentation and visual attractiveness. The elements of design are the primary items that make up drawings, models, paintings, and design. They are point , line, shape , direction , size, texture , color , and hue. All visual artworks include one or more of these elements. For Research Getting Started with Processing If you are interested in learning more about Processing and drawing images with programming code, you can download the open source language and find tutorials at http://processing.org. 8Holistic Game Development with Unity FIG 1.6 Artwork created by Casey Reas using processing as exhibited at gallery [DAM] Berlin.In the graphics of computer games, each of these elements is as important to the visual aspect of game assets as they are in drawings, painting, and sculptures. However, as each is being stored in computer memory and processed by mathematical algorithms, their treatment by the game artist differs. 1.3.1 Point All visual elements begin with a point. In drawing, it is the first mark put on paper. Because of the physical makeup of computer screens, it is also the fundamental building block of all digital images. Each point on an electronic screen is called a pixel. The number of pixels visible on a display is referred to as the resolution. For example, a resolution of 1024 \u00d7 768 is 1024 pixels wide and 768 pixels high. Each pixel is referenced by its x and y Cartesian coordinates. Because pixels are discrete locations on a screen, these coordinates are always in whole numbers. The default coordinate system for a screen has the (0,0) pixel in the upper left-hand corner. A screen with 1024 \u00d7 768 resolution would have the (1023,767) pixel in the bottom right-hand corner. The highest value pixel has x and y values that are one minus the width and height, respectively, because the smallest pixel location is referenced as (0,0). It is also possible to change the default layout depending on the application being used such that the y values of the pixels are flipped with (0,0) being in the lower left-hand corner or even moved into the center of the screen. 1.3.2 Line On paper, a line is created by the stroke of a pen or brush. It can also define the boundary where two shapes meet. A line on a digital display is created by coloring pixels on the screen between two pixel coordinates. Given the points at the ends of a line, an algorithm calculates the pixel values that must be colored in to create a straight line. This is not as straightforward as it sounds because the pixels can only have whole number coordinate values. The Bresenham line algorithm was developed by Jack E. Bresenham in 1962 to effectively calculate the best pixels to color in to give the appearance of a line. Therefore, the line that appears on a digital display can only ever be an approximation to the real line, as shown in Figure 1.7. 9The Art of Programming Mechanics Vector lineBresenham line FIG 1.7 A real line and a Bresenham line.1.3.3 Shape A shape refers not only to primitive geometrics such as circles, squares, and triangles, but also to freeform and nonstandard formations. In computer graphics, polygons are treated as they are in geometry: a series of points called vertices connected by straight edges. By storing the coordinates of the vertices, the edges can be reconstructed using straight line algorithms. A circle is often represented as a regular polygon with many edges. As the number of edges increases, a regular polygon approaches the shape of a circle. Freeform objects involve the use of curves. To be stored and manipulated by the computer efficiently, these need to be stored in a mathematical format. Two common types of curves used include Bezier and non-uniform rational basis spline (NURBS). A Bezier curve is constructed from a number of control points. The first and last points specify the start and end of the curve and the other points act as attractors, drawing the line toward them and forming a curve, as shown in Figure 1.8. A NURBS curve is similar to a Bezier curve in that it has a number of control points; however, the control points can be weighted such that some may attract more than others. In computer graphics, a polygon is the basic building block for objects, whether in two dimensions (2D) or three dimensions (3D). A single polygon defines a flat surface onto which texture can be applied. The most efficient way to define a flat surface is through the use of three points; therefore, triangles are the polygon of choice for constructing models, although sometimes you will find square polygons used in some software packages. Fortunately for the artist, modeling software such as Autodesk's 3DS Studio Max and Blender do not require models to be handcrafted from triangles; instead, they automatically construct any objects using triangles as a base, as shown in Figure 1.9. 10Holistic Game Development with Unity (a) (b)P2 P2 P1 P1 P4P3P3 P5 P6P4 FIG Bezier and (b) a NURBS curve.The wireframe model that represents a 3D object is called a mesh. The number of polygons in a mesh is called the polycount. The higher the polycount, the more triangles in the model and the more computer processing power required to render and manipulate the model. For this reason, computer game artists must find a balance between functionality and visual quality, as a high-resolution model is too costly with respect to making the game run slowly. The models must be dynamically processed and rendered in real time. In contrast, animated movie models can be of much higher quality, as they are not rendered in real time. Next time, when you are playing a game, take a closer look at how the models are constructed. 1.3.4 Direction Direction is the orientation of a line. Depending on its treatment, it can imply speed and motion. A line can sit horizontal, vertical, or oblique. In computer graphics, physics, engineering, and mathematics, a Euclidean vector is used to specify direction. A vector stores information about how to get from one point in space to another in a straight line. Not only does it represent a direction, but also a distance, otherwise called its magnitude. The magnitude of a vector is taken from its length. Two vectors can point in the same direction but have different magnitudes, as shown in Figure 1.10a. In addition, two vectors can have the same magnitude but different direction, as shown in Figure 1.10b. A vector with a magnitude of 1 is normalized. 11The Art of Programming Mechanics FIG 1.9 A 3D model constructed from triangles in Blender.Vectors are a fundamental element in 3D games as they describe the direction in which objects are orientated, how they are moving, how they are scaled, and even how they are textured and lit. The basics of vectors are explored further in Chapter 2. 1.3.5 Size Size is the relationship of the amount of space objects take up with respect to each other. In art and design, it can be used to create balance, focal points, or emphasis. In computer graphics, size is referred to as scale. An object can be scaled uniformly in any direction. Figure 1.11 shows a 3D object (a) scaled uni - formly by 2 (b), vertically by 3 (c), horizontally by 0.5 (d), and vertically by -1 (e). 12Holistic Game Development with Unity (a) (b) FIG 1.10 (a) Vectors with the same direction but different magnitudes and (b) vectors with the same magnitude but different directions. (a) (b) (c) (d)( e) FIG 1.11 A 3D object scaled in multiple ways: (a) the original object, (b) scaled uniformly by 2, (c) scaled vertically by 3, (d) scaled horizontally by 0.5, and (e) scaled vertically by -1.Note in Figure 1.11d how scaling by a negative value flips them vertically. They can also be achieved uniformly or horizontally using negative scaling values. Depending on coordinates of an object, scaling will also move it. For example, if an object is centered around (0,0), it can be scaled remaining in the same place. However, if the object is away from (0,0), it will move by an amount proportional to the scale. This occurs as scaling values are multiplied with vertex coordinates to resize objects. A vertex at (0,0) multiplied by 2, for example, will remain at (0,0), whereas a vertex at (3,2) multiplied by 2 will move to (6,4). This is illustrated in Figure 1.12. 1.3.6 Texture In art and design, texture relates to the surface quality of a shape or object. For example, the surface could be rough, smooth, or highly polished. In computer games, texture refers not only to the quality, but also to any photographs, colors, or patterns on the surface where the surface is defined by a polygon. In games, textures are created using image files called maps. They are created in Adobe Photoshop or similar software. The image that gives an object its color is called a texture map , color map , or diffuse coloring. All images are mapped onto an object, polygon by polygon, using a technique called UV mapping. This aligns points on an image with vertices of each polygon. The part of the image between the points is then stretched across the polygon. This process is shown on a square polygon in Figure 1.13. To add a tactile look to the surface of a polygon enhancing the base texture, bump mapping is applied. This gives the object an appearance of having bumps, lumps, and grooves without the actual model itself being changed. Bump mapping is often applied to add more depth to an object with respect 13The Art of Programming Mechanics y (a)(b)x FIG 1.12 How scaling can move an object. (a) When vertices of an object around the origin are scaled, negative values become bigger negative values and the same with positive values. But the original center (0,0) will remain (0,0) when scaled. (b) If the vertices are all positive, then scaling them up will just make them bigger. And the final object moves location.to the way light and shadow display on the surface. Figure 1.14 illustrates the application of a color and normal map on a soldier mesh taken from Unity. A variety of other effects also add further texture to a surface. For example, specular lighting can make an object look glossy or dull, and shaders , small programs that manipulate the textures on a surface, can add a plethora of special effects from bubbling water to toon shading. 1.3.7 Color In the theory of visual art involving pigments, color is taught as a set of primary colors (red, yellow, and blue) from which all other colors can be created. The color perceived by the human eye is the result of light being reflected off the surface of the artwork. When all of the light is reflected, we see white. When none of the light is reflected, we see black. The resulting color of a mixture of primaries is caused by some of the light being absorbed by the pigment. This is called a subtractive color model, as the pigments subtract some of the original light source before reflecting the remainder. The light from a digital display follows an additive color model. The display emits different colors by combining the primary sources of red, green, and blue light. For this reason, color is represented in computer graphics as a three or four numbered value in the format (red, green, blue, and alpha). In some formats, the alpha value is not used, making color a three-value representation. 14Holistic Game Development with Unity 1 2 23 41 34 FIG 1.13 The UV mapping process. Vertices of a polygon on an object are mapped to locations on a 2D image.15The Art of Programming Mechanics Mesh Diuse ma p texture Normal map textur eDetail wit hout normal ma pDetail wit h normal ma pNormal ma p Diuse and normal ma p Color ( diuse) ma p FIG 1.14 A soldier mesh with and without a color map and normal map.Alpha represents the transparency of a color. When a surface has a color applied with an alpha of 0, it is fully transparent; when it has a value of 1, it is totally opaque. A value of 0.5 makes it partially transparent. Values for red, green, and blue also range between 0 and 1, where 0 indicates none of the color and 1 indicates all of the color. Imagine the values indicate a dial for each colored lamp. When the value is set to 0, the lamp is off and when the value is set to 1, it is at full strength\u2014any values in between give partial brightness. For example, a color value of (1,0,0,1) will give the color red. A color value of (1,1,0,1) will give the color yellow. The easy way to look up values for a color is to use the color picker included with most software including MS Word and Adobe Photoshop. The color picker from Adobe Photoshop is shown in Figure 1.15. Also included with most color pickers is the ability to set the color using different color models. The one shown in Figure 1.15 includes a Hue, Saturation, and Brightness model, as well as a CMYK model. For more information on these, check out http://en.wikipedia.org/wiki/ Color_model. Note An alternate way to set the value of a color is with values between 0 and 255 instead of between 0 and 1. It depends on the software you are using. In programming, values are usually between 0 and 1 and more commonly between 0 and 255 in color pickers. 16Holistic Game Development with Unity Red, Gr een, Blue Some so ftware sp ecies the value s between 0 and 255 in place of 0 and 1 respectively . FIG 1.15 The Adobe Photoshop color picker.1.4 How Game Engines Work A game engine takes all the hard work out of creating a game. In the not so distant past, game developers had to write each game from scratch or modify older similar ones. Eventually game editor programs started to surface that allowed developers to create games without having to write a lot of the underlying code. The game engine takes care of things such as physics, sound, graphics processing, and user input, allowing game developers to get on with the creation of high-level game mechanics. For example, in Unity, physical properties can be added to a ball with the click of a button to make it react to gravity and bounce off hard surfaces. Driving these behaviors, embedded in the engine, are millions of lines of complex code containing many mathematical functions related to real-world physics. The game developer can spend more time designing what the ball looks like and even selecting the type of material it is made from without having a background in Newtonian physics. 1.4.1 A Generic Game Engine To understand how a game engine works, we will first look at a simple illustration of all its components. A conceptualization is shown in Figure 1.16. The game engine is responsible for the running of a variety of components that manage all the game resources and behaviors. The Physics Manager handles how game objects interact with each other and the environments 17The Art of Programming Mechanics Sound managerPhysics manager Input managerGame engineGame object GraphicsSoundPhysics Al Game object comp onen t FIG 1.16 Parts of a generic game engine.by simulating real-world physics. The Input Manager looks after interactions between the player and the game. It manages the drawing of graphical user interfaces and the handling of mouse clicks and the like. The Sound Manager is responsible for initializing and controlling how sound is delivered from the game to the player. If 3D sound is called for, it will ensure that the right sound at the right volume is sent to the correct computer speaker. In addition to these managers are game objects. Game objects represent all the assets placed in a game environment. These include the terrain, sky, trees, weapons, rocks, nonplayer characters, rain, explosions, and so on. Because game objects represent a very diverse set of elements, they can also be customized through the addition of components that may include elements of artificial intelligence (AI), sound, graphics, and physics. The AI component determines how a game object will behave. For example, a rock in a scene would not have an AI component, but an enemy computer-controlled character would have AI to control how it attacks and pursues the player. A sound component gives a game object a sound. For example, an explosion would have a sound component whereas a tree may not. The physics component allows a game object to act within the physics system of the game. For example, physics added to a rock would see it roll down a hill or bounce and break apart when it falls. The graphics component dictates how the game object is drawn. This is the way in which it is presented to players on the screen. Some game objects will be visible and some will not. For example, a tree in a scene is a visible game object, whereas an autosave checkpoint, which may be a location in a game level, is not. 1.4.2 The Main Loop All games run in the same way, as illustrated in Figure 1.17. There is an initialization stage in which computer memory is allocated, saved information is retrieved, and graphics and peripheral devices are checked. This is followed by the main game loop or main loop. The main loop runs continuously over and over again until the player decides to quit the game. While in the main loop, the game executes a cycle of functions that processes user input messages; checks through all game objects and updates their state, including their position; updates the environment with respect to game object positions, user interaction, and the physics system; and finally renders the new scene to the screen. Essentially each loop renders one frame of graphics on the screen. The faster the loop executes, the smoother the animation of the game appears. The more processing that needs to be performed during the main loop, the slower it will execute. As the number of game objects increases, the amount of work the main loop has to do also increases and therefore slows down the time between frames being rendered on the screen. This time is called frames per second (FPS). Game developers strive for very high FPS, and for today's computers and consoles, FPS can extend beyond 600. In some circumstances, however, such as on mobile devices with less processing power, FPS can become very 18Holistic Game Development with Unitylow with only several game objects, and the animation will flicker and user controls are nonresponsive. Having said this, beginner game developers need to be aware of this issue as even on a very powerful computer, adding a lot of highly detailed game objects can soon bring the FPS to a grinding halt. Anything below 25 FPS is considered unacceptable, and as it approaches 15 FPS the animation starts to flicker. Unity Specifics Game Objects Game objects are the fundamental building blocks for Unity games. It is through the addition, modification, and interaction of game objects that you will create your own game. After adding a game object in Unity (which you will do in the next section), a variety of components can be added to give the game object different functionalities. In all there are seven component categories. These are explored thoroughly throughout this book. In short, they are mesh , particles , physics , audio , rendering , miscellaneous , and scripts , as shown in Figure 1.18. A game object can have all, none, or any combination of these components added. The game object exemplified in Figure 1.18 has at least one of each of these component types added. 19The Art of Programming Mechanics Initialize Main lo opProcess user in put Update game t Render sceneClean upProcess all game objects FIG 1.17 How a game runs .A mesh component handles the drawing of an object. Without a mesh component, the game object is not visible. A particle component allows for a game object to have a particle system added. For example, if the game object were a jet fighter, a particle system could be added to give the effect of afterburners. A physics component gives the game object real-world physical properties so it can be collided with and affected by gravity and other physical effects. An audio component adds sound or sound effects to a game object. For example, if the game object were a car, the noise of a car engine could be added. A rendering component adds special effects to a game object such as emitting light. Miscellaneous components include a variety of effects for the game objects that do not fit within other categories. In Figure 1.18, the wind zone component is shown as a type of miscellaneous component. In brief, this causes the game object to become a source of wind for interaction within the physics system. Finally, scripts are components that contain programming code to alter the behavior of a game object. Scripts can be used for a large variety of purposes and are fundamental to developing game mechanics and tying an entire game together. In Unity, scripts added to game objects can be written in JavaScript or C#. This book uses JavaScript, as it requires less background knowledge in programming to get started and the syntax is more forgiving than C#. 20Holistic Game Development with Unity Rotate (script)Wind zoneLigh tAudio sourceBox collide r Mesh partic le Game objectGame object comp onen tMesh ScriptsMiscRenderAudioPhysics Particle sIsozy x FIG 1.18 Components that can be added to a game object in Unity.FIG 1.19 The Unity editing environment. On the Web Navigating the Unity Editor Interface Visit http://bit.ly/unityinterface for a short video demonstrating some best practices for finding your way around in the Unity Editor. 21The Art of Programming Mechanics Unity Hands On Getting to Know the Unity3D Development Environment Step 1: To begin, download Unity by visiting http://unity3D.com/ and clicking on Download. Unity has a free version that lacks some functionality, but never expires. The free version is still quite powerful and is certainly enough for the first-time game developer. Once you have downloaded the software, follow the installation instructions to get Unity up and running. Step 2: Running Unity for the first time reveals the multiwindowed editing environment, as shown in Figure 1.19. The tabs and windows can be dragged around to suit your own preferences.Step 3: After starting Unity, create a new project by selecting File > New Project. Note that the project name and directory used to save the project are one and the same; by default, this is \"New Unity Project.\" The dialog box for creating a new project will allow you to choose 3D or 2D. For now select 3D. Step 4: To create a simple scene, select GameObject > 3D Object > Cube from the main menu. All objects added to the game scene are called game objects in Unity. A cube will appear in the Hierarchy, Scene, Game, and Inspector windows. Step 5: If the cube appears very small, place your mouse in the Scene and use the scroll wheel to zoom in. You can also focus the scene on the cube by double-clicking it in the Hierarchy or selecting it in the Scene and pressing \"F\". Note that your viewing position and angle in the Scene do not affect the look of the final game or change the attributes of any game objects. This initial Scene is shown in Figure 1.20. The Inspector Note From this point in the text, these windows will be referenced just by their capitalized names. 22Holistic Game Development with Unity FIG 1.20 A single cube in a scene.shows all the properties of the cube. This includes its position, rotation, scale, the 3D mesh representing it, and a physics collider. We will look at these properties in more detail later. Step 6: At this time, press the play button. As you have not added any functionality at this stage when running, all the game will do is display a static cube. Step 7: Although lighting is a subject usually delayed for more advanced topics in game development, the author always like to add a light to scenes to give them more depth and bring them alive. In the Scene, the cube is already shaded, as this is the default method of drawing. However, in the Game, the cube is a lifeless, flat, gray square. To add a light, select GameObject > Light > Directional Light from the main menu. A light displaying as a little sun symbol will appear in the Scene and the cube in the Game will become brighter. Step 8: Now because we are looking at the cube front on in the Game, it still appears as a little square. Therefore, we need to transform it for viewing. A transformation modifies the properties of position, rotation, and scale of a GameObject. The specifics of transformation are discussed later, but for now you can transform the cube quickly using the W key for changing position, the E key for rotating the objects, and the R key for scaling it. Before pressing any of these keys, ensure that the cube is selected in the Hierarchy window. When it is selected, it will have a green and blue wireframe displayed on it. Step 9: In W (position) mode, the cube will be overlaid with red, green, and blue arrows. These represent the x, y, and z axes of the object. Clicking and dragging from any of the arrowheads will move the object along that axis. To move the object freely, click and drag from the central yellow box. Step 10: In E (rotate) mode, the cube will have red, green, and blue circles drawn around it. Click and drag any of these circles to rotate the cube in the associated directions. Note Unity allows you to edit your game as it is running. This is great if you want to test out an idea to see how the game will react. Be careful though because any changes you make in the editor, while play is on, will revert back to their previous value when you press stop. This can be very annoying if you have made large changes not realizing that you are in play mode as they will be wiped away as soon as you press stop. The only exceptions to this are script files because they are edited and saved externally to the editor. Changes made in script files are independent of the play button. 23The Art of Programming MechanicsStep 11: In R (scale) mode, the red, green, and blue axes will include small cubes on the ends. Clicking and dragging any of these will change the scale of the object in the respective directions. You may also click and drag the central small cube to resize the object in all directions uniformly. Note that while you are moving, rotating, and scaling the cube, its appearance changes in the Game window. You will also notice that values in the Transform part of the Inspector change too. Move and scale the cube so that you can see it clearly in the Game window. Step 12: The color of a GameObject comes from an associated material. To create a material, click on Create in the Project window and select Material. New material will appear in the Project window and, when selected, its properties in the Inspector are as shown in Figure 1.21.Step 13: To change the color of this material, click on the white box next to Main Color in the Inspector. Select the color you want from the Color Popup and then close it. The large sphere view of the material in the Inspector will change to your chosen color. To change the name of the material, click on New Material once in the 24Holistic Game Development with Unity FIG 1.21 Creating new material.Project window. Wait a moment and then click on it again slowly. This will place you in editing mode for the material name. Type in a new name and hit the Enter key. Step 14: To add material to the cube, drag and drop your material from the Project window onto the cube in the Scene. Alternatively, you can drag and drop the material from the Project window and drop it onto the cube listed in the Hierarchy window. Both will achieve the same effect. The cube will be colored. Step 15: In the Project window, select Create and then JavaScript. The JavaScript created will be called NewbehaviorScript. Change this, by slowly clicking on it, as you did with the material, to spin. Step 16: Double-click on it and a code/text editor will open for entering code. In the code editor type: function Update() { transform.Rotate(Vector3.up * 10); } The code must be EXACTLY as it appears here. Ensure that you have the correct spelling and capitalization; otherwise, it may not work. For large spaces, for example, before the word transform , insert a tab. When you are done, save your code in the text editor. Step 17: Return to Unity and drag and drop the spin code from the Project window onto the cube in the Hierarchy window. You will notice that if you select the cube, the spin script will appear as a component added to the cube in the Inspector, as shown in Figure 1.22. Note When you create a new JavaScript file, you only give it a name. Do not add .js on the end. Unity will do this for you automatically. However, in the Project, spin.js will only appear in the list as spin , without the .js on the end. Note The code in Step 15 contains the Unity function Update() . Whatever code you place inside Update() will be run once each main loop. Therefore, the code in Step 15 will run over and over again for the entire time the play button is down. 25The Art of Programming MechanicsStep 18: Press the play button and watch as the cube spins. Step 19: To save the application, select File > Save Scene from the main menu. In the dialog that pops up, give the scene a name such as spinningCube. Next, select File > Save Project from the main menu. Each project you create can have multiple scenes. Scenes are saved inside projects. For example, an entire game application would be a single project. However, inside the game there would be multiple scenes, such as Main Menu, Help Screen, Map View, and 3D View. Single scenes can also be imported from one project to another. 1.5 A Scripting Primer Hard-core programmers do not strictly consider scripting as programming, as it is a much simpler way of writing a program. Scripting languages have all the properties of programming languages; however, they tend to be less verbose and require less code to get the job done. For example, the JavaScript and Java shown in Listings 1.4 and 1.5, respectively, demonstrate how the scripting language JavaScript requires much less code to achieve 26Holistic Game Development with Unity FIG 1.22 The cube with the spin script attached.the same outcome as Java. The major difference between programming and scripting is that programming languages are compiled (built into a program by the computer) and then run afterward, and a scripting language is interpreted by another program as it runs. This book refers to the JavaScript you are about to learn as being compiled , when in reality at the technical level it is not. When a program is compiled, it is turned into machine code the computer can understand. Compilation checks through the code for errors and then builds it into a program. Do not worry if you get lots of errors when you start programming. It is a normal part of the learning process. Some of the error messages will also seem quite vague and ambiguous for what they are trying to tell you. However, a quick search on Google will often reveal their true meaning. JavaScript is used in this book as the primary means of programming. Although it is strictly a scripting language, it will be referred to in terms of programming, as it will be used to add computational functionality to games developed in Unity. Its syntax and constructs are also closely related to C++, C#, and Java; therefore, it is ideal to learn as a beginning language. It also provides a very powerful and yet simple way to develop game mechanics in Unity and many other game-editing environments. Several fundamental constructs in programming are required to fully understand a programming language. These are variables, operations, arrays, conditions, loops, functions, and objects. However, the most fundamental and important concept that underlies everything is logic. 1.5.1 Logic At the heart of all computers are the electronic switches on the circuit boards that cause them to operate. The fact that electricity has two states, on or off, is the underlying foundation on which programs are built. In simplistic terms, switches (otherwise known as relays) are openings that can either be opened or be closed, representing on and off, respectively. Imagine a basic circuit illustrated as a battery, electric cable, light switch, and lightbulb, as shown in Figure 1.23. When the switch is open, the circuit is broken and the electricity is off. When the switch is closed, the circuit is complete and the electricity is on. This is exactly how computer circuitry works. Slightly more complex switches called 27The Art of Programming Mechanics On O FIG 1.23 A very basic electric circuit.logic gates allow for the circuit to be opened or closed, depending on two incoming electrical currents instead of the one from the previous example. In all, there are seven logic gate configurations that take two currents as input and a single current as output. These gates are called AND, OR, NOT, NAND, NOR, XOR, and XNOR. The AND gate takes two input currents; if both currents are on, the output current is on. If only one or none of the input currents is on, the output is off. This is illustrated in Figure 1.24. In computer science * the operation of combining two currents or signals into one is called Boolean algebra and logic gate names (i.e., AND, OR) are called Boolean functions , although the on signal in computer science is referred to as TRUE or the value 1 and off is FALSE or 0. Using this terminology, all possible functions of the AND gate can be represented in truth tables , as shown in Table 1.1. It should be noted from Table 1.1 that truth tables can be written in a number of formats using 1s and 0s or TRUEs and FALSEs. Each Boolean function has its own unique truth table. They work in the same way as the AND function does. They have two input values of TRUE and/or FALSE and one output value of TRUE or FALSE. * And mathematics, physics, information technology, etc. Named after George Boole, the nineteenth-century mathematician who first defined algebraic systems of logic. 28Holistic Game Development with Unity O O O OOn On On OnOnOOO FIG 1.24 A conceptualization of an AND logic gate.If you are just learning about programming for the first time right now, these concepts may seem a bit abstract and disconnected from real programming. However, as you learn more about programming, you will realize how fundamental knowing these truth tables is to a holistic understanding. It will become much clearer as you begin to write your own programs. Quick Reference Boolean Algebra Function Boolean Algebra SyntaxJavaScript Truth Table AND A B A && B Input Output A B A AND B 0 0 0 0 1 0 1 0 0 1 1 1 OR A + B A | | B Input Output A B A OR B 0 0 0 0 1 1 1 0 1 1 1 1 NOT !A Input Output A NOT 0 1 1 0 29The Art of Programming Mechanics TABLE 1.1 Truth Table for the Boolean Function AND Format 1 Format 2 Input Output Input Output A B A and B A B A and B 1 1 1 TRUE TRUE TRUE 1 0 0 TRUE FALSE FALSE 0 1 0 FALSE TRUE FALSE 0 0 0 FALSE FALSE FALSE Quick Reference Boolean Algebra (Continued) 30Holistic Game Development with Unity Function Boolean Algebra SyntaxJavaScript Truth Table NAND A B !(A && B) Input Output A B A NAND B 0 0 1 0 1 1 1 0 1 1 1 0 NOR A+B !(A | | B) Input Output A B A NOR B 0 0 1 0 1 0 1 0 0 1 1 0 XOR A B ( A && !B) || ( !A && B)Input Output A B A XOR B 0 0 0 0 1 1 1 0 1 1 1 0 XNOR A B (!A && !B) || (A && B)Input Output Output A B A XNOR B 0 0 1 0 1 0 1 0 0 1 1 11.5.2 Comments Comments are not actually programming code. They are, however, inserted lines of freeform text totally ignored by the compiler. They allow you to insert explanations about your code or little reminders to what your code does. They are very useful when you write some ground-breaking code, leave it for 6 months, and then come back to it, having forgotten what it does. The author's advice is to use comments as frequently as possible. It is common practice to place comments at the top of each program file to give an overview of the entire code, as well as above each function. Another programmer may also insert comments if he makes a change. Some examples are shown in Listing 1.7. There are two types of comments. The first is a way to block out an entire paragraph. It begins with a /* and ends with a */ . You can write anything you want between these characters and it will be totally ignored by the compiler. The second type is a one liner. A line starting with // will also be ignored by the compiler but only until the end of the line. Therefore, you could write this: /* Here are some comments about my program I wrote to control a spinning cube in Unity. I used the code I found in the Script Reference after doing a search for the word Rotate.*/ or this: //Here are some comments //about my program I wrote//to control a spinning cube//in Unity. I used the code I//found in the Script//Reference after doing a//search for the word RotateListing 1.7 A short program with comments. /*Program: spin.js Description: Will rotate any game object around the axisAuthor: Penny de Byl Date: 12/08/2015 */function Update(){ //rotate around the vertical axis with a speed of 10transform.Rotate(Vector3.up * 10); } 31The Art of Programming MechanicsUse comments wisely and as you see fit. It is quite legitimate to write an entire program without comments; however, be warned, when you come back to code several months later you will be glad you did. 1.5.3 Functions A function is a block that bundles a number of lines of code together to form a specific operation. It contains prewritten code that can be reused over and over again, saving programmers the stress of reinventing the wheel each time they write a program. Programmers can also write their own functions. Whenever the author thinks of functions, she visualizes them as food processing machines. You put vegetables in, they get processed, and you get chopped, mashed, or minced vegetables out. The most common newbie function taught is print() or a derivative thereof. This function takes input and prints it to the screen. For example, print(\"Hello Unity\"); will print Hello Unity on the screen or console.Functions available to you as a programmer will depend on the programming language. JavaScript has numerous standard functions but also takes on added ones depending on the context. For example, when JavaScript is embedded into the HTML of a web page, document.write(\"Hello Unity\"); will display the text on the web page when viewed inside a browser. To define your own function in JavaScript, the format is that shown in Listing 1.8. A function declaration begins with the keyword function, followed by its name and then a list of input values. While functions are a programming element usually introduced to new programmers further down the track, they are fundamental to writing JavaScript code for Unity and therefore are being explained up front. Unity Specifics Functions Several essential JavaScript functions need to be included in your script to talk to Unity. As Unity is running your game, it will look through code attached to all game objects for functions it needs to execute at any particular time. For example, the Update() function runs once each main loop. If there are five game objects each with Update() functions in their scripts, then all five Update() functions will be executed. Another useful function is Start() . This function runs just once during the lifetime of the game object. Think of it as an initialization method for a game object. You can use it to set initial states and values for a game object. It does not run over and over again like the Update() function and therefore is a good place to put code that does not need to run for the life of the game object. For example, if you want to constantly rotate an object like that in Listing 1.7, then it makes sense for the rotation to occur each loop. However, if you want to set the color of a game object to red, coding it in an Update() function will just cause the same command to run over and over again. Once the object is red, there is no need to keep setting it to red. A more suitable place to make an object red would be in the Start() function. It is set to red just once. Remember, code inside Update() runs each main loop and each line of code in the main loop will cause it to run slower, albeit a minute amount, but superfluous code can soon add up to huge drops in frame rates. Listing 1.8 Code syntax for an empty function. function myFunctionName(input list) {} 32Holistic Game Development with UnityUse comments wisely and as you see fit. It is quite legitimate to write an entire program without comments; however, be warned, when you come back to code several months later you will be glad you did. 1.5.3 Functions A function is a block that bundles a number of lines of code together to form a specific operation. It contains prewritten code that can be reused over and over again, saving programmers the stress of reinventing the wheel each time they write a program. Programmers can also write their own functions. Whenever the author thinks of functions, she visualizes them as food processing machines. You put vegetables in, they get processed, and you get chopped, mashed, or minced vegetables out. The most common newbie function taught is print() or a derivative thereof. This function takes input and prints it to the screen. For example, print(\"Hello Unity\"); will print Hello Unity on the screen or console. Functions available to you as a programmer will depend on the programming language. JavaScript has numerous standard functions but also takes on added ones depending on the context. For example, when JavaScript is embedded into the HTML of a web page, document.write(\"Hello Unity\"); will display the text on the web page when viewed inside a browser. To define your own function in JavaScript, the format is that shown in Listing 1.8. A function declaration begins with the keyword function, followed by its name and then a list of input values. While functions are a programming element usually introduced to new programmers further down the track, they are fundamental to writing JavaScript code for Unity and therefore are being explained up front. Unity Specifics Functions Several essential JavaScript functions need to be included in your script to talk to Unity. As Unity is running your game, it will look through code attached to all game objects for functions it needs to execute at any particular time. For example, the Update() function runs once each main loop. If there are five game objects each with Update() functions in their scripts, then all five Update() functions will be executed. Another useful function is Start() . This function runs just once during the lifetime of the game object. Think of it as an initialization method for a game object. You can use it to set initial states and values for a game object. It does not run over and over again like the Update() function and therefore is a good place to put code that does not need to run for the life of the game object. For example, if you want to constantly rotate an object like that in Listing 1.7, then it makes sense for the rotation to occur each loop. However, if you want to set the color of a game object to red, coding it in an Update() function will just cause the same command to run over and over again. Once the object is red, there is no need to keep setting it to red. A more suitable place to make an object red would be in the Start() function. It is set to red just once. Remember, code inside Update() runs each main loop and each line of code in the main loop will cause it to run slower, albeit a minute amount, but superfluous code can soon add up to huge drops in frame rates. 1.5.4 Variables A variable is the name of a piece of computer memory allocated for your program. Think of it as a storage box that you can put things into, take things out of, add to, and change. A variable in programming is similar to a variable in algebra that holds a numerical value. However, in programming, pretty much anything can be placed into a variable. In the line of code, x = 50; For Research More Unity Functions More Unity-specific functions will be revealed throughout the book as needed. If you are interested in other available functions, go to the Unity Script Reference at https://docs.unity3d.com/ScriptReference/, search for Monobehavior and have a look at the Overridable Functions. These are the ones you can use in your JavaScript. 33The Art of Programming Mechanicsx is the name of the variable and it has a value of 50. If you continued with y = x + 30; another variable called y is being given the value of x (50) plus 30. The value of y in this case would be 80. The differing types of information that can be stored in variables are called data types. These include integers (whole numbers, e.g., 5), floating point numbers (numbers with decimal values, e.g., 3.14), characters (a single alphanumeric value), strings (words and texts, e.g., \"hello\"), Boolean values (e.g., true and false), and other data types made from mixtures of the aforementioned. Variables do not just exist automatically in computer memory. They must be declared. The process of declaring a variable gives it a name, initial value, and a size. Some examples are shown in Listing 1.9. If you do not know what value should be placed into a variable, you do not need to assign one. For example, var x: int; will create an integer variable called x and the value will be set to 0 automatically. Variables in computer memory can be conceptualized as boxes in a large storage space. The different types of variables have different sized boxes. The smallest box is a Boolean, as you only need to store a value of 1 or 0 inside it. A character is the next size up. It would hold all the alphanumeric characters such as those appearing on the keys of your keyboard and a couple of miscellaneous others. The integer size box is even bigger, holding numbers between 32,768 and 32,767 and a float box bigger again holding numbers with seven decimal digits of significance between 0.000000 \u00d7 10 95 and 9.999999 \u00d7 1096. The exact size of the boxes will change depending on operating system and computer processor,* but the relative sizes remain the same. A conceptualization of memory allocation from variable declarations is shown in Figure 1.25.Listing 1.9 An example of declaring variables of differing types. var x: int = 10; //an integer called x with the value 10 var y: float = 5.6; //a float called y with the value 5.6 var isSpinning: boolean = true; //a Boolean value set to true var ch: char = 'a'; // a character called ch with a value 'a' // a string called myName with the value Penny//Note: the datatype starts with a Capital \"S\" var myName: String = \"Penny\"; * If you are interested in exploring this topic more, see http://en.wikipedia.org/wiki/ Primitive_data_type. 34Holistic Game Development with UnityOne thing to note from Listing 1.9 is the way characters and strings are given values. A single character is enclosed in single quotes and a string is enclosed in double quotes. The reason being that if they were not, the compiler would consider them to be other variable names. This brings us to another matter about naming variables. Variables can be named anything you like, keeping in mind the following. Variable names Must start with a letter or number (e.g., myNumber, x, 7number, name10). Cannot contain spaces (e.g., my Number) Cannot be the same as a reserved word [these are the keywords used in the programming language (e.g., var, for, function, transform)] cannot be the same as another variable unless it is in a different function (e.g., var x:int = 10; var x: char = 't') Also keep in mind that variable names can make your code more readable and can reduce the need for comments. For example, x = 10; is ambiguous, whereas accountBalance = 10; has more meaning. You will notice the use of capital letters in some of the variable names shown beforehand. This is just one convention of using several words in the one name. The capital makes the variable name more readable as single words are easier to read. A variable name could also be written account_Balance using the underscore to separate words. This is totally a personal preference and makes no difference to the compiler; however, naming conventions* are recommended. For example, if programming in JavaScript, camel casing * For more information about naming conventions, see http://en.wikipedia.org/wiki/ Naming_convention_(programming). 35The Art of Programming Mechanics 10 x y myNamea5.6 y1 isSpinning FIG 1.25 A conceptualization of the memory allocation, which occurs from Listing 1.9.for variable names is recommended with the first letter being in lowercase. Because conventions can vary slightly between languages, it will not be covered in this book. 1.5.4.1 JavaScript Variables Variables in Unity JavaScript usually appear at the top of the code file. Although they could be placed in a variety of locations, the best place is at the top because they are easy to find. We will examine other types of variables in later sections. Consider the script in Listing 1.10. Listing 1.10 JavaScript to change the x axis scale of a gameobject on game start. private var objScaleX: float = 0.5; function Start (){ transform.localScale.x = objScaleX; }A Word about Pragma Strict When you create a new script file in Unity, it will already have a code included. At the very top you will also see: #pragma strict What does this mean? Back in the early days of Unity, a coding convention called dynamic typing was allowed in which you could be quite a lazy programmer and let the compiler make a lot of assumptions about your code and how memory is assigned. For example you could declare a variable with var myNumber; and the compiler would assume the variable type. With #pragma strict , however, the type needs to be declared, for example, var myNumber: float; When you allow the compiler to make assumptions about your code, it can lead to less than optimal performance. A variable might get treated as a float when you only wanted an integer. If you include #pragma strict at the top of your code, the compiler will insist you declare things exactly as they should be. If you move onto iOS programming with Unity you will find that it insists on #pragma strict . 36Holistic Game Development with UnityThe line showing the variable declaration is shown in bold. Note, do not use bold in your own code; this is for illustrative purposes only. The keyword private forces the variable to remain hidden for use inside the JavaScript file in which it is declared. It cannot be seen for use by other code files. You can add many JavaScript files into the same Unity application, and sometimes you will want to be able to share the variable contents between these. In this case, you would declare an exposed variable. In this example, the code would be the same as Listing 1.10, except the private keyword would be removed. When a variable becomes exposed, it also appears in the Inspector of the Unity Editor where values can be entered manually. The difference is illustrated in Figure 1.26. 37The Art of Programming Mechanics FIG 1.26 A private and exposed variable in the Inspector. Unity Hands On JavaScript Variables In this hands-on session, you will create variables of your own to modify the scale of a cube and explore the differences between private and exposed variables. The starting file is supplied on the website for download. Step 1: Download Chapter One/Variables.zip from the website; unzip. Run Unity and open the project by using File > Open Project, select Open Other , and browse for the Variables directory. In the Project, double-click on cubeResize to open the scene. In the Scene you will see a white cube. Attached to the cube is the script from Listing 1.10. The objScaleX variable is private and therefore not visible in the Inspector when the cube is selected. Step 2: Highlight Cube in the Hierarchy and look at the resize script in the Inspector at the very bottom. You will notice that there are no variables visible. Press play to watch the x scale of the cube change. Remember to press stop when finished. Step 3: Double-click on resize.js in the Project to open with a code editor. Note that the objScaleX variable has the keyword private at the beginning of the declaration. Step 4: Remove the private keyword and save the file. Step 5: Highlight Cube in the Hierarchy and look at the resize script in the Inspector at the very bottom. You will notice that the variable has become exposed. Note While saving a script in the external editor, there is no need to close the editor. If you keep it open and just click on the Unity window to switch back, it becomes quicker to edit and reedit the script files. You only need to click back and forth between the Unity and script editor windows to move between programs. Just remember to save the script file before switching back to Unity. Unity will automatically reload any script changes you have made. Note Remember that variable names cannot have spaces. However, because the variable name in this case is constructed with capital letters in it, Unity has made it look like three separate words in the Inspector. objScaleX has become Obj Scale X. This is only for readability purposes. Your variable is still called objScaleX in the script. 38Holistic Game Development with UnityStep 6: In the Inspector, click on the 0.5 value for Obj Scale X. This will put the variable into editing mode. Change the value to 0.1 and press play. The cube will now become very narrow. Step 7: Switch back to the script editor. If you have closed this window, it can be reopened by double-clicking on resize.js in the Project. Change the value of objScaleX to 2.0. Do not forget the semicolon after the value. Step 8: Save the script and switch back to Unity. The Inspector will still have 0.1 as the value. Playing at this point will give the same results as before. The Inspector value of 0.1 will override the value in your code. Step 9: To update the Inspector values to those in the script file, click on the wheel/cog icon, drop down to the very right next to Resize (Script) , and select from the list Reset. Note that the value of objScaleX has been synchronized with the code in the script file. Step 10: Play the application to see the cube resized to double its width. Step 11: Switch back to the script editor. Take a look at where the value of objScaleX is being used. It is changing the X value of the Scale in the Transform component of the GameObject the script is attached to, which in this case is the cube. This linkage is illustrated in Figure 1.27 showing Unity in play mode and the modified X scale in the Inspector. Note When a variable's value is changed in the Inspector, it does not change in the script. Opening the resize.js in the script editor will review the objScaleX variable to still have an initial value of 0.5. Any value you type into the Inspector for a variable will override what you have initialized the variable within the script. This can quickly become confusing when you start changing the variable values in the script and expect them to affect the game when nothing seems to happen. If this occurs, it is most likely because the variable is exposed and has a value set in the Inspector. Note Should a variable remain private or exposed? If you only require the value of the variable inside a single script file, then private is fine, as long as you do not want to be able to change the values of the variables in the Inspector. If at some stage you need to access the value of a variable from another JavaScript file, which is covered later in the book, the variable needs to be exposed. The author's advice is to keep the variable private until absolutely necessary\u2014that way you can mess around with setting its values in the code file and you do not need to keep resetting the script in the Inspector. 39The Art of Programming MechanicsStep 12: In the script, add two more variables for adjusting the Y and Z scales and some code to link these values to the cubes transform component. The full listing of the new code is shown in Listing 1.11. Modifications are shown in bold . Note Do not use bold in your own code. Scripting should have no font effects whatsoever. Any coloration or bolding put in by the editor is for your own readability. It is put in automatically. Make use of this coloration and bolding to check that you have keywords spelled correctly. Listing 1.11 A script to modify x, y, and z scales of a game object. var objScaleX: float = 2.0; var objScaleY: float = 0.2; var objScaleZ: float transform.localScale.z = objScaleZ; } 40Holistic Game Development with Unity FIG 1.27 How script links to the values of components attached to Game Objects?Step 13 : Save the script, return to Unity, and play to see that the changes take effect. Change the values of these scales in the Inspector to experiment with the shape of the cube as the differing scales are changed. Note When you start programming, it is extremely common to make typing errors and to leave out parts of code such as semicolons on the end of lines or missing brackets. If you make a mistake, Unity will detect it and give an error message. It shows up in red at the very bottom of the Unity window, as shown in Figure 1.28. If you get an error, double-click on the red message and Unity will take you to the line in the script editor where the error occurred. From there you can fix it, save the file, and return to Unity to try again. 41The Art of Programming Mechanics FIG 1.28 The Unity error message displayed when a semicolon is missing from a line of code.1.5.5 Operators There are two main types of operators in programming: arithmetic operators perform mathematical operations between variables and values, and relational operators compare variables and values. 1.5.5.1 Arithmetic Operators Basic math operators are shown in Table 1.2. The assignment operator you may be more familiar with is an equal sign, and the multiplication and division operators are a little different to those used in traditional math. Note from the JavaScript examples in Table 1.2 that values are placed into variables using the assignment operator. To use values already stored in a variable, you simply refer to them in the equations using their name. It is exactly the same as high school algebra. More complex equations can also be created, such as x = (y + z) / 3 + 8; where parentheses work for order of precedence as they do in traditional algebra (e.g., the y + z between the parentheses would be calculated first). 1.5.5.2 Relational Operators Unlike arithmetic operators that can calculate a plethora of values, relational operators make comparisons that result in Boolean values (TRUE or FALSE). The most common operators are given in Table 1.3. An important thing to note in Table 1.3 is the use of = versus ==. One equal sign means assign or place a value into a variable, and the double equal sign means compare two values. First-time programmers often get these mixed up but with practice the differences become clear. 42Holistic Game Development with Unity TABL E 1.2 Common Math Operators Used in All Programming Languages Operator Arithmetic PerformedExample in JavaScriptValue of x from Example = Assignment x = 2; 2 + Addition y = 5; x = y + 3;8 - Subtraction y = 15;z = 5; x = z y;10 * Multiplication y = 15;x = x * 3;45 / Division y = 15;z = 5; x = y/z;3 Unity Hands On Operators Step 1: Download Chapter One/Operators.zip from the website, unzip, and open in Unity. In the Project, double-click on dynamicResize to open the scene. In the Scene, you will see a small white sphere. Attached to the sphere is the script called grow.js. Step 2: Double-click on grow.js in the Project to open the script editor. Note that there is already a variable added called growthRate. Modify the script to reflect the one in Listing 1.12. Listing 1.12 Script to grow a game object by 0.05 in scale in each game update. var growthRate: float = 0.05; function Update } 43The Art of Programming Mechanics TABLE 1.3 Common Relational Operators Used in all Programming Languages Operator Arithmetic PerformedExample in JavaScriptValue of x from Example > Greater than y = 5; z = 2; x = y > z;TRUE < Less than y = 10; z = 3; x = y < z;FALSE >= Greater than or equal toy = 4; z = 4; x = z >= y;TRUE <= Less than or equal toy = 3; z = 1; x = z <= y;TRUE == Equal to y = 12; z = 16; x = y == zFALSE != Not equal to y = 12; z = 16; x = y != zTRUEStep 3: Save the script and play in Unity. Note how the sphere grows slowly in size. This will continue until you stop playing. The Update function continues to run over and over again while the application is playing. Functions will be explored in depth later. For now, a simplistic explanation of what is happening is that the growthRate is continually being added to the current value of the localScale, thus updating it. Change the exposed variable of Growth Rate of the Grow script attached to the sphere to 0.005. It will grow more slowly. Step 4: Click on the Sphere in the Hierarchy. Ensure that you can see the Scale part of the Transform component in the Inspector. Now press play and watch as the x, y, and z values of the scale change constantly. Step 5: In the Project, select Create and add a new JavaScript file. Call it revolve. To the file add the code in Listing 1.13. Step 6: This new JavaScript file can be added to the Sphere while the grow script is still attached. Select revolve in the Project and drag and drop it onto the Sphere in the Hierarchy. Select Sphere in the Hierarchy and check the Inspector to see that revolve is attached. If it is not attached, try the drag and drop process again. Step 7: Play the application. The Sphere will resize slowly while moving in a circular motion.Listing 1.13 A script to move a game object in a circle. var radius: float = 5; function Update () { transform.position.x = radius * Mathf.Sin(Time.fixedTime); transform.position.y = radius * Mathf.Cos(Time.fixedTime); } Note The parametric form for a circle is used in Listing 1.13 to move a sphere around the circumference of a circle. These equations are based on modifying the x and y positions with cosine and sine functions and the time. The value of Time.fixedTime is a built-in Unity variable holding the time in seconds since the application started running. It is therefore a dynamic and constantly changing value. Unity also contains functions for all mathematical operations, such as Mathf.Sin() and Mathf.Cos() . 44Holistic Game Development with UnityIt is not expected at this early stage in learning Unity to know this type of information. However, it can be handy to know where to find it, and the most invaluable resource you should have at your disposal is the Unity Scripting Reference. To access this information, while in Unity, select Help > Script Reference from the main menu. In the website that opens, try searching for Mathf and Time to see what is available to you. 1.5.6 Conditional Statements Conditional statements allow the flow of a program to change when certain conditions are met (or not met). They rely on Boolean algebra for making decisions on which way code should flow. Conditional statements can divert code to other parts of code or can make the same statement of code repeat over and over. Conditional statements, which are essentially the programmed form of Boolean algebra, cannot operate on their own. They need constructs around them to assess their value. The simplest form of these is an if-else statement. Used quite a lot in simple artificial intelligence programming, if -else statements make an assessment of a statement and do one thing if that statement is true and another (or nothing) if it is false. The if -else statement was used in the logic circuit application mentioned earlier in the chapter. Think of it as the type of logic you might use in deciding whether or not to wear a raincoat, thus: if it is raining wear a raincoatotherwisedon't wear a raincoat The if -else statement in JavaScript looks like that in Listing 1.14. Listing 1.14 An if-else statement. if (test){ //if the value of test is true do this bit; }else{ //if the value of test is false do this bit; } 45The Art of Programming MechanicsFor example, consider the script in Listing 1.15. This program will print out \"Y is greater than or equal to X\" because the conditional statement inside the parentheses of the if statement will equate to false. If X were given a value of 20, the program would print out \"X is greater than Y\" . Unity Hands On if-else Statements Step 1: Download Chapter One/ifelse.zip from the website, unzip, and open in Unity. In the Project, double-click on falling to open the scene. In the Scene, you will see a small white sphere. Attached to the sphere is the script called fallandgrow.js. Step 2: Play the application. The sphere will appear to fall as its y position is changed constantly by the script. Step 3: Open the fallandGrow.js script and make the changes, as shown in Listing 1.16.Listing 1.15 An example script using an if-else statement. var x:int = 5; var y:int = 10; if(x > y) { print(\"X is greater than Y\"); } else { print(\"Y is greater than or equal to X\"); } Listing 1.16 Making a game object fall to a certain position and then stop. var speed: float = 0.1; var groundLevel: int = -4; function Update () { > { //keep down transform.position.y = transform.position.y - speed; } } 46Holistic Game Development with UnityStep 4: Save and play. Watch as the sphere moves down the screen until it stops. What is occurring is that the y position is constantly being reduced by 0.1. While the value of the y position remains larger than -4, the code inside the if statement will continue to be processed. As point y becomes greater than or equal to the groundLevel , that line of code is skipped and thus the sphere no longer has its y position modified. Step 5: We are now going to modify the code to make the sphere start to grow when it stops moving. We know it will stop moving when the conditional statement in Listing 1.16 becomes false; therefore, by adding some growth code into an else statement we can have it execute, but only when the sphere stops moving. Update the fallandGrow.js script to reflect Listing 1.17. Step 6: Save and play. When the sphere reaches a y position of 4, it will stop moving and start to grow along its x axis. The other programming construct that handles condition statements is a loop. A loop is a segment of code that runs over and over again until an ending condition is met. There are several types of loop constructs, but for now we are going to have a look at just one, the for loop.Listing 1.17 A script to make a game object fall down to a certain height and then grow. var speed: float = 0.1; var growthRate: float = 0.01;var groundLevel: = = speed;}else{transform.localScale.x = + growthRate; } } 47The Art of Programming MechanicsConsider the code in Listing 1.18. The output from this code would be 12345 as the variable i starts with a value of 1, is then printed, has one added to the value, and is printed again five times. Imagine printing out all the numbers between 1 and 100. It would be a lot of code. Enter the for loop. The for loop reduces such repetitive tasks down into a few simple lines. The basic format of a for loop is shown in Listing 1.19. The first part of the for loop declares a variable and gives it an initial value. The second part performs a Boolean test on the value of the variable. If the test comes back true, the loop performs the code inside the parentheses. After the contents of the parentheses are finished, the variable value is updated, and the test is performed again; if true, the inside part runs again. This continues until the test becomes false and the loop quits. A for loop to perform the same action as Listing 1.18 is shown in Listing 1.20.Listing 1.18 JavaScript for printing numbers between 1 and 5. var i = 1; print(i);i = i + 1;print(i);i = i + 1;print(i);i = i + 1;print(i);i = i + 1;print(i); i = i + 1; Listing 1.19 A for loop. for(initialize variable; test value; update value){ //perform some action while the test is true } Listing 1.20 A for loop to print out numbers between 1 and 5. for(var i:int = 1; i <= 9; i++){ print(i); } 48Holistic Game Development with Unity Unity Hands On for Loops Step 1: Download Chapter One/forloop.zip from the website, unzip, and open in Unity. In the Project, double-click on stacked to open the scene. The Scene will appear empty. Attached to the Main Camera is the script called stackedSpheres.js. Play the file. A vertical stack of spheres will appear in the Game. Step 2: Open stackedSpheres.js with the script editor. The code used to create the stack of spheres is inside the Start function. Each sphere Note Listing 1.20 introduces a new type of arithmetic used as a shortcut in programming. Writing i++ is identical to writing i = i + 1 It is a shortcut for adding one to the value of a variable. You can also write i which will take one away from the variable i. More shortcut arithmetic is shown in Table 1.4. 49The Art of Programming Mechanics TABLE 1.4 Shortcut Arithmetic Operations and their Equivalent Longhand Shortcut Longhand Description i++ i = i + 1 Adds one to the value of the variable and replaces the original value with the new one i i = i 1 Takes one away from the value of the variable and replaces the original value with the new one i += 2 i = i + 2 Adds two to the value of the variable and replaces the original value with the new one i = 2 i = i 2 Takes two away from the value of the variable and replaces the original value with the new one i *= 2 i = i * 2 Multiplies the value of the variable by two and replaces the original value with the new one i /= 2 i = i / 2 Divides the value of the variable by two and replaces the original value with the new oneis created individually and its y position is changed by 1 with each new sphere. Step 3: Modify each line like this sphere = GameObject.CreatePrimitive(PrimitiveType. Sphere); to this sphere = GameObject.CreatePrimitive(PrimitiveType. Cube); Step 4: Save the script and replay the application. The stack of spheres will be replaced with a stack of cubes. Step 5: Imagine that you now need to add another 50 cubes on top. This would be a big cut and paste and editing job as the y position would need to be incremented for each new cube. Instead we will replace all the code with just three lines (and a couple of parentheses) that will allow you to make the stack any height you like. Modify stackedSpheres.js to the code shown in Listing 1.21. Note Although the sphere is being changed to a cube, note that the variable called sphere , which is being assigned as the Game Object, does not need to be changed. This is because the name of a variable as far as the compiler is concerned is not important. It is named sphere in this case only for readability. It could have easily been called aPrimitive or aP. Listing 1.21 Creating a stack of cubes with a for loop. function Start () { var Cube); aP.transform.position.y = i; } } Note Although the variable aP in Listing 1.21 does not have the keyword private included, it will not become exposed. Variables declared inside functions are called local variables and are only visible inside the function that created them. 50Holistic Game Development with UnityStep 6: Save and play the application. It will produce the same result as the previous version. Note how the value of the variable i is being used to set the y position of each cube? Just another advantage of using a for loop. Step 7: To put even spaces between each cube, change the line aP.transform.position.y = i; to aP.transform.position.y = i * 2; Step 8: Save and play to see the spaces created between the cubes. Step 9: To create another set of cubes horizontally in the Game, add another for loop as shown in Listing 1.22. Note the use of the new variable j as the x position. Step 10: Save and play. The result will look like that in Figure 1.29. You may need to move the camera around to see all the cubes. Step 11: A few readjustments to this code can give you the power to create a matrix of 9 \u00d7 9 cubes. By placing one for loop inside the other, the nine repetitions of the horizontally placed cubes are compounded by the nine repetitions of the vertical cubes. Modify your code to that in Listing 1.22 A script that creates one column and one row of cubes. function Start () { var aP: GameObject;for(var 2; } } 51The Art of Programming MechanicsListing 1.23. On the first pass of the outer loop, the inner loop runs nine times. Then the outer loop moves onto its second pass. At this time the inner loop runs nine times again. This continues until the outer loop has finished its nine passes. Step 12: Save and play to see the matrix of cubes as shown in Figure 1.30.Listing 1.23 A matrix of cubes created entirely with script. function Start () { var aP: GameObject;var col 2;aP.transform.position.y = row * 2; } } } 52Holistic Game Development with Unity FIG 1.29 A column and row of cubes created entirely with script.1.5.7 Arrays Sometimes a single variable is a less efficient way of storing data and objects. For example, consider changing the color of each of the cubes created in Listing 1.21, not initially at the beginning of the program, but randomly and constantly while it is running. In Listing 1.21, a single variable is used to create nine cubes. However, the variable itself only ever holds one cube at a time. Each time a new cube is created, the variable is overwritten with a new one. This means that after a new cube is created and assigned to aP, it is no longer possible to access the properties of the previous cube. Even the ability to change its position is gone. Therefore, we need the variable aP to hold not just one GameObject, but nine. This can be achieved by making aP into an array as shown in Listing 1.24. In Listing 1.24, the variable aP is no longer a single game object but an array. An array can store anything, including integers, floats, and game objects. Listing 1.24 Storing game objects in an array. function Start () { var aP:Array = new Array(9);for(var i:int = CreatePrimitive(PrimitiveType.Cube); aP[i].transform.position.y = i + 1; } } 53The Art of Programming Mechanics FIG 1.30 Game view of a matrix of cubes created with Listing 1.23.If the original aP was a single storage box in memory, this new aP is a row of storage boxes where each box has its own index number. The first box in the array is indexed with a 0. To refer to each box individually, their names is the reason for changing the for loop in Listing 1.24 to begin counting at 0. The variable i can be used as the array index. The first time the loop runs, aP[i] is equivalent to writing aP[0]. Because the y position of the first cube was initially 1 and i now starts at 0, the position must be set with i + 1 to keep this consistent. Unity Hands On Arrays Step 1: Download Chapter One/Arrays.zip from the website, unzip, and open in Unity. In the Project, double-click on coloredCubes to open the scene. The Scene will appear empty. Attached to the Main Camera is the script called stackedColors.js. Play the file. A vertical stack of colored cubes will appear in the Game as shown in Figure 1.31. Step 2: Open stackedColors.js in the script editor. Note that in the Update() function, only four of the cubes are assigned a color. Also, the array declaration has been moved to the top of the script. This is to make aP a global variable available to all functions, not just Start() . 54Holistic Game Development with Unity FIG 1.31 A stack of colored cubes created entirely with script.Step 3: Modify stackedColors.js to the code shown in Listing 1.25. Step 4: Save and play. The cubes created will have turned red. If you want to keep the cubes red, the code in the Update() function of Listing 1.25 would be better served inside the bottom of Start() as there would be no need to keep setting them to red in each main loop. However, we are now going to modify them to change to random colors.Step 5: Modify the Update() function in your code to that in Listing 1.26. Step 6: Save and play. The cubes will change colors constantly. An explanation of the Color function is given in later sections.Listing 1.25 Setting an array of cubes to the color red. private var aP:Array = new Array(9); function Start (){ for(var i:int 9; i++) { aP[i].GetComponent(Renderer).material.color = Color.red; } } Listing 1.26 Script to change cubes to random colors in each main loop. function Update () { for(var i:int = 0; i Color(Random.Range(0.0,1.0),Random.Range(0.0,1.0),Random.Range(0.0,1.0)); } } 55The Art of Programming Mechanics1.5.8 Objects Objects are complex data types. They consist of a bunch of variables (sometimes called properties ) and functions (sometimes called methods ). In most of the previous examples, you have already worked with objects. A Game Object is an object. A cube is an object. Most of the items you work with when coding that are not integers, floats, strings, or characters are objects. A class defines the data type of an object. Let us assume that we have a simple class called Square. The class definition acts as a template for making many Square objects. Figure 1.32 illustrates how the variables of the class can be set to create differing objects. Each object is called an instance of the class. In this case, setting the variable values for Square allows for a variety of Square objects to be created. So although they all look different, they are still squares and retain the essence of a square, which is to have four equal sides and 90 \u00b0 angles. The functions of an object can be used to set the values of the variables or change the behavior. For example, the Rotate function in the Square class might update the rotation variable and thus change the orientation of the object. Unity Hands On Objects Step 1: Download Chapter One/objects.zip from the website, unzip, and open in Unity. In the Project, double-click on ChangeObjects to open the scene. The Scene will appear empty. Attached to the Main Camera is the script called createObjects.js. Play the file. A capsule will appear in the Game. Step 2: Open createObjects.js in the script editor. Note that gameObj is a private variable created to hold a game object. In the Start() function, it is assigned as a PrimitiveType. Capsule. The capsule is a complex game 56Holistic Game Development with Unity Class Square Variables color rotation size Functions rotatecolor = black rotation = 0 size = 1color = whit e rotation = 0 size = 2color = greyObject s rotation = 45 size = 3 color = blac k rotation = 20 size = 2 FIG 1.32 A Square class and four instances of the class.object where the attached components are also objects. For example, Transform is an object. Position , which is a part of Transform , is also an object.* Visualizations of the Game Object, Transform, and Position classes, along with their locations in the Unity Editor, are shown in Figure 1.33. Step 3: To change the location of the capsule you can access the x, y, and z position coordinates via the Transform component of the Game Object. Modify the script to that in Listing 1.27. Save and play. * Actually, Position is a structure. This is another data type with complex variables and functions. It acts so much like an object that we will just treat it as one rather than complicate matters. On the Website Game Object Definition All of the variables and functions attached to a Game Object are listed in the script reference at http://docs.unity3d.com/ScriptReference/ GameObject.html. 57The Art of Programming Mechanics Game Obje ct Transfor m Position Variables Functions Scale Normalizex: float float z: float ...Variables Functions ... FIG 1.33 The Game object class containing a transform class that contains a position class.Step 4: One of the functions available to the Game Object is AddComponent() . This script performs the same task as selecting the Game Object in the Editor and choosing an item from Component in the main menu. To add a physics component to the Game Object, modify your code to that in Listing 1.28. Save and play. Step 5: The Rigidbody component is used by the physics system. As you play your new script, the capsule will fall due to gravity until it hits the plane in the scene. The collision event will cause the capsule to stop dead in its tracks. If you examine the capsule in the Inspector while the script is playing, you will notice that the capsule has a Collider component. This is used by the physics system to determine the boundary area of the object in order to calculate collisions. You can access the collider and change its values in the script. Modify your script to that in Listing 1.29.Listing 1.27 Changing the location of a game object with script. private var gameObj: GameObject; function Start() { } Note: You can always change the location of a Game Object by typing values into the Transform component in the Inspector, although this cannot be done while the game is playing. That is why scripting is more powerful. Listing 1.28 Adding a rigidbody to a game object using script. private var gameObj : GameObject; function Start() { Development with UnityStep 6: Save and play. We will examine physics in more depth later in the book. For now, just accept that this new code makes the capsule bouncier, and the physics engine will cause it to bounce when it collides with the plane. PhysicsMaterial in Listing 1.29 is another type of object. Note the use of the keyword new as it is being assigned. On this line a new variable called material is being created and assigned a new PhysicsMaterial. The new keyword creates an instance of the object. After an instance is created the values can then be manipulated via referencing the variable to which it has been assigned\u2014in this case, material.Step 7: So far we have modified a game object via a script attached to the camera. Scripts can also be attached directly to a game object. From the main menu select GameObject > 3D Object > Sphere. A sphere will appear in the Scene. Select the sphere in the Hierarchy and press the W key. Use the axes in the Scene to move the sphere above the plane. Step 8: In the Project, select Create > JavaScript. Rename the script spherePhysics , attach it to the sphere by dragging and dropping it from the Project onto the sphere in the Hierarchy, and open it in the script editor. Add the script in Listing 1.30.Listing 1.29 Modifying the physics material of a game object. private var gameObj : GameObject; function PhysicMaterial(); material.bounciness = 1;gameObj.GetComponent.<Collider>().material = material; } Listing 1.30 Script to modify properties of a game object to which it is attached. var myColor: Color = Color.red; function Start(){ this.gameObject.AddComponent.<Rigidbody>(); var material 0.5;this.GetComponent.<Collider>().material = myColor; } 59The Art of Programming MechanicsStep 9: Save and play. Now the script is attached to a game object; it can directly reference the object with the keyword this. There is no need to create the object because it already exists in the scene. Because the variable myColor is exposed, you will be able to change it in the Inspector. Step 10: From the main menu select GameObject > 3D Object > Cube. A cube will appear in the scene. Position it above the plane and to one side of the sphere. Attach the spherePhysics script to the new cube. Step 11: Play. Note that the new cube behaves in the same way as the sphere. This is because the script in spherePhysics applies itself to the object to which it is attached. As a result, the cube turns red and falls with the same physics attributes at the sphere. Generic script like this can be added to any game object. Step 12: Because the myColor variable is exposed, it can be changed in the Inspector before playing. Select the cube from the Hierarchy and change myColor in the Inspector to green. Step 13: Play. Note that the sphere remains red but the cube is now green. Both are using the same script but different versions of it. You could also expose the variable for the bounciness and set it to different values for the sphere and cube in the Hierarchy, as shown in Listing 1.31. 1.6 A Game Art Asset Primer This primer will not teach you how to create game assets. Such topics are books on their own. It will, however, point you in the right direction to get started creating your own assets, as well as where to find already made ones. Listing 1.31 Exposing a variable for bounciness. var myColor: Color = Color.red; var bouncyAmount: float = 0.5; function Start() { this.gameObject.AddComponent.<Rigidbody>(); var material new = material; this.GetComponent.<Renderer>().material.color = myColor; } Note Bounciness in the physics engine is a float that only takes values between 0 and 1 where 0 is not bouncy and 1 is fully bouncy. 60Holistic Game Development with UnityMost importantly, this primer will introduce you to the different types of assets and how to get them into a Unity game. When it comes down to it, there are two types of art assets used in games: 2D and 3D. Two-dimensional art assets are the most used, as everything in the game has a 2D visual element. From trees to buildings, terrain to explosions, and characters to user interfaces they all include 2D art. In addition, normal maps and shading maps are also 2D images. 1.6.1 The Power of Two Rule Since the inception of computer graphics, people have been trying to create superior and higher resolution images. The quality has not been restricted by the ability of the artist to create, but by the computer hardware's ability to process. In combination with computer games is the need to quickly render frame after frame of real-time animation that changes with game flow influenced by user input. Unlike an animated movie in which the contents of each frame are known from the outset, the interactive nature of a computer game means that the artist will never know what will be in any particular frame. The game itself needs to render frames on the fly. This requires a lot of processing power. This is why, over the years, as hardware performance has improved, so too has the quality of game graphics. However, as a game developer you will still want to push the boundaries of quality and knowing a few simple tricks can help you optimize your art assets to get the best out of the graphics processing. One such trick is to follow the power of two rule. Computers continuously process data in cycles in order to push it through the processors, whether it be the central processing unit or, more commonly for graphics, the graphical processing unit. Processors can only handle so much data in one cycle and therefore it is chunked into packages of certain sizes. Earlier in this chapter we examined the most elementary values in computing. They were 0 for on and 1 for off. These values are the basis for binary code that is used to encrypt all values in computer memory. The smallest amount of computer memory is a bit. It can store either a 0 or a 1. If we put two bits together they can store four values: 00, 01, 10, or 11. Three bits can store eight values: 000, 001, 011, 010, 011, 100, 101, or 111. In fact, the number of values that can be stored is 2 to the power of the number of bits or 2 number of bits. Therefore, eight bits (called a byte) can store 2 8 or 256 values. A computer processor has a limited number of bytes it can push through in one cycle. By making an image file a power of two in dimensions, it optimizes the number of cycles required to process it. For example, if an image were nine bytes in size and the processor could process four bytes per cycle, the 61The Art of Programming Mechanicsfirst eight bytes of the image could be processed in two cycles. On the third cycle the ninth byte would be processed. This would mean three whole empty bytes of space wasted during the third cycle. Imagine it as though you have a dishwasher that can hold four plates. You need to wash nine plates. You would do two full cycles and then have only one plate in the third cycle. For the same amount of dishwashing you could have invited another three guests to dinner! This illustration is exacerbated as file sizes become larger. If you sacrifice processing cycles, you will sacrifice quality and speed. Ideally, images should have width and height values that are a power of two, for example, 2, 4, 8, 16, 32, 64, 128, 256, etc. The image does not need to be square; for example, the width could be 16 and the height could be 128. Making an image this size in dimension will lead it to occupy a space in computer memory that is also a power of two in size. A digitized image is not just the size of its width and height, but also its depth\u2014its color depth. The color depth is defined as the number of bits required to store the color values of each pixel. When a pixel is colored according to its red, green, blue, and alpha values that take up 8 bits (1 byte) each, it is said to have a color depth of 32 bits. Therefore, an image that is 16 \u00d7 32 pixels with a color depth of 32 bits is 16,384 bits in total size. This is equal to 214; a power of two! Because computer memory processes in chunks whose sizes are also a power of two, it will result in an optimized use of each processing cycle. But what happens if your texture is not a power of two? Your image will be resized or rescaled. If it is rescaled, the game engine will make it into an image with a power of two width and height closest to that of the original. This means that the original image will be squashed or stretched to fit into the new space. This could result in undesirable distortions in the texture. If the image is resized, the original could be cut off or extra blank space added around the edges in order to make it fit into a power of two texture. Either way, the result could be something that you do not want as it may misalign your UV mapping. Unity Specifics Textures Unity will accept nonpower of two images as textures but it will rescale them. It accepts widths and heights of 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, or 2048 pixels. The majority of image file formats are accepted, including psd, tiff, jpg, tga, png, gif, bmp, iff, and pict. A multilayered psd file created with Photoshop will appear flattened inside the Unity Editor; however, the layers will still be there and editable when reopened in Photoshop. 62Holistic Game Development with Unity Unity Hands On Adding Textures to a Model Step 1: Download Chapter One/Texturing.zip from the website, unzip, and open in Unity. In the Project, double-click on texturedemo to open the scene. The Scene will open with a shaded female model. In the Hierarchy, click on the little triangle next to the word Female to expose the entire mesh hierarchy. You will now see that the submeshes of eyes, face, hair, pants, shoes, and top are listed beneath the parent of Female as shown in Figure 1.34. Step 2: In Project, select Create > Folder and call it Materials. Highlight the Materials folder and select Create > Material from the small drop-down menu. Rename the material to top. Step 3: With top in Project highlighted, at the very top of the Inspector select the Shader drop-down list and click on Standard. The Inspector will reveal the properties of Albedo , Metallic , Normal Map etc. as shown in Figure 1.35. Step 4: The Main Color is a color added to the color of the texture. If you leave it as white it will have no effect. For now leave it as white. In the texture box to the right of Base (RGB) click Select. From the image picker that pops up select the female_top-1_green. For the Normalmap, click on Select for the texture box and pick out female_top-1_normal by double-clicking on it. If the full name of the texture is not displayed beneath it, clicking once on the image will reveal the full name at the bottom of the picker, as shown in Figure 1.36. 63The Art of Programming Mechanics FIG 1.34 Project view showing shaded model and mesh hierarchy.64Holistic Game Development with Unity FIG 1.35 A Standard shader opened in the Inspector. FIG 1.36 Unity's texture picker with image full name selected.Step 5: Drag the top material from Project and drop it onto the top mesh in the Hierarchy. In the Scene and Game, the model will now appear with texturing on the top of the body. Step 6: Repeat the process for the face, hair, pants, and shoes submeshes (not eyes), selecting appropriate Base (RGB) and Normalmaps from the texture picker.Step 7: Create a new material for the eyes. In the Inspector, set the shader for this material to Specular. Select an eye image for the Base (RGB) Gloss (A) texture. The Specular Color property for this shader sets the color that is reflected from the surface on any shiny parts. The shininess value changes the surface value from highly glossy to dull. Add the material to the eyes submesh and change the specular color and shininess values to see their effect.Step 8: To give the ground plane a texture, open a browser window and search Google for seamless grass texture . Switch the search to Images. A seamless texture is one that neatly tiles both horizontally and vertically across a surface where the patterns meet exactly at the seams. Large areas such as terrains use seamless textures as it is less costly than one very large texture. From the search, locate a texture that is a power of two in size (and free to use), as shown in Figure 1.37. Download it to your desktop.Step 9: Drag the image file from your desktop and drop it into the Project. Unity will load it for you automatically. 65The Art of Programming Mechanics FIG 1.37 Grass material.Step 10: Create a new material called grass. Leave the shader as Standard. Drag and drop the grass material onto the ground plane. Select Plane from the Hierarchy and find the grass material in the Inspector. Drag and drop the grass texture onto the Albedo in the Main Maps property, see Figure 1.37. Beneath Main Maps are Tiling values. These set the size and alignment of the texture on the surface. For example, setting Tiling's x to 5 will cause the texture to repeat five times across the surface. The bigger the tiling values, the smaller the tiles. Try setting the Tiling values to see the effect in the Scene. 1.6.2 Using Other People's Art Assets Sometimes it is not worth your time recreating 3D models and textures when they are available on the web. For example, if it will cost you a week's worth of work to create a model that someone is selling on the web for $50, then it is worth purchasing if you can afford it. There are also many free 3D models available for use under a variety of licensing formats. Others are royalty free, which means that you pay for them once and then use them as many times as you like under the terms of the license. There are many online websites for which you can freely sign up and download models for use in your own games. Some of the better ones include the following: The model format used most widely and accepted in game engines is 3Ds. This was the original file format created by Autodesk's 3D Studio DOS release. This format can also be created and modified by Autodesk's 3D Studio Max, Maya, and Blender. Unity Specifics 3D Models Unity's native 3D model format is fbx. This can be created with professional modeling software such as Maya, 3DS Max, and Blender among others. To add a model into your project, simply drag and drop it and any associated textures into the Project. 66Holistic Game Development with Unity Unity Hands On Adding a Model to a Unity Project Step 1: Create an account on TurboSquid by visiting http://turbosquid.com and following the prompts. Step 2: Search on Turbosquid for car or something else if you wish. Ensure that you set the filter to 3D Models and sort by Lower Prices to have the free models appear first. Step 3: Look through all the models and select one you like. Note that the file format type is listed beneath the image of the model. Look for a 3Ds, fbx, or blend file. Download the file to your desktop. Step 4: If the files are zipped, unzip them. Some files will be single mesh files such as a 3Ds; others may have textures with them. Three freely downloaded models and how they unzipped are shown in Figure 1.38: A pig model created with Blender and an asteroid and dinosaur. Step 5: To import the models into Unity, select all the files associated with the model and drag and drop into the Project. If the model contains textures, ensure that you have the model file and the texture file in your selection. If the model and associated files are in a folder, drag the entire folder into Unity. The way they will appear is shown in Figure 1.39. Do not worry if you receive a couple of Unity error messages. Step 6: Using free models is mostly a potluck as to the ones that will work in Unity. Sometimes they will be too big (Unity only allows 65,000 vertices per mesh), inside out, or just missing textures. If the model you get appears this way, go back and find another model. On the Website A Model That Works If you are having difficulty finding a model that works, one can be downloaded from the book website under Chapter One/ tyrannosaurus_rex.zip. 67The Art of Programming Mechanics FIG 1.38 Example 3D model files.Step 7: Once the models are in the Project, find ones with a small cube icon next to them. Drag these into the Hierarchy or Scene to add them into the application. The three models shown in Figure 1.39 are imported into Unity as shown in Figure 1.40. In this case, the Ferrari model was too big and parts of the wheel are missing, the alien model was okay, and the Mini Cooper included a ground plane. Also note that the scaling for each mesh is different. This will be due to the scaling that the original modeler used. Step 8: To resize the models, select them and use the Inspector to change their scale component. Alternatively, press the \"R\" key and use the resizing axes in the Scene. If you get a model without any texturing, but have an image for the texture, create your own material, select the texture for it, and apply the material to the mesh. 68Holistic Game Development with Unity FIG 1.39 A view of the project after importing three downloaded models. FIG 1.40 Models imported and viewed in Unity.1.7 Summary Game art and game programming are two sides of the same coin. This chapter examined the complementary nature that both art and programming play and suggested that anyone can learn to program and anyone can understand the logic behind art. While you may not become fluent in both art and programming, you will gain knowledge, and appreciation for both domains is important for working in the games industry. In addition, it is absolutely necessary for artists working in the area to appreciate the technical limitations placed on their artwork by game engines and computer hardware. Some simple planning ahead and modeling within the restrictions of a games platform can eliminate a lot of future time, money, and heartache.Watch out for Unwanted Animations When an external model is brought into Unity an Animator component will be added to it whether needed or not. To remove it, select the model in the Hierarchy and remove the Animator as shown in Figure 1.41. This component if left on the model can cause unwanted behavior in the game object on play. 69The Art of Programming Mechanics FIG 1.41 An unwanted Animator component attached to an imported "}