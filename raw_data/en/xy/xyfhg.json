{"title": "PDF", "author": "PDF", "url": "https://www.ece.ucf.edu/seniordesign/sp2018su2018/g06/Documents/G06_SD1_Documentation.pdf", "hostname": "PDF", "description": "PDF", "sitename": "PDF", "date": "PDF", "cleaned_text": "A Smart Medicine Dispenser that Dispenses Medicine on Fixed -Schedule or As -Needed Basis, for Individual or Family use Department of Electrical Engineering and Computer Science University of Central Florida Dr. Samuel Richie and Dr. Lei Wei Spring 2018 Senior Design 1 Document Group 6 Ivan Alvarez Computer & Electrical ialvarez5@knights.ucf.edu Matthew Hoover Computer Engineer matthewhoover@knights.ucf.edu Sakeenah Khan Electrical Engineer sakeenahkhan@knights.ucf.edu Gustavo Morales Electrical Engineer gmoralesburbano@knights.ucf.edu ii i Table of Contents List of Figures ................................ ................................ ................................ .................... vi List of Executive Project Description 2.1 Motivations ................................ ................................ 5 3.0 Related Standards and Constraints ................ 6 3.1 Project Constraints Parts, Component, and Testing 3.2.5 Environmental Constraints ................................ Constraints and Legal Constraints and Cultural Constraints ................................ 21 3.2.9 Political Constraints or 3.2.10 Security Constraints ................................ ................................ ....................... 25 ii 3.2.11 Performance, Functionality, Usability, Reliability and Availability ............. 27 4.0 Research and Background Information ................................ 50 4.9 Communication Protocols ................................ ................................ ....................... 51 iii 5.0 Project Hardware and Software Design Details ................................ .......................... 54 5.1 Hardware Design ................................ Design Adding/Removing a ...... 81 5.2.7 Prescription Parameters and Medication Requests ................................ ................................ 5.2.9 Rescheduling Doses ................................ ................................ ....................... events in Schedule & Summary Reports ................................ ...... 84 6.0 Prototype Construction ................................ ................................ ............................... 85 iv 6.1 Parts Acquisition and Bill of Materials ................................ ................................ ... 85 6.2 Printed Circuit Power Administrative Content v 8.1 Milestone Discussion ................................ 8.2 Division of Labor ................................ ................................ 117 8.3 Budget 127 vi List Figure 1. House of Quality ................................ ................................ ................................ .. 5 Figure 2. Cooling fan system with no maintenance ................................ .......................... 14 Figure 3. Wi -Fi module ESP8266 ................................ ................................ ..................... 14 Figure 4. Precise medication window scheme used by e -pill, LLC ................................ .. 29 Figure 5. PIC32MZ DA Family Block Diagram ................................ .............................. 35 Figure 6. J15 40 -pin expansion ................................ ................................ ......................... 37 Figure 7. MPLAB Harmony generic block diagram ................................ ........................ 38 Figure 8. MPLAB Harmony Middleware diagram ................................ ........................... 39 Figure 9. MPLAB Harmony System Service example ................................ ..................... 39 Figure 10. Basic 24 -bit color frame buffer; Total size: 1.099MB ................................ .... Total size: 0.732 MB ................................ ............. Figure -color lookup table; Total size: 0.366 MB touchscreen's layers and electrodes ................................ ................. 43 Figure 14. Measuring the Y component of a touch ................................ .......................... 44 Figure 15. Filtered full wave rectifier ................................ ................................ ............... 50 Figure 16. SPI communication using multiple slaves connected in pa rallel .................... 51 Figure 17. UART communication connections ................................ ................................ 52 Figure 18. Transfer of data packets using UART communication ................................ ... 52 Figure 19. I2C communication connections using multiple masters and multiple slaves 53 Figure 20. Data message organization for I2C communication ................................ ....... 53 Figure 21. Hardware block diagram with components assigned to team members .......... 55 Figure 22. Dispenser enclosure ................................ ................................ ......................... 56 Figure 23. Plastic tube used for medication storage ................................ ......................... 57 Figure 24. CC3220 LaunchPad EVM Overview ................................ .............................. 60 vii Figure 25. Power supply connections for touchscreen display ................................ ......... 61 Figure 26. Pic ture of R307 fingerprint module ................................ ................................ . 62 Figure 27. Exterior interface of the R307 fingerprint module ................................ .......... 63 Figure 28. Circuit diagram for the R307 fingerprint module ................................ ............ 63 Figure 29. Servo motor with respective connection 64 Figure 30. Servo motor schematics ................................ ................................ Figure 31. Connection description for ........................... 66 Figure 32. Speaker schematic ................................ ................................ ........................... 67 Figure 33. 3 -pin DC power barrel connector ................................ ................................ .... 68 Figure 34. Basic connections for fixed -voltage volta ge regulator ................................ .... 69 Figure 35. Basic current limiting circuit ................................ ................................ ........... 70 Figure 36. PIC32MZ DA power supply and ground connections ................................ .... 71 Figure 37. PIC32MZ DA pin connections for MCLR and PGECx/PGEDx .................... 71 Figure 38. Main program loop ................................ ................................ 72 Figure 39. Touch system ................................ Figure 40. Page system ................................ 73 Figure 41. Time Event system ................................ ................................ .......................... 74 Figure 42. Example page code ................................ ................................ .......................... 74 Figure 43. Data package format of R307 fingerprint module ................................ ........... 78 Figure 44. Schedule Selection Screen ................................ ................................ ............... 82 Figure 45. Sample prescription Figure 46. Innolux AT070TN94 ................................ ................................ Figure 47. Medication containers according to FDA ................................ ........................ 91 Figure 48. Solde r accidentally bridging pins ................................ ................................ .... 92 Figure 49. Breadboard of the first test of servo interconnected with a fingerprint ........... 94 viii Figure 50. C onnection testing procedures ................................ ................................ ........ 96 Figure 51. Sense on Power Jumper ................................ ................................ ................. 106 Figure 52. UART Routed to USB COM Port ................................ ................................ . 107 Figure 53. Board modified for Antenna Connections ................................ ..................... 107 Figure 54. Power by Battery Jumper Settings ................................ ................................ 111 Figure 55. Power by USB Jumper Settings ................................ ................................ .... 112 Figure 56. Onboard Antenna ................................ ................................ 113 Figure 57. External Antenna Connections ................................ ................................ ...... 113 Figure 58. Division of labor ................................ ................................ ............................ 118 ix List of Tables Table 1. Fingerprint re ader connections on Arduino ................................ ........................ 15 Table 2. Distributio n of the connection on servo ................................ .............................. 15 Table 3. T ypical Operation Conditions 43 Table 4. Timing values ................................ ................................ ................................ ..... 58 Table 5. Pin settings for touchscreen measuring ................................ .............................. 58 Table 6. Pin Assignment ................................ ................................ ................................ ... 61 Table 7. R307 Fingerprint Module Specifications and Ratings ................................ ........ 62 Table 8. Servos classified by price. ................................ ................................ .................. 65 Table 9. Speaker modules according to prices. ................................ ................................ . 66 Table 10. Power ratings for various hardware components ................................ .............. 68 Table 11. Electrical Characteristics LM78XX ................................ 69 Table 12. Electrical Characteristics REG1117A ................................ .............................. 69 Table 13. R307 Package Formats for Fingerprint Processing Instructions ...................... 79 Table 14. R307 Package Formats for System -related Instructions ................................ ... 81 Table 15. Parts prices for final product ................................ ................................ ............. 85 Table 16. Designing companies Quote ................................ ................................ ............. 86 Table 17. Products for breadboard testing ................................ ................................ ........ 86 Table 18. Homemade PCB manufacture products ................................ ............................ 88 Table 19. display option according to prices. ................................ ................................ ... 90 Table 20. Example unit test cases related to touch sensing ................................ .............. 98 Table 21. Example integration test cases related to page interaction ............................... 99 Table 22. Example system test cases ................................ ................................ .............. 100 Table 23. Test cases relating to electrical properties of the touchscreen ........................ 101 Table 24. Test cases relating to the software performance of the touchscreen ............... 102 x Table 25. Test cases relating to the LCD ................................ ................................ ........ 104 Table 26. Jumper Setting for CC33220 Launchpad Power ................................ ............ 105 Table 27. Sense on Power ................................ ................................ 106 Table 28. Push -Button Definitions 110 Table 29. LED Indicators 111 Table 30. Milestone chart ................................ ................................ ............................... 116 Table 31. Investment done per member ................................ ................................ .......... 119 1 1.0 Executive Summary For people with illness and health complications, it can be difficult to keep track of different medicines and each medicine's dosing schedule. It is important to follow the schedu le carefully to avoid an overdose or missing a dose. It can be easy to mix up medications and consume the wrong medication as well. In addition, it is possible for prescription medicines to be consumed by the wrong person, especially when they're stored un protected in a home medicine cabinet. Our solution to these issues is the Medspencer, a device that dispenses the right medicines to the appropriate person at the correct time. Our device will also record the patient's compliance or noncompliance with taki ng their medicine and relay it to the health care provider, so that they can better advise and prescribe to the patient. The main goal of this project is to accurately schedule and track multiple individual users' medicines and dispense a single dose to a user at the appropriate times. The Medspencer would be implemented in the household, for use by the family. The goals include: (1) to help patients stick to their medicine schedules, so they don't miss a dose or mix up medicines; (2) to keep medicines secu re so that patients cannot overdose, and the wrong person cannot take the medicine; and (3) to record patients' compliance/noncompliance and inform the health care provider. The features of the Medspencer are described as follows. Each user is programmed i nto the Medspencer, and they can access the Medspencer by identifying themselves with a fingerprint scan. Prescription drugs can be added to the dispenser into medicine vials (added by the administrator) and can only be dispensed to the user they were pres cribed to. Each medicine vial is identified by its NDC number (medicine type), patient name, prescriber information, and schedule type ('fixed schedule' vs 'as needed'). The Medspencer will notify a user when it is time to take their medicine. Users may al so request 'as needed' medicines, in which case the Medspencer will check if enough time has elapsed since the last dose and whether it has negative reactions with other medicines; then it will decide whether to dispense the medicine. The Medspencer record s when a user takes or misses a dose. If a dose is missed, the Medspencer will either reschedule or skip the dose, depending on the medicine's schedule type. Every two weeks, the Medspencer sends a summary report on the patient's medication compliance to t he administrator and health care provider. If any medicines are running low or empty, the Medspencer will notify the administrator. The administrator can be a caretaker or head -of-household, and is responsible for putting medicines into the Medspencer, inp utting prescription information (such as schedules, prescribers, etc), and adding users and fingerprint identification. Only the administrator can open the device and access (add/remove) medicines, or add/adjust schedules, prescriptions, and user informati on. The Medspencer is an excellent method to aid patients and improve their medicine compliance, as it takes care of organizing medications, scheduling them, and reminding the patient. It is a good alternative to medication trays that must be sorted by the patient and allow for human error. 2 2.0 Project Description This section details the motivations, goals, and objectives for our senior design project. The project requirement specifications will detail the necessary requirements to feasibly complete the se t objectives. 2.1 Motivations and Goals As this is a senior design project, our first motivation for the project is to demonstrate and apply the knowledge we have learned through attending the College of Engineering and Computer Science at the University o f Central Florida. Completing this project will allow us to develop professionally and learn how to properly plan, manage, and execute a project while working in a team. To demonstrate our knowledge, the team decided to create the Medspencer, an automated medicine dispenser. The motivation for the Medspencer is to increase medication adherence in patients with multiple prescription medications and schedules. Medication nonadherence, or noncompliance, is a serious issue and limits the effectiveness of healt h care services and prescribed medications. According to the World Health Organization's 2003 report on medication adherence, about 50% of patients with chronic illnesses do not t ake medications as prescribed [73 ]. Medication nonadherence has serious healt h consequences. The implications of medication nonadherence include decreased quality of life, poorly man aged symptoms, and even death [22 , 63, 87]. In addition, nonadherence costs the health care system over $300 billion a year due to additional doctor visits, emergency department visits, and hospitalizations. The costs associated with nonadherence comprise up to 10% of total health care costs [ 63, 87 ]. This problem has become even more serious over the years, as doctors and pharmacists develop and prescri be increasingly complex and potent medication regimens. Research shows that in 2016, the age-adjusted rate of deaths due to overdose in the United States increased to over three times the rate in 1999 [ 48]. If patients are to become healthy and obtain the maximum benefit from health care services and prescriptions, then they must comply with their prescribed medication regimens. Increased support for patients and consideration of factors that affect medication compliance may help patients stick to their me dication regimen. Medication adherence is associated with many factors, including social and economic, health care system related, patient related, condition related, and therapy related factors [ 73, 87]. Some of the specific factors that the Medspencer wi ll attempt to target and alleviate are complexity of the medication regimen, duration of therapy, frequent prescription changes, poor health literacy, and the patient -provider relationship [ 87]. Our team's motivation and main goal for this project is to h elp patients keep to their strict medication regimens and show higher medication compliance. By creating a household appliance that supports the patient's compliance, the patient can become more independent and will not have to rely on a caretaker to watch them or remind them all the time. 3 2.2 Objectives For the Medspencer project, the main goal and objective is to increase medication compliance in patients. This goal can be broken down into several specific objectives that contribute to the main goal. Fir st, we want to prevent patients from missing a dose or taking a dose at the wrong time. These are easy mistakes to make, especially for complex medication regimens or in the case of frequent prescription changes. To achieve this objective, the Medspencer w ill schedule doses and notify the patient when it is time to take the dose. In the case of a missed dose, the Medspencer will reschedule the dose. Another objective of the Medspencer is to keep patients from overdosing, whether intentionally or by accident . We also wish to prevent people from consuming other patients' prescriptions. Preventing these two events is especially important when it comes to strong prescription medications, such as opioids. To this end, the Medspencer shall be a secure device that can only be opened by an administrator/caretaker. Medications will only be dispensed to a patient if it is time for the next dose (for fixed schedule prescriptions), or if enough time has elapsed since the last dose (for as needed prescriptions). To access the device, a fingerprint scan is required. This ensures that the correct patient is getting the prescription. An additional objective is to strengthen the patient -provider relationship, by informing the primary care physician (PCP) on the patient's medic ation compliance. Accomplishing this will allow the PCP to obtain a better understanding of the patient's health conditions. This will ensure that the PCP can accurately diagnose health issues, prescribe medications and therapy, and advise the patient. By accomplishing these specific objectives, we believe that the Medspencer will support the patient and help them stick to their medication regimen. Another objective of our team is to reduce the monetary and power costs associated with using an automated med ication dispenser. The automated medication dispensers for the household that currently exist on the market are quite expensive, making them less feasible options for many patients. Thus, our team aims to reduce the cost of research and development so that the final cost for the consumer will be reasonable and less than the competing products on the market. We will also try to reduce the power costs associated with out device, as that is an additional cost to the consumer. To save power, we will put the dev ice in sleep mode until an event occurs (such as a fixed -schedule dose notification, or an as -needed dose request). We also aim to make the Medspencer as user -friendly as possible. We will utilize a touchscreen display so the user can interface and intera ct with the Medspencer, and we will keep the interactions simple. When it is time for a fixed -schedule dose, the Medspencer will notify the patient, and all the patient must do is scan their finger and the medicine will be dispensed. For an as -needed medic ine request, the patient can scan their finger, then select from the available medicines using the touchscreen. We will also make the set -up for the Medspencer as simple as possible. When entering new medicines or new patients, we will provide a template w ith different sections to parameterize the new addition. The template will include preset options for the medicine type, schedule type, and so on. 4 2.3 Requirements Specification \"The system\" refers to the Medspencer in this case. Overview The system will have cylinders that contain the medicine The system will have motors that dispense the appropriate medicine The system will be expandable to 30 medicine cylinders The system will determine patients' identity via a fingerprint scanner The system will aler t patients to schedule via a speaker The system will connect to the Internet over Wi-Fi Physical The system will be no larger than 2 ft. x 1 ft. x 1 ft. The system will be no heavier than 20 lbs. The product's cost will not exceed $2000 The system will have a wall plug adapter The system will rectify and step down power to necessary voltages Data The system must store the following data for each medicine: o Medicine type o Medicine time restrictions o Prescribing doctors' email addresses The system must store the following data for each patient: o Patients' name o Patients' dose schedules The system will make records of medicine dispenses and will be able to send them via email to the appropriate doctor The system will support the following administrator interacti ons: o Add/edit/remove medicine o Add/edit/remove patient o Make changes to patients' dose schedules The system will support the following user interactions: o Dispense medicine at proper time o Request \"take anytime\" medicine Display and Touchscreen The system will have a screen at least 7\" diagonal The system will support the following human interfaces: o Touch screen menu navigation o Touch screen keyboard 5 2.4 House of Quality Marketing Quality Ease of Use Pill Capacity Security Installation Time Cost Engineering + + + + - - Engineering Targets Quality + Power Usage - < 500 W Screen Size + 7\" WVGA Memory Size + > 1 MB Dimensions - < 2' x 1' x 1' Cost - < $2000 Legend Positive Correlation Negative Correlation Strong Positive Correlation Strong Negative Correlation Figure 1. House of Quality 6 3.0 Related Standards and Constraints This section outlines the official standards and design constraints that are related to our project, the Medspencer. While some categories do not apply to this project very much, there are a large number of standards that apply to any piece of medical hard ware, as well as technological restrictions, and legal requirements. 3.1 Project Related Stands There are several standards that we must consider as we plan out this project. Standards provide the guidelines and protocols that must be followed when managi ng projects and creating/implementing products. The standards must be followed during the design process to avoid scrutiny or liabilities. The standards that we have considered include IEEE standards, FDA standards, Soldering standards, and the standards o f programming languages we may use. 3.1.1 IEEE Standards The Institute of Electrical and Electronics Engineers (IEEE) has the duty to regulate and standardize many proposal and laws for better performance and usage of technology within the technology industry. From the different sorts of connections that every domestic or industrial project should use , to the proper documentation of tools and language used and interconnection between systems, IEEE gives us the easiest and most effective way to perform any engineering duty . The following IEEE standards were considered relevant for the project. IEEE 1588 Precision time Protocol (PTP) synchr onizes clocks in a Local Area Network (LAN) . Its accuracy is adjusted to microseconds making it useful for control sy stems and measures [36]. This is useful in our project due to the fact that MedSpencer will be connected to a Wi-Fi module to for constantly update the clock to alert the patient about his or her medication . The dispenser compares the current time with the time saved in the patient's profile for the scheduled medication. IEEE P1619 Security in Storage Working Group (SISWG) [50] refers to the protection of stored data and its corresponding cryptographic key management . This standard talks about how the infor mation within should be encrypted and decrypted for its use and not so easy to decode for wrong purposes . There was a discussion about how the data will be managed , by narrow -block or wide -block, resulting the narrow -block the most effective way to operate information . IEEE 830 software requirement specification [ 34] states all the requirement needed for a project or product that uses a customized software . This standard establishes some agreements between the customers and developers in order to fulfill th e criteria and avoid redesign . As our project will require its own software , the computer engineer in charge will meet with the sponsor to discuss further details about the limitations and advantages of the software to -be. 7 IEEE 11073 Medical Health device communication standard enables the communication between a health -care device with an external computer . It provides detailed information of the client's health or device's operational data [55]. This standard is extremely useful for the MedSpencer due to it will generate weekly reports that will be sent to the authorized doctor informing the patient's compliance . Also, let us remember that there will be an administrator that will take care of the device maintenance , when the medications are not enough for the rest of the month or to add or remove patients from the device memory . This administrator will also receive alerts concerning the device condition. IEEE 829 Software test documentation [ 51] states the procedure for testing not only the software but th e system too through a system of eight stages , each one of these will create its own document that goes from master test plan to master test report . [51] The test plan will be carried away by our computer engineering team . They better than anyone knows how the software will run . They created the flowchart that also gives a rough scope of the system's behavior . IEEE 1016 Software Design Description [ 52] is a document that describes the software behavior and features in order to inform the software developer for better understanding . The MedSpencer will require a very detailed description because of its various inputs and cases . The test that will be run on this software will be done according to the desc ription document created before hand . IEEE 1149 .1 Joint T est Action Group (JTAG) [ 54] is the standard that is defined for verification of proper connectivity within the printed board circuit (PCB) . It plays a complementary role with the digital simulation . It implements a serial communication interface , that con nects to an on -board test access port that runs through a series of test registers to present chip logic levels and device capabilities . This standard is not only useful but fundamental , because is the main test of the main board after the simulation has b een run and approved . This standard will be implemented to each individual PCB purchased . 3.1.2 FDA Standards In the Food and Drug Administration, states that all Medical devices should be designed and manufactured in such a way that, when used under the c onditions and for the purposes intended and, where applicable, by virtue of the technical knowledge, experience, education or training of intended users, they will not compromise the clinical condition or the safety of patients, or the safety and health of users or, where applicable, other persons, provided that any risks which may be associated with their use constitute acceptable risks when weighed against the benefits to the patient and are compatible with a high level of protection of health and safety [80]. The medical devices has be effective and have high performance standards. Each device must be designed with a purpose to be a clinically effective when it produces the effect intended by the manufacturer relative to the medical condition. For example , if a device is intended for pain relief, one expects the device to actually relieve pain and would also expect the manufacturer to possess objective, scientific evidence, such as clinical test results, that the device does in fact relieve pain. 8 Clinical effectiveness is a good indicator of device performance. Performance, however, may include technical functions in addition to clinical effectiveness. For example, an alarm feature may not directly contribute to clinical effectiveness but would ser ve other useful purposes. Furthermore, it is easier to measure objectively and quantify performance than clinical effectiveness. Performance is closely linked to safety. For example, a blood collection syringe with a blunt needle would perform badly for c ollecting blood and could inflict injury. A patient monitor that does not perform well could pose serious clinical safety problems to the patient. Thus, the safety and performance of medical devices are no rmally considered together [ 27]. In Food and Drug A dministration standard, an average phase in the life span of a medical device are conception and development, manufacture, packaging and labeling, advertising, sale, use, and disposal. The section for this project is in conception and development, manufact ure, packaging and labeling which is called Manufacturer. In the manufacturer stage, the creator of the device, must ensure that it is manufactured to meet or exceed the required standards of safety and performance. This includes the three phases (design/ development/testing, manufacturing, packaging and labelling) that lead to a product being ready for the market. The term \"user error\" is defined as an act that has a different result than that intended by the manufacturer or expected by the operator. User error may result from a mismatch between variables, for example the operator, device, task, or environment. By incorporating human factor engineering principles in design, and appropriate training for users, the risk of user errors can be minimized. The ke y advantage regarding quality systems is that they represent a preventive approach to assuring medical device quality versus the previous reactive approach by inspection and rejection at the end of the manufacturing line. Prevention has been proven to be m ore efficient and cost effective in controlling manufacturing processes and maintaining medical device quality. It is important to note that since the majority of medical devices are in the medium - to low -risk classes, their compliance with regulations oft en depends upon the declarations of manufacturers, thus the question of quality assurance naturally arises. This is why it is critical for manufacturers to conform with quality system standards and for this conformity to be subject to periodic audit by gov ernm ental or third party agencies. The Food and Drug Administration has developed a guidance to provide the Agency's initial thinking on technical considerations specific to devices using additive manufacturing, the broad category of manufacturing encompa ssing 3 -dimensional (3D) printing. Additive manufacturing (AM) is a process that builds an object by sequentially building 2 -dimensional (2D) layers and joining each to the layer below, allowing device manufacturers to rapidly produce alternative designs w ithout the need for retooling and to create complex devices built as a single piece. Rapid technological advancements and increased availability of AM fabrication equipment are encouraging increased investment in the technology and its increased use by the medical device industry. The purpose of this guidance is to outline technical considerations associated with AM processes, and 9 recommendations for testing and characterization for devices that include at least one additively manufactured component or addi tively fabricated step. From the research, t his guidance is broadly organized into two topic areas: Design and Manufacturing Considerations (Section V) and Device Testing Considerations (Section VI). The Design and Manufacturing Considerations section prov ides technical considerations that should be addressed as part of fulfilling Quality System (QS) requirements for your device, as determined by the regulatory classification of your device and/or regulation to which your device is subject, if applicable. W hile this guidance includes manufacturing considerations, it is not intended to comprehensively address all considerations or regulatory requirements to establish a quality system for the manufacturing of your device. This guidance focus on five broad the mes: (1) materials; (2) design, printing, and post - printing validation; (3) printing characteristics and parameters; (4) physical and mechanical assessment of final devices; and (5) biological considerations of final devices, including cleaning, sterility, and biocompatibility. A variety of different types of materials can be used in additive manufacturing [27 ]. From the research found to patient a medical device for future expansion , it was found that there are multiple view to be consider for standard -sized devices for example an interacting design models often made by altering the features of a standard sized device for each patient within a pre -determined range of device designs and size limits. This is typically accomplished through the use of anatomica l matching or design manipulation software that may be developed specifically for the AM device, or through other third party software. Patient -matching may also be accomplished by manual methods using specific measurements on radiographs or key anatomic l andmark measurements. Any software or procedure used to make modifications to the device design based on clinical input should include internal checks that prevent the operator from exceeding the pre -established device specifications documented in the devi ce master record. We recommend that the design manipulation software or procedure used to make modifications to the device design identify the iteration of the design being changed by the operator. In addition, because this is a medical device, cybersecuri ty and personally identifiable information so the device in to properly manage and care of personally identifiable information (PII) and protected health information (PHI) is essential in any clinical application. More information is found in protecting PI I and PHI, please refer to the HHS Guidance on Significant Aspects of the Privacy Rule. And the Food and Drug Administration include interactive steps in their patient matching workflow be familiar with implementing the FDA's Guidance on the \"Content of Pr emarket Submissions for Management of Cybersecurity in Medical Devices\" [ 77] 3.1.3 Soldering Standards and Safety The Institute for Printed Circuits (IPC) , has some standards to follow regarding the proper soldering , wiring and design of electronic circui ts. As there are many standards to take in consideration, this section will only name the most important considered for this project . 10 As stated in standard IEEE 1149.1 Joint Test Action Group (JTAG), the standard defined for verification of proper connecti vity within the printed board circuit, there comes the IPC standards that are not only limited to soldering but also for measurements, stripping tools, sorts of wire used for specific tasks and the proper way to run some test considering every aspect in or der to ensure the perfect functionality of the printed board. IPC-2221 Generic Standard on Printed Board Design : [10] This standard considers the generic requirements for the organic boards and its interconnect ability with inorganic materials . The requirements established in this standard are for design and how to connect when there are different components and materials in order to achieve the physical and/or electronic function . This standard is very specific with the terms in which the instr uction for either user or supplier SHALL follow and which ones recommend to follow. IPC-A-600F Acceptability of Printed Boards : [8] this is a documentation that only states the ways in which the board should look in order to be considered as acceptable . In the not so often case that the requirements does not meet the board 's performance there are protocols and documents to follow. According to this standard the characteristics can be divided into two groups : externally observable where all features and int ernal phenomena can be seen from the exterior ; and internally observable where the imperfection within the board need to be seen by microsectioning . During evaluations the illumination should be precise so it lights the area of interest , without being shad owed by any component . IPC J -STD -001 Requirements for Soldered Electronic Assemblies : [12] the document describes requirement to manufacture soldered equipment . It gives a controlled methodology to ensure the good quality of work during the manufacture pro cess. This document classifies the finished product according to complexity , producibility, performance and verification : general electronic products, dedicated service electronic product, and high performance electronic products . IPC-A-630 Acceptability Standard for Manufacture , Inspection, and Testing of Electronic Enclosures : [9] Regarding the enclosure of the project , this standard sets the requirements for the manufacture, inspection and test of it . For purpose of this standard, the enclosure is defin ed as a box , a drawer, or a cabinet forming a top level system assembly. It includes the mechanical parts to assemble a finished system, and the finished system must be made of modular components for the an easy replacement. In a similar way as the J-standard, this standard classifies the end products according to its producibility, complexity and performance requirement into the general, dedicated service and high performance electronic products. IPC-4101C Specification for base materials for rigid and multilayer printer boards : [13] this document specifies the requirement for the materials needed in order to be used in the 11 rigid or multilayer printed boards . According to this document there are two kinds of base materials : the laminate base material (L) and the Prepreg base material (P). IPC 9701A Performance Test Methods , and Qualification Requirements for Surface Mount Solder Attachments : [11] this document establishes the test methods to evaluate the performance of the soldered mount of the electr onic assemblies . This test also provide an approach of the equipment's behavior under usage environment. This document has the purpose to create standardized methods , and reports in order to ensure and give the confidence of optimal performance of electro nic assemblies. IPC D 620 Design and Critical Process Requirements for Cable and Wiring Harnesses : [6] This document provides design, critical process requirements and technical scope that have been removed from the acceptance standards for cable and wire -harness assemblies. This document is intent for mechanical and assembly engineers that will need to consider the different cables and wires to accomplish a specific task. This standard is important for our project when building the bread and in case of har d-wire two ports of the final PCB. As many components comes with a built -in wire connector, we need to consider if that wire is specific for voltage purposes. Let us remember than most wires comes with different resistance that can affect the project funct ionality. IPC 7711B/7721B Rework, Modification and Repair of Electronic Assemblies : [7] this documents talks about the repairing procedure for integrated circuits. This version of standard includes a coverage for process that lead is not present and guidel ines for repair operations. This document goes from guidelines, tools, procedures and methods for the repair and restoration of electronic products. Although we as a group are not go ing to repair the device, we must build it repairable so the administrator can give proper maintenance and it must be easy to operate. 3.2 Design Constraints Several realistic constraints limit and guide our project design. These design constraints account for not only the identified requirement specifications, but also several outside factors. These outside factors include economic constraints; time constraint s; manufacturability constraints; social constraints; political and parts, components, and testing constr aints. 3.2.1 Economic Constraints The budget cost of constructing the Medspencer will be split evenly among the team members. The total cost amount to design and produce the Medspencer is predicted to be around $300 -400. This amount includes all the compo nents that will be incorporated into the final Medspencer product, such as the PIC32MZ microcontroller, the PCB, Wi-Fi module, fingerprint scanner, touchscreen display, servomotors, control unit for the 12 servomotors, wiring and electrical components, and so on. The predicted cost also includes the research and development costs, which include the development board for the PIC32MZ, a breadboard, wires, and other electrical components. The team will keep receipts for all purchased materials, add up the costs, and then divide the costs so that all members contribute equally. Since there is no sponsor for this project, our budget is limited by the funds that each team member can contribute. Because of this, we will strive to be as economically frugal as possible. Regarding the customer costs, our team hopes to provide an effective product for less than current products on the market. The Livi Automated Medication Dispenser is the most advanced home medicine dispenser that we found on the market and is the only one that automatically sorts and dispenses medicines, so it does not require pre -sorting of medicines into trays or cups. The Livi costs $1999 to buy [60]. If we manage to build the Medspencer using $300, then potentially the Medspencer could be marketed at $ 600. This would provide a good profit margin of 100%. $600 is a comparable price to some other medicine dispensers on the market and significantly less than the Livi, and still allows us to develop a device with enhanced performance and added features (as compared to the current dispensers on the market). The team shall attempt to keep costs as low as possible, so no waste is incurred. To this end, the team shall carefully design the circuit connections and test the hardware components and connections appr opriately. This way, hopefully parts will not be damaged. If parts are damaged or broken, we may need to repurchase them, which will incur additional costs. The PCB will be designed with great attention to detail, in the hopes that we do not have to redesi gn and re -order a PCB. By paying attention to detail and testing our designs by simulation and physical testing, hopefully we can keep the total costs for the Medspencer low. 3.2.2 Time Constraints Because this design project is a Senior Design Project, ti me is limited to the two semesters given to complete the project. The first semester involves designing the Senior Design project and writing this Senior Design 1 Document. The second semester involves implementing the project design and creating a working device. Two months (March and April) are allotted to conduct the necessary research, design the project, and plan the execution, which includes prototyping the Medspencer and building the finished product. Researching the Medspencer involves conducting m arket research and investigating the available technologies we may use. Designing the Medspencer involves choosing the specific hardware components we will use for our device, designing the hardware connections and circuits, and planning the software desig n for the Medspencer. Then, three months are allotted to buy the chosen parts, prototype the Medspencer device, design the PCB, assemble the device hardware and write the software, and test the finished Medspencer device. Because this is such a limited time frame, it is imperative that the team plans the milestones wisely to complete the project on time and allow time for any 13 necessary modifications. We will order all the necessary parts during the end of April/early May. By the end of May/early June, we should have prototyped the device using the development board and breadboard, ensuring that the circuitry and basic coding is correct. Then the PCB should be designed and ordered by early June so that it can be received by mid/late June. In the meantime, we can continue to work on writing and testing the software. During late June/early to mid -July, we will work on soldering the board, assembling the final device and testing to ensure everything works correctly. We aim to finish the project two weeks befor e the deadline (August 3) so that there is extra time if we need to re -order parts or make modifications to the design. 3.2.3 Manufacturability and Sustainability Constraints Manufacturing the MedSpencer may require more research considering that the devic e will store medication for longer periods of time. Most of the medication need a cool environment where to be store at. Since the medication will share room and will be enclosed with many servos, PCBs and a voltage regulator, a ventilation system must be added in order to keep an ideal environment for the medication. Since the device will require a voltage regulator to handle all the charge burden, it must be powerful enough to run all the module pieces, but also small enough to fit in the box. So far the elements such as the fingerprint reader, the servo motors, the cooling fan, the touchscreen display and the speaker do not use more than 7V, so a 12V -DC voltage supply will suffice our criteria. We can separate the project into different modules so it wou ld be easier to make everything work. After every module is properly functioning, they must fit within the box for proper showing. We must remember that the dispenser will be for domestic use, that means it should not exceed certain size and certain weight . For the sustainability of the device, there must be a certified administrator that will change, remove and provide the medication whenever is needed. As the MedSpencer have Wi-Fi connection and is capable to report via email to the doctor in charge about the patient compliance, by similar means it will alert the administrator when the device is running out of medication and also when to add or remove a patient from the device's system. The administrator will also be in charge of the maintenance of the ha rdware and software of the dispenser. A simple and common issue that will face the dispenser is the dust. As the machine has a cooling fan, it will drag dust from the air to the inside part. Neither the patients, nor the caretakers can do the inside cleani ng because they do not know the proper procedure for maintenance. As the medications will be sealed in the plastic containers, dust or other contaminants cannot get to them. As we can see in Figure 2, a common issue regarding any device that uses a cooling fan system. It is no so important when this is within the Central Processing Unit (CPU) because it only involves electronic components that can be cleaned every once in a while, but when this happens to a unit where medicine is involved, it is unacceptabl e. The administrator should keep a regular schedule for the device maintenance that includes cleaning the cooling fan system and also to clean the plastic medicine containers. 14 Figure 2. Cooling fan s ystem with no mainten ance [39] Courtesy of dirtycomputer.com 3.2.4 Parts, Component, and Testing Constraints In order to achieve the complete functionality of the project we can divide it into modules. There will a be the servo motor modules, the fingerprint reader module, the display module and the cooling -fan module. Each one of them are only hardware components. Everything regarding software will be explained in another sub -section. Summarizing the project, the MedSpencer will take into account the clock from the internet and compar e it with the pre - assigned schedule of each one of the patients on file. Once a match is found the device will sound to alert the patient and it will not stop sounding until a fingerprint is placed on the fingerprint reader and this matches to the patients '. In order for the internet connection to happen we are attaching a ESP8266 Wi-Fi module so the clock will always be updated. This component will have email purposes that will be described later on section 5.2.3. Figure 3. Wi-Fi module ESP8266 [44 ] Courtesy of generationrobots.com The MedSpencer will have a touchscreen display that will help the administrator to input the information about patients, change the medication slots and allows more options for 15 caretakers. These optio ns are the possibility to take medication out for their patients in case of travel. The administrator option will only be enabled when his fingerprint is read by the dispenser. What makes unique to this project is that the dispenser will identify each pati ent through his or her fingerprint. The fingerprint reader used is a R307 optical fingerprint reader that it can be easily connected to an Arduino microprocessor in order to do some test. This reader needs an input voltage of 4V to 7V to work. While doing some test on an Arduino board, we had to make the connections described on Table 1 so the reader could work properly: Table 1. Fingerprint reader connections on Arduino [45] Reader Arduino Power input (red) 5V Ground (black) GND Data in(white) Port 3 Data out (green) Port 2 Our first goal with the fingerprint reader is to store different samples of fingerprint. Once the fingerprint is recognized and linked to an existing patient, the proper servo is activated to dispense the co rrect amount of pills. This servos also work with an small input voltage of 5V. Running some test on the Arduino , we noticed that we can manage the degrees that the servo can make its arm to turn and also the speed of it. On Table 2 there is described the proper connections for the servo to work with the Arduino . Table 2. Distribution of the connection on servo [ 5] Servo Arduino Power (red) 5V Ground (brown) GND Signal (yellow) Port 9 The medication will be stored in plastic containers that meet the FDA standards for storing. For purpose of this project, this containers will be modified at the bottom to add special filters that will be attached to the servo motors. Once the servo motors rotate, they let the medications leave the container and fall through the tubes that will lead to the base of the device so the patient can take it. The tubes, according to the FDA Guidance on Container 16 Closures, can be made of glass, high density polyeth ylene or metal, so they cannot alter the composition of the medication. The cooling fan system will not consume too much energy and is only there to refrigerate the inner environment of the dispenser so the medication will not suffer from the heat and lose its effectiveness. All those components, the main board, the servo motors and the closure can create a warmer environment where the medication containers will become poisonous for the them. This cooling fan will be triggered by a temperature sensor that monitors the inside temperature in order to avoid to get warm enough to be considered dangerous. The enclosure for this project will be made of wood or carton board and will have a door for which the administrator should replace empty containers or replace medications and give maintenance to the parts. For purpose of showing this door will be open the entire time to show how the system works. 3.2.5 Environmental Constraints The Environmental constraints on having this device will using power however, the dev ice will not use huge power the device will at least use 5% of the entire household products. In the other hand, this device can save the environmental by not allowing the patients and caretakers to throw the medication away down the sewage line or into th e ocean because some medication can have a 1 to 2 week half -life in the human body but longer in the ocean and fishes where other humans can absorb these deadly efforts. In the EMBO reports, \"Medicines have an important role in the treatment and prevention of disease in both humans and animals. But it is because of the very nature of medicines that they may also have unintended effects on animals and microorganisms in the environment. Although the side effects on human and animal health are usually investig ated in thorough safety and toxicology studies, the potential environmental impacts of the manufacture and use of medicines are less well understood and have only recently become a topic of research interest. Some of the effects of various compounds \u2014most n otably anthelmintics from veterinary medicine and antibacterial therapeutics, but there are many other substances that can affect organisms in the environment. Pharmaceutical substances may also be degraded by biological organisms in treatment systems, wa ter bodies and soils as well as abiotic reactions. Generally, these processes reduce the potency of medicines; however, some breakdown products have similar toxicity to their parent compounds. Furthermore, degradation varies significantly depending on chem istry, biology and climatic conditions. For example, the half -life of the antiparasitic ivermectin under winter conditions is six times greater than in the summer and the compound degrades faster in sandy soils than in sandy loam soils. The natural estroge ns 17-estradiol and estrone degrade in the aerobic and anoxic tanks of activated sludge systems, whereas 17 -ethinylestradiol only degrades under aerobic conditions. All this adds to the complexity of the problem and calls for individual solutions for ind ividual pharmaceuticals and applications.\" [ 21] 17 \"The US Food and Drug Administration (FDA) requires environmental risk assessments of human and veterinary medicines on the effects on aquatic and terrestrial organisms before they allow a product to the mark et, and the EU introduced similar requirements in 1997. These environmental impact studies investigate the potential negative effects on fish, daphnids, algae, bacteria, earthworms, plants and dung invertebrates. Much of the data are publicly accessible \u2014many of the environmental assessments are published on the FDA's web site \u2014and provide a reasonable body of data for further study. However, there are valid questions about the real -world value of these studies. Risk assessments usually use standard ecotoxici ty tests, which are often short -lived and focus predominantly on mortality as the endpoint. Moreover, aquatic tests tend to focus on the water compartment and do not take into account pharmaceuticals residing in sediments. In general, the effects observed in these studies occur at much higher concentrations than those that are measured in the environment. What is less known are the more subtle effects that therapeutically active substances can have on organisms in the environment, such as growth, fertility or behaviour.\" [ 21] 3.2.6 Health and Safety Constraints Medical profession has long subscribed to a body of ethical statements developed primarily for the benefit of the patient. As a member of this profession, a physician must recognize responsibility to patients first and foremost, as well as to society, to other health professionals, and to self. The following Principles adopted by the America n Medical Association are not laws, but standards of conduct that define the essentials of honorable behavior for the physician. The 9 Principles of medical ethics are a physician shall be dedicated to providing competent medical care, with compassion and respect for human dignity and rights, a physician shall uphold the standards of professionalism, be honest in all professional interactions, and strive to report physicians deficient in character or competence, or engaging in fraud or deception, to appropriate entities, a physician shall respect the law and also recognize a responsibility to seek changes in those req uirements which are contrary to the best interests of the patient, a physician shall respect the rights of patients, colleagues, and other health professionals, and shall safeguard patient confidences and privacy within the constraints of the law, a physic ian shall continue to study, apply, and advance scientific knowledge, maintain a commitment to medical education, make relevant information available to patients, colleagues, and the public, obtain consultation, and use the talents of other health professi onals when indicated, a physician shall, in the provision of appropriate patient care, except in emergencies, be free to choose whom to serve, with whom to associate, and the environment in which to provide medical care, a physician shall recognize a respo nsibility to participate in activities contributing to the improvement of the community and the betterment of public health, a physician shall, while caring for a patient, regard responsibility to the patient as paramount, and a physician shall support acc ess to medical care for all people. They also must Food and Drug Administration when prescribing medications. In addition, medi cal profession must follow the Medicare regulations and law on treating and servicing 18 patients where all hea lth insurance companies follow Medicare laws but add their own requirements and recommends. One example of where this device will benefit for the patient is using Celexa (generic: Citalopram hydrobromide). It is a drug used for antidepressant medication. However, the FDA issued a Drug Safety Communication (DSC) stating that citalopram should no longer be used at doses greater than 40 mg per day because it could cause potentially dangerous abnormalities in the electrical activity of the heart. Citalopram use at any dose i s discouraged in patients with certain conditions because of the risk of QT prolongation, but because it may be important for some of those patients to use citalopram, the drug label has been changed to describe the particular caution that needs to be take n when citalopram is used in such patients. The revised drug label also describes lower doses that should be used in patients over 60 years of age. Changes in the electrical activity of the heart (specifically, prolongation of the QT interval of the electr ocardiogram [ECG]) can lead to a risk of an abnormal heart rhythm called Torsade de Pointes, which can be fatal. Patients at particular risk for developing prolongation of the QT interval include those with underlying heart conditions and those who are pr edisposed to having low levels of potassium and magnesium in the blood. The facts about Celexa is that it works by increasing the amount of serotonin in the brain. Available as 10 mg, 20 mg, and 40 mg tablets. Also available as an oral solution (10 mg/5 mL). In 2011, a total of approximately 31.5 million prescriptions were dispensed for citalopram from U.S. outpatient retail pharmacies. In 2011, approximately 7.2 million patients received a dispensed prescription for citalopram from U.S. outpatient retail pharmacies. In 2011, according to U.S. office -based physician practices, approximately 89.5% of citalopram drug use was at doses of 40 mg and below and 6% of drug use was at doses above 40 mg per day. The maximum recommended dose of citalopram is 20 mg per day for patients with hepatic impairment, patients who are older than 60 years of age, patients who are CYP 2C19 poor metabolizers, or patients who are taking concomitant cimetidine (Tagamet\u00ae) or another CYP2C19 inhibitor, because these factors lead to in creased blood levels of citalopram, increasing the risk of QT interval prolongation and Torsade de Pointes. Electrolyte and/or ECG monitoring is recommended in certain circumstances Consider more frequent ECG monitoring in patients for whom citalopram use is not recommended, but is, nevertheless, considered essential. Patients at risk for significant electrolyte disturbances should have baseline serum potassium and magnesium measurement, with periodic monitoring. Hypokalemia and/or hypomagnesemia may increa se the risk of QTc prolongation and arrhythmia and should be corrected prior to initiation of treatment with periodic monitoring. Citalopram should be discontinued in patients found to have persistent QTc measurements greater than 500 ms. Advise patients o n citalopram to contact a healthcare professional immediately if they experience signs and symptoms of an abnormal heart rate or rhythm (e.g., dizziness, palpitations, or syncope). If patients experience symptoms, the prescriber should initiate further eva luation, including cardiac monitoring. 19 In conclusion from this medication example, can be the reference to set the project standard and if this device is cleared but the FDA to hold and dispense this medication then any medication is possible. 3.2.7 Ethica l and Legal Constraints As a pharmacist and physician, both follow the code of ethics. They must know what they are giving out and why they are giving it out. From the 1970, the \"Controlled Substances Act (CSA) has been used by law enforcement to decrease drug abuse and dependence among America ns by regulating the production, sale, purchase and use of many drugs. This act gives authority to the Drug Enforcement Administration (DEA) to monitor and control the use of substances, both legal and illegal. Becau se of the many differences between the various types of substances, and between each individual substance, the CSA puts each substance into one of five categories, called Schedules. These categories give each substance a simple classification that helps bo th law enforcement and the medical community to easily understand its nature.\" [ 82] The CSA states the following factors affect a drug's schedule which are potential for abuse, scientific information available regarding the drug's pharmacological effect, s cientific understanding of the drug, historical and current patterns of abuse, magnitude of abuse, possible risks to public health, risk of developing psychological or physical dependence. \"The DEA explains, Schedule V drugs have the least potential for ab use, while Schedule I drugs are considered to have the highest abuse and dependence potential. The DEA also lists the following examples for each drug schedule meaning schedule I: heroin, LSD, marijuana and ecstasy, ketamine, products with less than 90 milligrams of codeine per dosage and products with less than 15 milligrams of hydrocodone per dosage, schedule and Ativan, and schedule medications containing less than 200 milligrams of codeine or per [ 82] Furthe rmore, the DEA has some Federal Regulations for example in Part 1304 of the Records and Reports of Registrants under the Inventory Requirements which has 5 parts which states in the general requirements, \"Each inventory shall contain a complete and accurate record of all controlled substances on hand on the date the inventory is taken, an d shall be maintained in written, typewritten, or printed form at the registered location. An inventory taken by use of an oral recording device must be promptly transcribed. Controlled substances shall be deemed to be \"on hand\" if they are in the possessi on of or under the control of the registrant, including substances returned by a customer, ordered by a customer but not yet invoiced, stored in a warehouse on behalf of the registrant, and substances in the possession of employees of the registrant and in tended for distribution as complimentary samples. A separate inventory shall be made for each registered location and each independent activity registered, except as provided in paragraph (e)(4) of this section. In the event controlled substances in the po ssession or under the control of the registrant are stored at a location for which he/she is not registered, the substances shall be included in the inventory of the registered location to which they are subject to control or 20 to which the person possessing the substance is responsible. The inventory may be taken either as of opening of business or as of the close of business on the inventory date and it shall be indicated on the inventory. [ 83] Initial inventory date. Every person required to keep records s hall take an inventory of all stocks of controlled substances on hand on the date he/she first engages in the manufacture, distribution, or dispensing of controlled substances, in accordance with paragraph (e) of this section as applicable. In the event a person commences business with no controlled substances on hand, he/she shall record this fact as the initial inventory. [ 83] Biennial inventory date. After the initial inventory is taken, the registrant shall take a new inventory of all stocks of controll ed substances on hand at least every two years. The biennial inventory may be taken on any date which is within two years of the previous biennial inventory date. [ 83] Inventory date for newly controlled substances. On the effective date of a rule by the Administrator pursuant to \u00a7\u00a71308.45 , 1308.46 , or 1308.47 of this chapter adding a substance to any schedule of controlled substances, which substance was, immediately prior to that date, not listed on any such schedule, every registrant required to keep records who possesses that substance shall take an invento ry of all stocks of the substance on hand. Thereafter, such substance shall be included in each inventory made by the registrant pursuant to paragraph (c) of this section. [ 83] Inventories of manufacturers, distributors, registrants that reverse distribute , importers, exporters, chemical analysts, dispensers, researchers, and collectors. Each person registered or authorized (by \u00a7\u00a71301.13 , 1307.11 , 1307.13 , or part 1317 of this chapter) to manufacture, distribute, reverse distribute, dispense, import, export , conduct research or chemical analysis with controlled substances, or collect controlled substances from ultimate users, and required to keep records pursuant to \u00a71304.03 shall include in the inventory the information listed below. [ 83] Inventories of man ufacturers. Each person registered or authorized to manufacture controlled substances shall include each controlled substance in bulk form to be used in (or capable of use in) the manufacture of the same or other controlled or non -controlled substances in finished form, the inventory shall include the name of the substance, and the total quantity of the substance to the nearest metric unit weight consistent with unit size. For each controlled substance in the process of manufacture on the inventory date, th e inventory shall include the name of the substance; the quantity of the substance in each batch and/or stage of manufacture, identified by the batch number or other appropriate identifying number; and the physical form which the substance is to take upon completion of the manufacturing process (e.g., granulations, tablets, capsules, or solutions), identified by the batch number or other appropriate identifying number, and if possible the finished form of the substance (e.g., 10 -milligram tablet or 10 -milli gram concentration per fluid ounce or milliliter) and the number or volume thereof. [ 83] For each controlled substance in finished form the inventory shall include the name of the substance; each finished form of the substance (e.g., 10 -milligram tablet or 10-milligram 21 concentration per fluid ounce or milliliter); the number of units or volume of each finished form in each commercial container (e.g., 100 -tablet bottle or 3 -milliliter vial); and the number of commercial containers of each such finished form (e.g. four 100 -tablet bottles or six 3 -milliliter vials). [ 83] In this section (damaged, defective or impure substances awaiting disposal, substances held for quality control purposes, or substances maintained for extemporaneous compoundings) the inventori es shall include the name of the substance; the total quantity of the substance to the nearest metric unit weight or the total number of units of finished form; and the reason for the substance being maintained by the registrant and whether such substance is capable of use in the manufacture of any controlled substance in finished form. [ 83] 3.2.8 Social and Cultural Constraints When a patient walks out a faculty, clinic, or outpatient office, physician and other providers are always worry when patients are out in sociality. Especially from the hospitals, \"patients are being discharged sooner, often in the process of convalescence rather than at baseline health status. This requires physicians to more effectively communicate instructions for post -discharge c are to patients, family members, and outpatient providers. A comprehensive review on improving all aspects of this process is beyond the scope of this article; we will focus specifically on improving medication use. Patients are very susceptible to medical errors in the days immediately following hospital discharge. Forty - nine percent of hospitalized patients experience at least one medical error following discharge, most commonly involving medication use. An estimated 19 -23% of patients suffer an adverse d rug event (ADE) after discharge. Most of these errors and ADEs could be prevented through better communication. This commentary will discuss several common barriers to proper medication use after hospital discharge and review potential solutions based on t he experience in the United States.\" [ 31] Another social constraint is when patient states that the medication is working for the first month and they stop taking that medication automatically without the physician's approved. Later, they compliant to the staff or physician that the medication is not working and need other medication. While the medication that has not been taking is at home and if the patient takes the new medication and the medication leftover they can get a big complication or death. A cu ltural constraints example is a study found in \"'Rituals of Silence' Haafkens examines the use of benzodiazepines - medicines prescribed for mental distress - by women in the Netherlands. She describes how the medicines not only make it possible for women to live on with their mental health problems, but also provide society with a means to control anxiety and stress. The ambiguous relation between self -control of female distress and medicalized social control of life problems is the main theme of another c hapter in our book. On the one hand, women use benzodiazepines like other medicines to enhance the quality of their individual lives. Medicines liberate them from bodily discomfort, and give them means to control natural bodily processes such as conception , menstruation and 22 menopause. Medicines are part of day -to-day body regimes, in which women strive to fulfill societal expectations of work capability, appropriate fertility, attractive appearance, and mental stability. On the other hand, benzodiazepines a nd other medicines also function as a medical means of social control. In modern societies, where medicine has replaced religion as a dominant moral ideology and social control institution, more and more of everyday life has come under medical dominion, in fluence and supervision, a process known as medicalization . Around 1990, at the time of Haafkens' study, about one in every seven women had a prescription for benzodiazepines filled annually in the Netherlands; men received such prescriptions much less oft en. Dutch medical guidelines acknowledged that the drugs were not as safe as initially thought, and recommended that the duration of benzodiazepine use be limited to one to two weeks, a few months at the most. Despite this advice, long -term use of benzodia zepines remained relatively common in the Netherlands, affecting an estimated three percent of the Dutch population. The efficacy of the medicines, therefore, is ambiguous. For the women who use them, the medicines are indispensable to stay in control of t heir lives. At the same time, many of those using them feel that the medicines have taken control of them . They would like to stop but cannot. The medicines are empowering as well as disempowering.\" [ 31] Another social and cultural constraint is the langua ge barrier, if the patient is Hispanic or Russian and they recently came to the USA. 3.2.9 Political Constraints or FDA Standards In the Food and Drug Administration, states that all Medical devices should be designed and manufactured in such a way that, w hen used under the conditions and for the purposes intended and, where applicable, by virtue of the technical knowledge, experience, education or training of intended users, they will not compromise the clinical condition or the safety of patients, or the safety and health of users or, where applicable, other persons, provided that any risks which may be associated with their use constitute acceptable risks when weighed against the benefits to the patient and are compatible with a high level of protection o f health and saf ety [80]. The medical devices have be effective and have high performance standards. Each device must be designed with a purpose to be a clinically effective when it produces the effect intended by the manufacturer relative to the medical condition. For example, if a device is intended for pain relief, one expects the device to actually relieve pain and would also expect the manufacturer to possess objective, scientific evidence, such as clinical test results, that the device does in fact re lieve pain. Clinical effectiveness is a good indicator of device performance. Performance, however, may include technical functions in addition to clinical effectiveness. For example, an alarm feature may not directly contribute to clinical effectiveness but would serve other useful purposes. Furthermore, it is easier to measure objectively and quantify performance than clinical effectiveness. Performance is closely linked to safety. For example, a blood collection syringe with a blunt needle would perform badly for collecting blood and could inflict injury. A patient monitor that does not perform well could pose serious clinical safety problems to the 23 patient. Thus, the safety and performance of medical devices are normally considered together [ 27]. In Food and Drug Administration standard, an average phase in the life span of a medical device are conception and development, manufacture, packaging and labeling, advertising, sale, use, and disposal. The section for this project is in conception and de velopment, manufacture, packaging and labeling which is called Manufacturer. In the manufacturer stage, the creator of the device, must ensure that it is manufactured to meet or exceed the required standards of safety and performance. This includes the th ree phases (design/development/testing, manufacturing, packaging and labelling) that lead to a product being ready for the market. The term \"user error\" is defined as an act that has a different result than that intended by the manufacturer or expected by the operator. User error may result from a mismatch between variables, for example the operator, device, task, or environment. By incorporating human factor engineering principles in design, and appropriate training for users, the risk of user errors can b e minimized. The key advantage regarding quality systems is that they represent a preventive approach to assuring medical device quality versus the previous reactive approach by inspection and rejection at the end of the manufacturing line. Prevention has been proven to be more efficient and cost effective in controlling manufacturing processes and maintaining medical device quality. It is important to note that since the majority of medical devices are in the medium - to low -risk classes, their compliance w ith regulations often depends upon the declarations of manufacturers, thus the question of quality assurance naturally arises. This is why it is critical for manufacturers to conform with quality system standards and for this conformity to be subject to pe riodic audit by governmental or third party agencies. The Food and Drug Administration has developed a guidance to provide the Agency's initial thinking on technical considerations specific to devices using additive manufacturing, the broad category of ma nufacturing encompassing 3 -dimensional (3D) printing. Additive manufacturing (AM) is a process that builds an object by sequentially building 2 -dimensional (2D) layers and joining each to the layer below, allowing device manufacturers to rapidly produce al ternative designs without the need for retooling and to create complex devices built as a single piece. Rapid technological advancements and increased availability of AM fabrication equipment are encouraging increased investment in the technology and its i ncreased use by the medical device industry. The purpose of this guidance is to outline technical considerations associated with AM processes, and recommendations for testing and characterization for devices that include at least one additively manufacture d component or additively fabricated step. From the research, t his guidance is broadly organized into two topic areas: Design and Manufacturing Considerations (Section V) and Device Testing Considerations (Section VI). The Design and Manufacturing Consider ations section provides technical considerations that should be addressed as part of fulfilling Quality System (QS) requirements for your device, as determined by the regulatory classification of your device and/or regulation to which your device is subjec t, if applicable. While this guidance includes manufacturing considerations, it is not intended to comprehensively address all 24 considerations or regulatory requirements to establish a quality system for the manufacturing of your device. This guidance focu s on five broad themes: (1) materials; (2) design, printing, and post - printing validation; (3) printing characteristics and parameters; (4) physical and mechanical assessment of final devices; and (5) biological considerations of final devices, including cleaning, sterility, and biocompatibility. A variety of different types of materials can be used in additive manufacturing [ 27]. From the research found to patient a medical device for future expansion , it was found that there are multiple view s to be consi dered for standard -sized devices : for example , an interacting design models often made by altering the features of a standard sized device for each patient within a pre -determined range of device designs and size limits. This is typically accomplished thro ugh the use of anatomical matching or design manipulation software that may be developed specifically for the AM device, or through other third party software. Patient -matching may also be accomplished by manual methods using specific measurements on radio graphs or key anatomic landmark measurements. Any software or procedure used to make modifications to the device design based on clinical input should include internal checks that prevent the operator from exceeding the pre -established device specification s documented in the device master record. We recommend that the design manipulation software or procedure used to make modifications to the device design identify the iteration of the design being changed by the operator. In addition, because this is a med ical device, cybersecurity and personally identifiable information so the device in to properly manage and care of personally identifiable information (PII) and protected health information (PHI) is essential in any clinical application. More information i s found in protecting PII and PHI, please refer to the HHS Guidance on Significant Aspects of the Privacy Rule. And the Food and Drug Administration include interactive steps in their patient matching workflow be familiar with implementing the FDA's Guidan ce on the \"Content of Premarket of Cybersecurity in Medical Devices\" [ 77] Another Political constraint is the cost of health care which has been escalating slowly but steadily. \"Lately, the speed of this development has become ha rder to accept as it has greatly outpaced the growth of the national economy in many countries. The multiple reasons for this trend include the growth in expensive technologies and increasing demand for services fueled by a complex mix of social changes \u2014for example, improved levels of education, the commodification of medicine, and the general medicalization of life. There is also rising demand for quality improvement and quality control in health care. Some of the equally complex social developments under lying this are the increasing autonomy, rights, and knowledge of patients; commodification of the doctor patient relationship towards a provider client relationship; declining trust in professionalism and professional judgment; greater trust in statistical research; and less toleration of medical error. These trends affect the different parties involved in health care \u2014patients, doctors, and administrators or payers \u2014differently, and can lead to conflicts of interest. 25 It has also become commonplace to argue that increasing resources will not necessarily produce any good if not spent effectively. Thus, when more money is promised for healthcare, it is done on the condition that it can be proved that the money is spent on effective interventions. This trend has created an unprecedented need for the medical profession to explicitly justify its actions in both medical and economic terms. Evidence based medicine (EBM), or the whole outcomes movement, is a central tool in this process of increasing the accountabilit y of medicine. Cost control and quality improvements are often combined in practical health care development \u2014to get better for less is an obvious ideal for healthcare administrators. Even if, however, this might be logical and practical on the administrati ve level, for individual patients and doctors it is often the cause of much of the confusion that surrounds both EBM and rationing. We argue that this confusion of costs and quality has made it difficult for doctors to foresee and react to the changes EBM implies for the whole profession.\" [ 72] Moreover, \"costs inevitably play a role when CPGs are created and individual patients treated, even if in many cases only implicitly, for at least two reasons. First, because for CPGs to be relevant their recommendat ions must be realistic \u2014that is, possible to apply in practice. A guideline recommending a treatment that nobody can or wants to provide is futile, and more likely to be damaging if there is no realistic alternative recommendation \u2014 for example, Western HIV t reatment guidelines in most African countries. Second, because opportunity costs \u2014that is, the alternative goods (not just monetary) that will be lost if a treatment is given \u2014must be considered. Considering costs as part of trying to find the best possible solution to an individual patient's problem is a traditional and important part of medical praxis. It is common that patients do not buy medication they consider too expensive, or use a lower dosage than prescribed, without reporting this to the doctor. Patients always consider opportunity costs on their individual level, and these naturally depend on the way the health care is financed. On the individual level, cost considerations can in theory be dealt with relatively simply by letting individual patients decide what they are willing to pay for certain services. In insurance based systems people can choose the insurance policy they like and can afford, although, at least in the US, this appears true in most cases only in theory. And even in theory, it is q uite optimistic to think we could correctly predict our reactions to some possible future diseases and ailments that we have no experience of at the moment.\" [ 72] 3.2.1 0 Security Constraints The device will be at home in an open area like the kitchen where the patient(s) and caretaker or administrator can access the device. If the device can be open without a key or any other permission then the device is vulnerable. They would have access to the medication and the data storage. Another security constrain t is the wireless communication capabilities present in many modern Medical Devices (MDs) are a major source of security risks, particularly while the patient is in open (i.e., non -medical) environments. To begin with, the implant becomes no longer \"invisi ble\", as its presence could be remotely detected. Furthermore, it facilitates the access to transmitted data by eavesdroppers who simply listen to the (insecure) channel. 26 This could result in a major privacy breach, as Medical Devices (MDs) store sensitive information such as vital signals, diagnosed conditions, therapies, and a variety of personal data (e.g., birth date, name, and other medically relevant identifiers). A vulnerable communication channel also makes it easier to attack the implant in ways si milar to those used against more common computing devices, i.e., by forging, altering, or replying previously captured messages. This could potentially allow an adversary to monitor and modify the implant without necessarily being close to the victim. [ 24] Another Security constraint is software or web application to defined the roles of the patient and caretaker to have specific access to the each of them. \"The content to be secured is declared using one or more web -resource -collection elements. Each web -resource - collection element contains an optional series of url -pattern elements followed by an optional series of http -method elements. The url -pattern element value specifies a URL pattern against which a request URL must match for the request to correspon d to an attempt to access secured content. The http -method element value specifies a type of HTTP request to allow. The optional user -data-constraint element specifies the requirements for the transport layer of the client to server connection. The require ment may be for content integrity (preventing data tampering in the communication process) or for confidentiality (preventing reading while in transit). The transport -guarantee element value specifies the degree to which communication between the client an d server should be protected. Its values are NONE, INTEGRAL, and CONFIDENTIAL. A value of NONE means that the application does not require any transport guarantees. A value of INTEGRAL means that the application requires the data sent between the client an d server to be sent in such a way that it can't be changed in transit. A value of CONFIDENTIAL means that the application requires the data to be transmitted in a fashion that prevents other entities from observing the contents of the transmission. In most cases, the presence of the INTEGRAL or CONFIDENTIAL flag indicates that the use of SSL is required. The optional login -config element is used to configure the authentication method that should be used, the realm name that should be used for rhw applicatio n, and the attributes that are needed by the form login mechanism.\" [ 57] The auth -method child element specifies the authentication mechanism for the web application. As a prerequisite to gaining access to any web resources that are protected by an author ization constraint, a user must have authenticated using the configured mechanism. Legal auth -method values are BASIC, DIGEST, FORM, and CLIENT -CERT. The realm -name child element specifies the realm name to use in HTTP basic and digest authorization. The f orm-login -config child element specifies the log in as well as error pages that should be used in form -based login. If the auth -method value is not FORM, then form -login -config and its child elements are ignored. [ 24] With this web command, they will need to be update to the newer standards which contain higher security parameters and a bit complex algorithm to sort out unwanted or unnecessary character and number from the input of the user. 27 3.2.1 1 Performance, Functionality, Usability, Reliability and Availability The performance is the more of a quality to do survey for a given population. From the House of Quality and comparing to other device out in the market, functionality of the timing when the patient scan their fingerprint to the time the device dispense the medication. The device will have a 1 -2 min to respond. Usability is for the patient to access the medication which is predicted to be less than 2 mins. The patient will scan their fingerprint and push on the touch screen to confirm that the pa tient is the patient shown. Later, the patient will push a button on the screen if the medication or \"as needed\" meaning when the patient just request the medication at random times. Then the next screen will show in simple terms instead of the medication name for example Zolpidem (Ambien) it will say and show the reason why they are taking the medication. For example , Ambien is for sleep problems. In addition, this device will be used for a family of 4 users or patients and a caretaker. For now , this devi ce will be 99% reliable for 1 yearly check -up due to the importance of patient's medication for live and death scenarios. On the other hand, the device will be plug in to the outlet however in future improvement that device will be powered by battery for 12 hours due to weather and disaster in the area. The availability of the device is 365 days a year and operational 24 hours a day and 7 days a week. 28 4.0 Research and Background Information The research conducted in preparation for designing the Medspencer product includes research on similar products in the market; technologies that we plan to use to develop the Medspencer; and power considerations. When researching technologies, we considered our project requirements, then studied the available technologie s and how they work, in order to ascertain how we can implement the technologies to accomplish our goals for the Medspencer. Researching available technologies and figuring out the Medspencer's specific needs will help us later when we choose what specific hardware components we will purchase to develop the Medspencer. 4.1 Market Research Market research is an important part of researching when it comes to product development. By researching what products are already available, we can ascertain what feature s are already offered or not, and whether they are effective. This can help us design a unique product with new and improved features and/or at a more agreeable price to consumers. 4.1.1 Existing Products While there are a few household automated medicine dispensers on the market, they are quite expensive and do not have the same features that have been described for the Medspencer. All the medicine dispensers on the market that we studied are only for one person use. Also, the devices do not verify that t he correct person is taking the medicines. None of the dispensers can reschedule in the case of a missed dose. All the dispensers mentioned will sound an alarm and/or light up when it is time for a scheduled medicine dose. They are locked devices, and do n ot allow patients to access medicines outside of the schedule dose time. Researching other automated medicine dispensers that are already on the market is advantageous, because the team can consider possible new features that could be added or existing fea tures that may be improved upon. e-pill, LLC sells a series of automatic medicine dispensers [ 17]. The cost of most dispensers ranges from $450 to $595. The e -pill medicine dispensers require pre -sorting of the medicines into the medication tray. The medic ation tray has a finite number of compartments, so the tray must be refilled more frequently if the patient must take multiple doses in a day; the frequency of refilling ranges from once per month (for one dose a day) to every few days. Doses can be schedu led up to 3 or 6 times per day at different specified times (depending on the product), and there is an optional early dose feature. The Medication Window used for e -pill medicine dispensers is illustrated below in Figure 4 . Our team is considering a simil ar scheme for the Medspencer's dosage window. The dispenser is locked; however, reviews say it is easy to tamper with the device to open it. The tamper -resistant medicine dispensers range from $650 to $995. The e -pill MedSmart Plus will send a call, text, or e-mail to the caregiver if the medication has not been taken within 60 minutes of the scheduled time, and costs $895. If a dose is missed, the device simply skips that dose. 29 Figure 4. Precise medication window scheme used by e -pill, LLC [ 38] Courtesy of e -pill \u00ae Medication Reminders Another product on the market is the Philips Automated Dispensing Service, which is available at a monthly subscription price of $59.95 a month [16]. The Philips dispenser requires pre -sorting of me dicines into 60 cups, and can accommodate up to 40 days of medicine. Up to 6 doses per day can be scheduled, and there is an optional early -dose feature. The Philips can give reminder alerts for non -pill medications that are not housed in the dispenser as well. There is a program for as -needed (PRN) medications. If the dose is missed, that box's medicine will be dumped in a secure container, so the dispenser does not keep the medicines organized and separated. Alerts can be sent to the caregiver for the number of missed doses, reminders for refilling, dispenser errors, and loss of electricity. The dispenser is connected to the patient's telephone landline, so the caregiver can be contacted if a dose is missed. The patient's activity can be viewed through the online Monitoring Report. Schedules and reports can be accessed using an online portal or app. A cheaper option is the MedReady 1700 Automatic Dispenser, which costs $ 149 [ 15]. The medications must be pre -sorted, and the tray can hold 28 doses. Up to four doses can be scheduled per day. The MedReady 1700PRN dispenses only as -needed (PRN) medications by allowing the user to set a minimum time between doses. It costs $159. The Medready 1750 (Landline monitored) and MR -357FL (Cellular monitored) offer cellula r and landline monitoring to track medication compliance. The call center will be contacted when a dose is missed or when there is a malfunction or power outage. Then the call center notifies the caregiver via email, text messages, or phone calls. A comple te compliance history is available on the website. The cellular model allows caregivers to change settings via the online portal. The 1750 costs $197 with a $16 per month monitoring fee, while the MR - 357 costs $297 [ 15, 30]. Devices with a flashing light, in addition to the audio alarm, is available for $10 more than the regular prices. A more advanced medicine dispenser on the market is the Livi Automated Medication Dispenser [ 60]. The Livi can be purchased for $1999 or rented for between $79 -$99 a month. The Livi can handle a variety of pill shapes and sizes, however to do so, someone must measure the pill size and fit the matching \"fit kit parts\" to the medication container. The Livi can hold up to 15 medicines in separated vials, and medicines do not nee d to be hand -sorted. This saves time from sorting medicines or loading the machine, as up to 90 30 days' worth of each medication can be stored. In addition, it makes adding or changing out prescriptions easier in the case of a new prescription. Doses can be scheduled up to 24 times a day, and the machine can dispense as -needed (PRN) medication. There is an optional early -dose feature. The Livi ensures only the quantity allowed for a given time - frame is dispensed, including daily do not exceed needs. The Livi can also give up to 15 additional reminders for items not stored in the Livi. The Livi has its own telephone service and can send text messages or emails to the caretaker when a dose is taken or missed, when the lockable device cover is opened, and when in ventory levels are low. The Livi can generate reports and statistics about medicine adherence. The Livi web portal allows easy scheduling and real -time monitoring of medications. The Livi cloud stores medication history and adherence data for easy sharing with the physicians and other caregiver(s). Four medicine dispensers; e -pill, MedReady, Philips, and Livi; were studied in depth to analyze the current market, and ascertain what features are currently available. Most of the automated medicine dispensers require pre -sorting of medicines. This takes a significant amount of time, and requires more frequent refilling. When new medicines are prescribed or a prescription must be stopped, it can be difficult to re -sort the medicines. In contrast, the Livi has 15 separate medicine vials. This allows for easy organization, and medicines can easily be refilled or swapped out. However, the Livi requires involved physical set -up by the caregiver to facilitate this. We plan to fill the Medspencer with separate medicine vials, to avoid the need of pre -sorting. Many of the studied products allow early doses, and have a dosage window between 30 min to 180 min (depending on the device). We plan to utilize this opti onal early -dose scheme for the Medspencer. Some of the medication dispensers allow for online access, where the schedules could be modified remotely. This can be helpful when a patient needs the assistance of a caregiver to modify the scheduling. The Phili ps and Livi dispensers provide as -needed (PRN) medications, in addition to the scheduled medicines. We also plan to provide PRN medications for the Medspencer. All the dispensers have options for phone or email alerts to the caregiver. Some of them also have online portals, where schedules and compliance reports can be accessed. Our team plans to send phone or app alerts to the caregiver, and email compliance summary reports to the physician and caregiver every few weeks. We may make the reports available o n the cloud or through an online portal as well. We also plan to incorporate some unique features into the Medspencer. One such feature is a rescheduling algorithm, which will adjust the dosing schedule if a dose is missed. We also plan to add options for medicines that must be taken alone. Currently the home medicine dispensers on the market are one -person use. The Medspencer should handle multiple users and will use fingerprint identification to ensure the correct person gets their medicine. 4.1.2 Input from Medical Professionals The team met and spoke with Dr. Fredesvinda Jacobs -Alvarez, a psychiatrist that heads a private practice in Orlando. We discussed the project with her to better understand the needs of physicians and patients who would use the M edspencer. Dr. Jacobs -Alvarez explained about how physicians interact with the EMR (Electrical Medical Records) system, prescribe medications, and how an alert system to identify patients with poor compliance may improve the safety and compliance for patie nts. 31 In medicine, compliance describes the degree to which a patient correctly follows medical advice. Most commonly, it refers to medication compliance, as we refer to it here. There are various cases of patients being noncompliant with their prescribed medications; patients may take more or less than prescribed or may take the wrong medication. Providing support to the patient can help them stay compliant with their medication schedule, and often results in increased compliance even after support is stop ped. Thus, the Medspencer, which provides support for patients to take their medicine on time, should help improve compliance even if use of the device is discontinued. Dr. Jacobs -Alvarez also impressed upon us the importance of the physician and pharmacis t's awareness of the patient's compliance, so that they can accurately gauge the patient's health and give better medical advice and treatment. After discussing this with Dr. Jacobs -Alvarez, the team decided to incorporate the summary report feature into t he Medspencer. The Medspencer will automatically email a summary report to the PCP (Primary Care Physician) every two weeks to report on the patient's medication compliance. Dr. Jacobs -Alvarez explained that medical practices have EMR systems that record information on all the patients, visits, prescriptions, diagnoses, and notes. An alert system that automatically alerts the Pharmacy and the PCP if the patient is not being compliant by sending an alert via internet to the provider's EMR would be ideal. If the patient's compliance was automatically sent to the EMR, they physician would have an easier time, as they could see all of the information about the patient summarized in one place. It would avoid any records getting lost or mixed up. Also, sending an alert on noncompliance to the pharmacy would allow the pharmacist to withhold medicines if they see the patient is not taking them, to prevent the patient from hoarding medicines or paying extra money for medicines they are not using. Unfortunately, for t his Senior Design project, we do not have the permissions to access the EMR. However, if this product were to be developed after the end of Senior Design, then we could investigate gaining access to the EMR and creating and maintaining secure access. If we gained access to the EMR, then the Medspencer could send compliance/noncompliance reports directly to the EMR to be reviewed by the PCP. In addition, the Medspencer could automatically download the prescriptions and prescription schedules for the given pa tient from the EMR data. This would allow for easier set-up for the device, and automatic data retrieval when new medicines are prescribed. Dr. Jacobs -Alvarez also advised us to keep all prescriptions separated. For example, if two patients are prescribed Medicine A, each patient's prescription should still be kept in a separate vial. That way, each person gets the right amount of medicine they were prescribed, and no one takes another person's medicine. Another point that Dr. Jacobs -Alvarez brought up is that the Medspencer could be advantageous by reducing medicine production costs. A common way to help patients take their medicine on schedule is by putting the medicine in a bubble pack. However, the cost of producing the bubble pack makes the overall me dicine cost higher. Also, if the schedule is changed or a new medication is prescribed, then the bubble pack must be discarded and a new one must be purchased. Using the Medspencer can reduce the medication cost because the Medspencer automatically sorts o ut medicines and dispenses them at the correct time. Also, rescheduling or adding new prescriptions is easy with the Medspencer. Another cost component for medicine production is the informational print -out. If the 32 Medspencer accessed the NDC Database, the n the medicine information could be read from the Medspencer. Then a print -out would not have to be provided, which would save money. 4.2 Microcontroller The microcontroller is the central hub of an embedded system. A complete computing ecosystem, the micr ocontroller contains a processor, memory, and numerous peripherals that allow it to be flexible in how it is used. These peripherals, such as digital inputs and outputs, ADC modules, comparators, clocks, timers, and communication interfaces that support UA RT, SPI, I2C, CAN, USB, or Ethernet, along with more specialized offerings, are implemented into a microcontroller to allow one component to perform many different functions. For the Medspencer , the microcontroller will oversee recording patient and medici ne data, displaying things on the LCD, handling data from the touchscreen and fingerprint scanner, making alerts via speaker, and sending commands to the Wi-Fi module and servo -motor controller. From a data analysis standpoint, the computing requirements are not heavy. The amount of data that we must record, process, and transmit is very small, and even a budget microcontroller could handle the processing. What really dictates the requirements of the Medspencer 's microcontroller is the display. The display we have chosen is a 7\" 800x480 touchscreen, which presents a processing and memory threshold that the microcontroller must beat. See section 4.3 below for details on the screen and the minimum processing requirements to run it. The microcontroller we hav e chosen is a Microchip PIC32MZ DA. A member of Microchip's 32 -bit PIC line and MZ family, this chip's main selling point is its 3 -layer hardware -supported graphics processing unit, supported by 32 MB of RAM. However, this was not the only option that was investigated. Additional products from Microchip and other manufacturers were considered, but none beat the cost and features of the MZ DA. Additionally, the idea of using a chip not designed for graphics was considered. After all, if the chip had enough RAM and a fast processor, images were just numbers, we could write our own graphics library, right? As it turns out, most chips with high enough statistics to support our screen already had some sort of graphics support, and that without certain hardware s tructures in the chip, we would spend most of our processing power on buffering the screen, not running our project. Not to mention that writing a custom graphics library when others have already done so and have software to support development would just be a difficult waste of time and energy. 4.2.1 Research Initial research led us to the Microchip PIC32MZ DA. A relatively new product (released in 2017), this microcontroller, while boasting some neat capabilities, seemed like overkill for the Medspencer . The display requirements for this project are very simple: some menus, some text, a keyboard, with a possible addition of simple images for icons if time and space 33 permit. A hardware -accelerated 2D graphics processing unit (GPU, like the thing in your PC that plays Crysis) just didn't seem necessary. Additionally, the cost of the development board ($130) was considered to be excessive. Both of these opinions will change. [46] For cheaper, less powerful alternatives, other Microchip offerings were first exa mined. 16 - bit processors are usually much too small and slow to handle our display. Most are used in ultra-low-power operations, where there is no need to handle the size of data that this application requires. Even Microchip's PIC24F DA, a 16 -bit microcon troller with hardware support for graphics processing, can only support a resolution up to WQVGA (480 x 272) with 16 -bit color, a far cry from the scale required. [1] When looking at Microchip's 32 -bit offerings, the majority still do not have the memory required to support our screen size, though they do have the throughput. The thing is that most of these chips have pretty obvious intended uses that make them speciali zed for particular tasks. The MX series have a variety of size and speeds to fit a range of applications. The MM is a lower -powered MCU with FPGA -like logic programming capabilities. The MK has more timers, comparators, DACs, and includes motor encoders and decoders, which makes it suited for analog peripherals control. The MZ EF has a faster processor than the MZ DA and has a specialized floating point unit, but it lacks the extra memory and graphics processing unit, making it suitable for intensive signal s applications. The MZ DA is simply the member of the family specialized for graphics processing and big screens, and that is what this project is looking for. [3] Many of these microcontrollers, both 16 -bit and 32 -bit, have some sort of parallel communica tion bus: this allows them to utilize external memory to hold the frame buffer. While this is a valid option, it would result in much more complexity and more production work, and potentially higher cost as well. The PIC32MZ DA is unique in that it has a 3 2MB bank of SDRAM incorporated into the chip. This allows it to support such large screen sizes without needing external memory (in effect, it has external memory attached to that parallel master port, just integrated into the chip). [46] Microchip also ha s a family of MPUs called SAM. Some series of SAMs are also graphics capable, and could fulfil our requirements. However, microprocessing units usually do not contain as many peripheral interfaces as MCUs do, and require external support, like various memo ries. This would be an increase in complexity for our project with no discernable gain, so the PIC32 MZ DA wins at Microchip. Other manufacturers were also considered. TI doesn't make graphical LCD screen controllers; the only \"graphics\" products offered were for segmented displays. Many of NXP Semiconductors' 32 -bit processors that were large enough to support our screen had the support to run an operating system, which is definitely overkill for this project. Renesas Electronics presented a similar situa tion, with their RZ/A1L being comparable to the MZ DA, but also having support for Linux, and seemed to be more difficult to acquire. Renesas does offer a number of \"driver\" chips, which take commands from a microcontroller and control the screen by themse lves, but that also adds hardware complexity to the project and limits our ability to try new things. 34 Another major factor is price. The PIC32MZ DA ranges from $10 to $15, depending on the exact model, with the development kit clocking in at $130. At firs t, this seemed quite expensive compared to a hobbyist product like a Raspberry Pi, but more research shows this is actually rather cheap as development kits go. At the end of the day, the requirements for this project push the microcontroller into an interesting place: more powerful than the industrial and automotive applications for sensors and controllers, but not quite into the field of OS -capable MPUs powering the Internet of Things. We wanted to keep this project out of Linux to force ourselves to use lower -level tools and technologies; not everything has to be solved by buying the most impressive chip and only using a fraction of it. It seems that the PIC32MZ DA is a bit of a rare breed in the middle, and it's interesting that it was the first thing w e found. Additionally, the $130 price tag on the development board is really very cheap compared to some other dev kits out there. 4.2.2 Microchip PIC32MZ DA The PIC32MZ DA has a large number of components, many of which we will not use. This microcontrol ler has a three -layer graphics controller that supports 24 -bit color, and is powered by a dedicated graphics processing unit (GPU), which is rare for a microcontroller. Once initiated, the GPU runs separately from the CPU to allow for graphics processing t o not impede the normal processing of the microcontroller. The GPU can draw lines, fill or clear rectangles, perform bit blitting, and handle transparency. Unlike most other microcontroller functionalities, a direct hardware interface (i.e. register access ) is unavailable, and development must use the provided library in the MPLAB Harmony Software. [ 68] Separate from the GPU is the Graphics LCD (GLCD) Controller, which is responsible for managing layers, color palettes, dithering, cursors, and directly inte rfacing with the screen hardware. All of the signal timing and refresh rates related to the screen are handled by the GLCD controller. While the GPU creates and changes the content of the memory buffer, the GLCD controller will be constantly transferring t hat display data to the assigned data bus; in fact, it even has its own direct memory access to offload this work from the CPU entirely. This controller supports varying screen sizes, varying color depths, layers, alpha blending, programmable cursors, and gamma, brightness, and contrast support. [75] 35 Figure 5. PIC32MZ DA Family Block Diagram [68] Courtesy of Microchip Technology The memory that the GPU and GLCD controller use for the frame buffer has its own controller separate f rom the main on -chip memory. Depending on which model PIC32MZ DA is purchased, this controller either controls 32MB of SDRAM integrated into the chip itself, or it has pins to control banks of external SDRAM. It is this dedicated memory directly connected to the graphics controller in the MZ DA that make it so well adapted to graphics -heavy projects. [68, 75] The PIC32MZ DA has six ADC modules: these analog -to-digital converters sample a voltage and return a numeric value based on the reading. Once enabled, an ADC will be constantly sampling its input, waiting for a trigger to tell it to hold the signal steady. Once 36 the trigger is received, the ADC module disconnects from its input, and begins its core functionality: successive approximation. Mathematically, the successive approximation register (SAR) is performing a binary search on the held voltage. Using a selection of comparators, the SAR first determines if the voltage is above or below \u00bd V CC, then depending on that result, if the voltage is above or bel ow \u00bc or \u00be V CC, on and on until it reaches its smallest comparisons. The ADCs in the PIC32MZ DA have 12 -bit resolution, so there are 12 layers of comparison that break down V CC into 2^12=4096 distinct voltage levels. [68, 74] The MZ DA also contains multiple communication interfaces: CAN, UART, SPI, I2C, USB, and Ethernet. Even though the Medspencer will require an Internet connection, it will be achieved by a separate Wi-Fi controller, not this Ethernet interface. However, that chip will have to be i nterfaced with, as well as the fingerprint scanner and motor controller. These communication interfaces will come in handy when interfacing with such a wide selection of peripherals. Additionally, we have the ability to add a USB port to the Medspencer , should it need computer communication, USB peripherals, or both. [68] 4.2.3 Microchip PIC32MZ DA Starter Kit The PIC32MZ DA Starter Kit is a PCB development board for the PIC32MZ DA. The board features a number of useful hardware expansions to the microcontr oller, allowing for functionality testing and rapid prototyping. The Starter Kit can be purchased with a choice of one of four microcontrollers, depending on if the customer wants a model with integrated RAM and/or a crypto engine. The microcontroller come s on a separate PCB called the Daughter Card which attaches to the Development Board. Once attached to the dev board, the microcontroller has a number of peripherals that it can use. [67] The Starter Kit features USB ports for power and UART communication, a Micro -SD card slot, an Ethernet port, three push -buttons, three LEDs, an onboard programmer -debugger, a 40-pin expansion connector, and a 168 -pin connector for application boards. In total, there are 5 USB ports on this board, each with a different purp ose: power, host -based applications, UART serial communication, on -board debugging, and OTG/device -based applications. Finally, a fun fact we noticed: the 40 expansion pins are mapped to the exact same functions as the 40 -pin expansion (J15) on the Raspber ry Pi (assumption being that Microchip has recognized the number of products that have been designed for that specification). [67] 37 Figure 6. J15 40 -pin expansion [ 67] Courtesy of Microchip Technology The 168 -pin application board connector (J3) on the back of the dev board is meant to connect to some other prototyping boards that Microchip sells. However, the datasheet provides both a part number for the mated connector (Hirose FX10A -168S -SV) and a pinout, which will allow us to a ttach our own LCD. The LCD we have chosen also provides a pinout and a recommended connector (Hirose FH12A -50S-0.5SH), and it should be possible to wire these two connectors together to prototype our own screen connection. [67] Besides its use for prototyp ing, this development board will be useful for another reason: its programming circuit. The board contains an In -Circuit Serial Programming module that connects to a computer via a USB port. The ICSP interfaces with the MCU through two data lines, and thos e data lines have jumpers on the board to physically disconnect the two pieces of equipment. These jumpers are present in case the developer wishes to use their own debugging hardware, however, it appears those jumpers would give access to the data lines c oming out of the on -board ISCP, and perhaps it could be used to program on off - board MCU. More testing will be required, but this could allow us to not have to purchase a chip programmer for this project. [67] 4.2.4 MPLAB Harmony MPLAB Harmony is a softwar e framework of modules that provide building blocks for constructing firmware for the PIC32. It is closely associated with other tools from Microchip, such as the MPLAB Harmony Configurator (MHC) and the MPLAB X integrated development environment. The MHC is a plugin for MPLAB X IDE to allow for a graphical representation of the chosen PIC32 MCU configurations. This gives simplicity to setting up the functions of an MCU, including clocks, pins, and software 38 modules. These tools will be used to construct the firmware for the Medispencer's MCU. [64] Figure 7. MPLAB Harmony generic block diagram [64] Courtesy of Microchip Technology MPLAB Harmony is a framework of libraries, supported by device drivers, that allow for the development of applications for the PIC32 family of microcontrollers. Closest to the hardware are Peripheral Libraries (PLIB), simple libraries that hide register de tails to the drivers above to allow more portability between hardware. The device drivers provide an interface between the peripheral and the software, allowing access to functionality through a consistent set of functions. These manage all access to a per ipheral, and so monitor concurrent accesses and managing the state of the peripheral. This multi -layered approach is designed to allow for portability between hardware, which is usually impossible when working closer to the hardware, as is normal with MCU s. The modular approach also encourages code reuse and usage of pre -made libraries, which saves developers time and difficulty. A different category of module is the middleware library. Some peripherals are too complex to control directly and require extr a processing power or interpreting complex protocols. Examples of these complex protocols include USB interfaces, network connections, or LCD controllers. These middleware stacks are built on device drivers and system services, and allow for a more abstrac ted control of these services. For the Medspencer , the LCD controller middleware will be of special importance. 39 Figure 8. MPLAB Harmony Middleware diagram [64] Courtesy of Microchip Technology Often, a firmware will have more th an one module that needs to access a system peripheral, such as a timer. If a module attempted to set the functionality of a timer while it was in use for another module, then they would likely catastrophically interfere. However, a layer of abstraction al lows for a System Service to control the peripheral, and handles the needs of multiple modules. The example system timer now has the responsibility to fulfil the modules' requests and keep them from interfering with each other. Figure 9. MPLAB Harmony System Service example [64] Courtesy of Microchip Technology Overall, the MPLAB Harmony firmware solution provides support for complex functionality and granular hardware abstraction, allowing unparalleled flexibility in hardware ch oice and multi -module support. 4.3 Display The display is the main communication channel between the system and the user. Whether it is general overviews of functionality, live updates of a specific task, or just pictures of cats, the display is how human s can see what the system is doing. Not only does the system communicate to the user through the screen, but with the addition of a touch -sensitive panel 40 over the display, the user can now communicate back. Infinitely more flexible than a keypad or a bank of switches, a touchscreen lets the system choose exactly what information it requires from the user, then presents them with a tailor -made interface to communicate through. Buttons, switches, knobs, keypads, even pen and paper can be emulated in the touch screen. This allows for unparalleled flexibility in intercommunication between machine and man. Consequently, the screen is a very important piece of hardware for the Medspencer . An administrator will need to enter strings of text into the system for pati ent names, medicine ids, and email addresses. However, the admin will also have to set up schedules, and that will take a very different kind of interaction than plain text. Additionally, the end users of this system will need to interact to ask for medica tion, or to answer alerts, or any number of other things. This broad scope of interaction is what makes the touchscreen such an important piece of the Medspencer : it acts as many different kinds of human interfaces. 4.3.1 Technical Background A screen is simply a large array of pixels, each with the capability to show a color. The amount of unique colors that can be shown on a screen is called its color depth, and this is directly related to the number of bits that indicate the color of a single pixel. The more bits that are used to define a color, the more variety of colors can be reproduced. To communicate this color information to a display, there is a set of data lines that are mapped to the color data bits. To display an image on the screen, you first set the screen's color data lines, to the value of the color you want the first pixel to be. Then, the clock signal pulses, which causes the screen to move on to the next pixel, and it reads in the value on the color data lines again. As the pixel being u pdated moves across the screen and then down to the next row, the data lines are set to the color for that pixel, and eventually fills the screen with colors. Now, obviously, this must happen very fast, as screens have a large number of pixels that must be refreshed multiple times per second. For the microcontroller producing this pixel data, it can be hard to know which pixel needs to be what color. Because the pixels are transmitted line -by-line, complex shapes, color shading, and multiple layers of obje cts could be very computationally difficult to process for each individual pixel, especially if that pixel's value depends on the values of pixels around it (eg. a blurring effect). The solution to this problem is called a frame buffer. A section of memory is set aside to contain a copy of the screen. This is a bitmap with the value of every pixel recorded. Now the microcontroller can draw anything it wants onto this buffer before it feeds it pixel -by-pixel to the screen. 4.3.2 Frame Buffer Space Saving Te chniques The screen chosen for this project is of resolution WVGA, which means it is 800 pixels wide by 480 pixels tall. It also supports 24 -bit color. If a frame buffer was used for a full - color screen this size, the microcontroller supporting it would ne ed over 1MB of RAM 41 (800 px * 480 px * 3 B). This is much more data than any budget microcontroller was intended to have to deal with. However, techniques exist to limit the amount of memory needed for the frame buffer. Figure 10. Basic 24 -bit color frame buffer; Total size: 1.099MB The simplest option is to limit the size of the stored colors. Instead of setting aside 24 bits for each pixel, only use 16 bits. A common way to partition 16 bits into red, green, and blue components i s the ratio of 5:6:5. This means a microcontroller only needs 16 output data lines: the extra wires for the screen's color data lines would be tied to ground to signify 0. Only the most significant bits of color data would be saved, squeezed into two bytes . This uses 2/3 the amount of memory as a full frame buffer (800 * 480 * 2B) and gives 65,536 possible colors, but some color depth is lost. Figure 11. 16-bit color frame buffer; Total size: 0.732 MB A more complex possibility is to use a color lookup table. This involves a frame buffer that doesn't store full 24 -bit colors, but only an index to a table that stores the full colors. A microcontroller using this strategy sends data to all 24 color data l ines on the screen, so the screen can show full -precision colors, but the frame buffer can only store a subset of those colors. A lookup table with 8 -bit color entries would allow the use of a frame buffer that takes half the memory as above and can only p roduce 256 different colors, but can utilize all of the color depth of the display. Figure 12. Frame buffer with 256 -color lookup table; Total size: 0.366 MB There is more cleverness that can be applied to the color lookup table s. If all that is going to be displayed on the screen are flat color menus, text, shapes, etc., then a full gamut of 1 2... 800 1C39B6F 1 0 5 22F11E5 2 3 4 2 33399FF ... 4008000 480 5 0 6 5D4CE4C 69604C842 colors is not needed, and the limited palette is acceptable for the given purpose. Even some anti-aliasing and smoothing between colors cou ld be displayed, if properly accounted for in the color table. If a full -color image was going to be displayed on the screen, then it should be pre -processed to determine the most -used colors, and come compressed with a color table. After all, if only a fr action of real colors can be displayed at once, then saving colors that aren't used in the image is a waste of color gamut. Indeed, depending on the size of the color table, the amount of memory available, and the application requirements, it wouldn't be u nfeasible to save multiple color tables and treat them as different palettes for different uses (e.g. This object uses palette 1, while that object uses palette 2, etc.). The developers for cartridge -based video game consoles were masters at these sorts of space - saving tricks. However, with all that research done, we decided to use a microcontroller large enough to handle the screen at full size. In the past, clever methods like these were required to store visual data in small memories, but given that mic rocontrollers exist today that not only can run a screen of this size, but also provide powerful graphics processing that is easily usable, these techniques are more trouble than they're worth. 4.3.3 Innolux AT070TN90 The screen requirements for the Medsp encer are fairly straightforward: it needs to be big enough to use as a keyboard, and the graphics don't need to be too complicated. The screen will be the main human interface for the Medspencer , used for menu systems, a keyboard, and visual alerts. There fore, the most basic use of the screen will be to show words and boxes: potentially a lot of them, possibly overlapping, and preferably in fun colors. These basic requirements are pretty simple. However, the MCU chosen to power this project, the PIC32MZ D A, is quite powerful, and will allow for much more than simple boxes and words. With transparencies, color blending, layers, and lots of storage, there are a number of possible ways for the display to be jazzed up (transition effects, full -color images, et c.). In reality, however, style and beauty come second to getting the thing to work, so plans of an aesthetic nature will be made once the team has excess time on their hands. The screen chosen for this project is an Innolux AT070TN90, a Chinese display c ommonly found in consumer electronics. There are a number floating around Amazon , eBay, and Alibaba, so they are pretty cheap (~$20). They have a WVGA resolution (800 x 480), support 24 -bit color, and can be found with a resistive touch panel incorporated into the screen. The datasheet contains a pinout for the 50 -channel flexible flat cable (FFC), which contains all of the color channels, power connections, and timing signals for the display. The datasheet also contains specifications for the exact timing to send the screen color data, though thankfully the PIC32MZ DA's LCD controller will handle the screen's timing requirements if you set it up properly. The datasheet gives a recommended connector for the FFC, a Hirose FH12A -50S-0.5SH. According to the pi nout, while many of the lines are simply data lines, with voltage levels that should switch between 0 and ~3.3, a number of wires are power lines, and require 43 much higher voltages than digital hardware usually calls for. This will certainly have to be taken into consideration when designing our power distribution for the product, as the Gate voltages go outside normal digital operating ranges. Table 3. Typical Operation Conditions [14 ] 4.3.4 Resistive Touchscreen This display sens es touch through a device called a resistive touchscreen. The touchscreen has three layers: one conductive layer with electrodes at across the top and bottom (Y1, Y2) of the screen, a spacer layer in the middle, and another layer with electrodes on the lef t and right (X1, X2) of the screen. Each of these electrodes has a wire connected to it that will connect to the microcontroller. Figure 13. Resistive touchscreen's layers and electrodes When the screen is touched, the top layer is pressed against the bottom layer and forms an electrical connection at that point. To measure the Y component, two different voltages are Min. Typ. Max. DV DD 3.0 3.3 3.6 V AVDD 10.2 10.4 10.6 V VGH 15.3 16.0 16.7 V VGL -7.7 -7.0 -6.3 V Input signal voltage VCOM 3.6 3.8 4.0 V Input logic high voltage VIH0.7 DV DD - DV DD V Input logic low voltage VIL 0 - 0.3 DVDDVValuesUnit Symbol Item Power voltage 44 placed at Y1 and Y2. This causes a voltage gradient across the Y layer, and the Y component of the touch location is a voltage in that gradient, relative to its location. At the point, the electrical connection between the X layer and the Y layer make the X layer's voltage equal to the point touched on the Y layer. The voltage of X1 or X2 can be measured, and the volt age of Y1 is obtained. This is in some sense similar to a voltage divider. Figure 14. Measuring the Y component of a touch This process can be repeated with the layers swapped to obtain the X component of the touch, and with these voltage measurements, the coordinate of the touch can be calculated. This type of screen is simple and robust, and can detect pressure of any sort, not just a finger. 4.4 Wi-Fi connection The following sections show the research that was done to give the microcontroller Wi-Fi connection capabilities , and the different approaches that were considered to solve the problem. Having a fast Internet conne ction is important for any piece of technology these days, so a quality solution was needed. 4.4.1 Wi-Fi modules In searching for a wireless frequency interface module, the module must be secure in the regulations and laws under the Section 3.1.2 and 3.2. 2, send and receive communication signals using protocols and regulations standards for internet connectivity, and must be a Texas Instrument product. 45 From the Texas Instrument site, the product that was chosen as the CC3220 SimpleLink Wi-Fi Wireless and I nternet -of-Things Solution, a Single -Chip Wireless MCU. This contained the requirement for the device that is being created with added features. The Microcontroller unit has up to 27 GPIO Pins, an Application Microcontroller Subsystem and Wi-Fi Network Pro cessor (NWP) Subsystem, high -level secure system Software Tamper Detection, cloning protection and secure boot. In Addition, for the future project the added feature of Internet -of-Things. In the Application microcontroller subsystem uses Cortex -M4 processor which is a 64 -bit ARM Thumb instruction an upgrade from previous education courses. Also in the application subsystem is advanced high -performance bus (AHB -Lite) interfaces: system bus interfaces and the low -cost debug solution featuring like Deb ug access to all memory and registers in the system, including access to memory -mapped devices, access to internal core registers when the core is halted, and access to debug control registers even while SYSRESETn is asserted. [ 77] 4.4.2 Microcontrollers w ith Wi-Fi Capability In the Wi-Fi Network Processor Subsystem includes dedicated ARM MCU to completely offload the host MCU along with an 802.11 b/g/n radio, baseband, and MAC with a powerful crypto engine for a fast, secure WLAN and Internet connect ions w ith 256 -bit encryption. [28 ] The SimpleLink Wi-Fi device incorporates a variety of features including standard -compliant secure transport layer (SSL/TLS), also referred to as secure sockets, domain name verification, secure content delivery, and device -unique identifiers to provide communication security at the network layer. The Wi-Fi Alliance has regulated security and compliance tests as part of its standards. The SimpleLink Wi-Fi device is a certified Wi-Fi Alliance device, and complies with all these s ecurity requirements. [ 28] The SimpleLink device provides a secure transport layer (secure sockets) based on standard -complaint implementation of SSL and TLS protocols, which are network protocols that involve cryptographic paradigms designed to provide co mmunications security over a TCP/IP connection. In most systems, the SSL/TLS is implemented as a layer on top of the transport layer. In the SimpleLink device, the SSL/TLS is embedded into the BSD socket layer, allowing seamless access to secure socket fac ilities. Extensions to the APIs provide the user some level of control over SSL/TLS behavior and configuration. The SSL/TLS runs on the network processor subsystem. By design, the architecture of the device is such that the networking processor is a physic ally separate process subsystem, creating a separate execution environment. Hardware accelerators are used to offload the intense arithmetic calculations involved in the cryptographic algorithms. [ 28] Certificate files, DH (Diffie -Hellman) parameters, and keys must be stored on the file system of the device to enable some of the SSL/TLS capabilities in accordance with the selected cipher suite. Certificates are standard -formatted files carrying public keys of an asymmetric key -pair, and are thus not confide ntial by nature. Private keys, on the other hand, are confidential and should be kept encrypted. Access control restrictions should be applied to these files, limiting read access to the rightful owner. The keys and certificates 46 are used internally by the SSL sockets when the handshake occurs. The host must only bind the related files to the SSL/TLS socket using APIs. The trusted root -certificate catalog is a file, provided and signed by TI, that contains a list of known and trusted root CAs (a complete lis t is available as part of TI SDK and collateral). The catalog holds trusted root certificates from commonly trusted CAs (such as VeriSign\u00ae, GoDaddy\u00ae, GeoTrust\u00ae, and more). The trusted root -certificate catalog also holds a list of revoked certificates known to TI. The trusted root -certificate catalog is used only in client mode. When acting as a server, using a self -signed root CA to authenticate a client is allowed. [ 28] When a root CA is unknown to the trusted root -certificate catalog, the sl_Connect comma nd returns the warning SL_ERROR_BSD_ESECUNKNOWNROOTCA, which means that the connection was successful, but the root CA used to verify the server chain of trust is unknown. In this case, the developer should make a choice whether to terminate the connection explicitly or proceed at its own risk. When a revoked certificate has been received during the SSL/TLS connection (all the certificate chain is checked) or if the root CA that has been set by the user is revoked, the handshake is terminated, and the SL_ER ROR_BSD_ESECCERTIFICATEREVOKED is returned by the sl_Connect command. The trusted root -certificate catalog is stored as a file in the file system, and can be updated to a newer version only. [ 28] 4.5 Fingerprint Scanner This project requires patient authen tication to ensure that only approved patients will use the Medspencer, and that patients receive only the medications that were prescribed to them. Passwords or pins can be easily stolen or forgotten. People who are elderly or have mental issues may also have a hard time remembering them. To these ends, we will utilize a fingerprint scanner. As every human has their own unique fingerprint, fingerprint scanning works as a secure method of identification. Thus, the fingerprint scanner provides an easy and se cure way for patients to identify themselves to the Medspencer. The two major technologies used for fingerprint scanning include optical scanning and capacitive scanning. Capacitive fingerprint scanners generate fingerprint images using electrical current . The sensor is made of one or more semiconductor chips containing an array of cells; each cell contains a capacitor. The sensor is connected to an integrator, a circuit built around an inverting operational amplifier. When placed on the sensor, the surfac e of the finger acts as a third capacitor plate. The varying distance between the sensor and the finger, caused by fingerprint valleys and ridges, causes a change in the total capacitance. Thus, the capacitor under a ridge will have greater capacitance tha n if it were under a valley. To scan the finger, a fixed charge is applied to the integrator. The capacitors affect the amplifier's voltage output, which can be measured to determine whether the voltage is characteristic of a ridge or a valley. By reading every cell in the sensor array, an overall fingerprint image can be produced [ 47]. Meanwhile, the touch surface of an optical fingerprint scanner is a glass surface, and underneath the glass is a light source (such as a light -emitting diode or a layer of p hosphor) 47 which illuminates the touch surface for digital capture. The light illuminates and reflects off the finger, and the reflected light passes onto the charge coupled device (CCD), which is an array of light -sensitive diodes called photosites. Each ph otosite generates an electrical signal in response to photons. The conversion of photons into electrons by the individual photosites allows the information to be stored and transformed into pixels, which collectively make up digital images [ 47,81]. An adva ntage of capacitive scanners is that they require a real fingerprint -type shape, which makes them harder to trick. They are also more compact than optical sensors, since the semiconductor chip is smaller than a CCD unit [ 47]. An advantage of optical sensor s is lower maintenance; capacitive scanners are more sensitive, as they require constant surface protection from electrostatic discharge (which could permanently damage the sensor). Other advantages of optical sensors include lower price, larger imaging su rface areas, and higher resolution [ 81]. While biometric fingerprint analysis is an effective way to secure systems, it is not infallible. There are different methods by which a user could trick a fingerprint scanner. Optical scanners sometimes cannot tell the difference between a picture of a finger and the finger itself. Meanwhile, capacitive scanners can be fooled with a mold of a finger. To make systems more reliable, additional pulse and heat sensors could be used to verify that the scanned finger is r eal, live finger. Another method to make systems more reliable is to combine biometric analysis with another security measure, such as a password. However, for the Medspencer, we want our system to be easy to use for the elderly and other people with possi ble mental or psychological issues. These people may have trouble remembering passwords. After considering our target consumers, we decided fingerprint scanning will be our primary method of identification. To make the device more secure however, we could add pulse or heat sensors [ 47]. 4.6 Motors On choosing a motor between brushless DC motors, servo motors or inverters? When it comes to speed control, the common choice is a three -phase induction motor that controls speed by use of a general -purpose inverter. For many, this may be the natural choice because it allows you to freely set a temporary driving speed that you can change in the future. If speed, torque, or improved controls are needed, upgrading to a servo motor is certainly an option. Howeve r, considering the relatively low cost of the inverter driven three -phase motor, by changing to a servo motor you will face the problem of increasing expenditure. The servo motor stabilizes speed and solves the problem of synchronization of multiple convey ors, but taking cost into consideration, compromises in your setup would almost certainly be necessary. The position of the brushless DC motor is, in simple terms, between the inverter and the servo motor. It is a motor dedicated to speed control that cont rols speed as effectively as a servo motor for a lower price, closer to that of an inverter. Most AC induction motor inverters do not communicate with the motor, however recently with additional encoders or analog signal devices added separately to the mot or or moving parts, this is becoming an option. The drawback is the additional costs and tuning to a typically low cost solution. The majority of today's inverters still run open loop. Under the 48 open -loop system, when the load changes, the actual speed doe s not follow the command. This is why the speed changes (slower when more load is added) and depending on the load, why speed synchronization over multiple axes is difficult. Also, because torque is lower in an AC motor at high or low speeds from rated spe ed, which is an inherent torque characteristic of the three -phase motor, it is difficult to obtain both the speed and torque you want at the same time. The inverter is effective when the operation continues at a fixed speed, but it is not ideal for multi -speed operations. Heat is also a common component to AC induction motors. To combat this a cooling fan is attached to the back of the motor. Due to the AC induction motors design, heat rises when the motor runs slow and the cooling fan is runs slower. Inver sely, when the motor is running at high speed, heat from the windings is also increasing. Both the servo motor and the brushless DC motor adopt a PM motor (permanent magnet is used for the rotor) and come standard with closed -loop speed control, where the motors operation status is fed back to the driver. This ensures the motor speed remains constant at the commanded level and enables the speed of two motor axes to be synchronized. Additionally, flat torque is produced whether operating at high or low speed . Even if the load changes, at whatever speed is commanded, stable driving speed is ensured. This means these two motors are highly effective in situations in which the inverter struggles. Needless to say, the servo motor is different from the brushless DC motor. Generally speaking, the difference is that one is capable of high performance and all around speed control, while the other is dedicated solely to speed control. [ 23] 4.7 Speaker One of the functions that we plan to include in the Medspencer is the function to remind the patient when it is time to take their dose of medicine. In order to alert the patient, we plan to utilize a buzzer or speaker. When it is time for a patient to take a medication dose, the speaker will play a simple sound or beep to alert the patient. A cheap and commonly used audio device is the piezo buzzer, and it can be used to make simple beeps, tones, and alerts. The working principle of the piezo buzzer is based on the inverse piezoelectric effect, which was discovered in 1880 by Jacques and Pierre Curie. The piezoelectric effect states that when certain solid materials (such as crystals and certain ceramics) experience applied mechanical stress, electric charge will accumulate. The inverse is also true; an applied electric fie ld can result in the generation of mechanical strain [69]. A piezo buzzer makes use of a piezoelectric element such as a crystal or ceramic. When an AC voltage with a frequency in the kHz range is applied across the piezoelectric element, the element unde rgoes mechanical stress and deformation, resulting in some oscillation. This oscillation will occur at the same frequency as the AC signal and will result in an audible sound. The usable frequency range depends on the materials that are used in the piezo b uzzer. Piezo buzzers generate sharp sounds, so they are typically used as alarms or alerts [ 49]. 49 Another possible audio device we may use is a small passive speaker. This speaker employs a passive radiator and an active loudspeaker (main driver). The loud speaker is an electroacoustic transducer, and converts an electrical audio signal into a corresponding sound. The most common type of speaker is a dynamic speaker, and it uses a voice coil, which is a coil of wire suspended in a circular gap between the po les of a permanent magnet. When an alternating current is applied to the voice coil, the coil is forced to move back and forth, according to Faraday's law of induction. This causes a conically shaped diaphragm that is attached to the coil to move back and forth, which pushes on the air to create sound waves [ 62]. The passive radiator is also known as a drone cone. The passive speaker uses the sound trapped in the enclosure to excite a resonance that allows the speaker to output deeper pitches. The resonance frequency is determined by the passive radiator's mass. Passive radiators are commonly used in home stereo speakers, subwoofer cabinets and car audio speaker systems [ 66]. 4.8 Power This section details the research that went into determining how to provi de power to our device. This includes considerations such as the power source, transforming and AC -to- DC conversion, power regulation, filtering, and low power modes. 4.8.1 Power Supply To power the Medspencer, we plan to use standard city power. In the United States, the AC power standard is 120 V and 60 Hz. To power a device using this AC power, first the power must be scaled down to safer levels using a transformer. Then we must conver t the AC power to DC power. Finally, the voltage and current levels must be scaled down according to the ratings of each component of the Medspencer. To build an AC to DC converter, first it requires a transformer to decrease the AC voltage amplitude. The n the secondary side of the transformer is connected to a full wave rectifier circuit, which makes the entire voltage waveform positive. A capacitor is used to filter the voltage waveform and convert the voltage to a constant DC output. The capacitor filte ring accomplishes this because as the AC input voltage decreases below its maximum value, the capacitor discharges, which keeps the output voltage at a roughly constant value. A ripple voltage can be observed in the output voltage waveform. The transformer -based AC to DC ci rcuit is shown below in Figure 15 , and it includes the transformer, full wave rectifier, and filtering capacitor [ 37, 59 ]. 50 Figure 15. Filtered full wave rectifier 4.8.2 Power Regulation and Filtering In order t o power each individual component of the Medspencer, the voltages and currents must be scaled down to match the ratings of the components. We will use voltage regulators and current limiting circuits to scale down the voltage and current, to avoid damaging any of our hardware components. To limit the voltage input to components, we plan to purchase voltage regulators, such as low-dropout (LDO) voltage regulators. Voltage regulators can be placed in parallel to the load, connected to the power supply and gro und. This will keep the load input voltage regulated to safe operating levels To limit the current flowing into the components, current limiting circuits will be used. A few options for circuits to limit current involve using a voltage regulator, op -amps, BJTs, or MOSFETs. It is important to make sure that the components that are used have high enough power ratings so they can dissipate the maximum received power in the worst -case scenario (i.e. if the load was a short). The power input to each component s hould be filtered of noise. To filter out noise, capacitors can be placed in parallel to a load; these are called decoupling capacitors or bypass capacitors. Decoupling capacitors suppress high -frequency noise in the power supply, which may cause damage to sensitive hardware components. The current -voltage relation for a capacitor is I(t) = C dV(t) / dt. This equation shows that for constant voltage DC operation, there is zero current, and the capacitor acts like an open circuit. For high frequency power su pply, the capacitor acts like a short circuit. Thus, using a decoupling capacitor allows high frequency noise to be shorted to ground, while the DC voltage supply still goes to the load. 51 4.9 Communication Protocols This section discusses the different com munication protocols that may be used for the Medspencer and compares them. The relevant communication protocols that we will discuss in this section include SPI, UART, and I2C. First, communication channels can be simplex, half duplex, or full duplex. Si mplex communication channels can only send information in one direction. Half duplex communication channels may transmit data in both directions, however it can only communicate in one direction at a time. Full duplex communication channels may transmit data in both directions simultaneously [ 65]. Data can be transmitted either in parallel or serial form. For parallel communication, bits are sent at the same time through separate wire connections. For serial communication, the data bits are sent serially th rough a single wire [ 18]. SPI stands for Serial Peripheral Interface, and it is synchronous and full duplex. Unlike UART or I2C communication, SPI allows for data to be transmitted continuously, as data is not send in packets. SPI communication also allows for a single master to control multiple slave systems. The speed of data transfer and sampling is determined the clock frequency, which is configured by the master system. The master can communicate with multiple slaves by setting the slave select pins. S laves can be wired in parallel (if there are multiple slave select pins), or they can be daisy -chained (if only one slave select pin is available). The connections for parallel slaves are s hown below in Figure 16 . Data is transferred serially through MOSI (master output/slave input) and MISO (master input/slave output) lines. In total, four connections are required: clock, slave select, MOSI, and MISO. Disadvantages of SPI include that there is no acknowledgement that data was received, or error checking (l ike with a parity bit ) [18]. Figure 16. SPI communication using multiple slaves connected in parallel [ 18] Courtesy of Circuit Basics 52 UART stands for Universal Asynchronous Receiver/Transmitter, and consists of a physical circuit connection for a microcontroller or IC. UART communication is asynchronous and full duplex, and can transmit and receive serial data. Two UARTs communicate dire ctly between each other using just two wires. The TXD pin of one UART is connected to the RXD pin of the other UART, as shown below in Figure 17. First the transmitting UART converts parallel data into serial form, then transmits it to the receiving UART, as shown below in Figure 18. The transmitting UART adds start, parity, and stop bits to the transmitted data packet, which define the beginning and end and allow for error checking. The organization of the data packet is shown in Figure 18 . The receiving U ART reads the incoming bits at the Baud rate frequency; both UARTs must operate at the same Baud rate [20]. Figure 17. UART communication connections Courtesy of Circuit Basics [ 20] Figure 18. Transfe r of data packets using UART communication Courtesy of Circuit Basics [ 20] I2C stands for Inter Integrated Circuits, and it is synchronous, half duplex, and allows for multiple masters and multiple slaves. Similar to UART, I2C only requires two wires to transmit data between devices. One line allows the master and slave to send and receive serial communication. The other line carries the clock signal, which is controlled by the master. The connections required for multiple masters and mult iple slaves is sh own in Figure 19 . Data is transferred in messages, and they include start and stop conditions as well as acknowledge bits. The address frame specifies the slave to be communicated with; each slave compares the address sent from the master to its own addres s, and will return an acknowledge if it matches. The overall organization of a data mess age for I2C is shown in Figure 20 . An advantage of I2C communication is that it supports multiple masters and 53 slaves, and the acknowledge bit confirms whether frames ar e transferred correctly. However, I2C communication has a slower data transfer rate than SPI communication, and requires more complicated hardware implementation [ 19]. Figure 19. I2C communication connections using multiple maste rs and multiple slaves Courtesy of Circuit Basics [ 19] Figure 20. Data message organization for I2C communication Courtesy of Circuit Basics [ 19] 54 5.0 Project Hardware and Software Design Details This chapter will discuss the design details of our Medspencer device. The first half discusses the hardware design of the Medspencer and provides details on the component choices and designed circuit schematics. When looking into specific hardware compone nts, we considered the project requirements, the available technologies, and the pros and cons of all the available products for purchase. The second half of the chapter discusses the software choices and designs. 5.1 Hardware Design Section 5.1 details t he physical hardware components, interfaces, and electrical circuit connections that will be used to build the Medspencer. The first section presents an overarching view of all the hardware components used for the Medspencer. The specific hardware componen ts that we have chosen and their characteristics and ratings are presented, as well as detailed circuit schematics that will interface the power supply, MCU, and peripherals. 5.1.1 Hardware Block Diagram For the senior design project, the first task of our team was to write an initial \"Divide and Conquer\" document. In this document, we included a hardware block diagram that illustrates the general design plan ideas and necessary hardware components. We split up the project based on components, in order to e nsure that each team member contributes equally. For this project, the hardware components that are required include the microcontroller, WVGA touchscreen display, Wi-Fi module, fingerprint scanner, speaker, and motors. The components are displayed below in the hardware block diagram in Figure 2 1. The components are color coded according to which team member the responsibility is assigned to. In addition, the progress status is indicated within each block. 55 Figure 21. Hardware block diagram with components assigned to team members Laying out this initial block diagram allowed us to create a good starting point for designing the Medspencer. After further research and testing, it is possible that the design may change, and team me mber responsibilities may shift. However, this block diagram displays a good overarching view of our plan to design and build the Medspencer. 5.1.2 Hardware Design O verview A prototype for the MedSpencer is being worked at the moment. Throughout the report the different components and parts regarding hardware and software were mentioned and explained in order to give more detailed explanation of the project functionality. The purpose of this section is to theoretically assemble all these components and get a clear image of how the MedSpencer will work. From the electronic inner components to the outer enclosure, this subsection will list the characteristics for which these parts were selected and how they help to achieve the objective in a better way. Every thing starts knowing that this device will be manufactured for domestic use, so that will limit the size. If it will be screwed to the wall or just on top of a table, the dispenser must has a comfortable size. 56 Figure 22. Dispen ser enclosure [84] Courtesy of Atlas America n The dimension of the device must not exceed the 10\" depth, the height should be enough with 24\" and width of 20\". What we try to accomplish is to limit the usage of the dispenser for only those who take medicat ion regularly and to not to store unnecessary medicine there that will expire or take valuable space for other important medication. The enclosure should be big enough to store at least six different medication. Let us take in consideration that those med ication will be sealed and with the Florida weather, the temperature of the inside of the dispenser will increase ruining the effectiveness of the medication. A cooling fan system will be added. As this fan only uses 5V to turn on, it will not represent as much load to the system. According to the cooling fan description, it has a capacity of air flow of 9.5 cfm (cubic feet minute) and if our enclosure will keep the same measures of 2.78 cubic feet, then our cooling fan has the ideal size, power consumption and air flow capacity that meets the project's needs. One of the key features of the MedSpencer is that it will recognize the patient by asking to place his or her fingerprint in order to begin the process of dispensing. As the fingerprint was already sto red in a local database, the machine links the fingerprint with the patient info. In order to save energy we might just turn the fingerprint reader on only when the scheduled medicine matches the time, but another key feature of the MedSpencer is that the patient may take the medicine out whenever is possible. For instance, to take medication with them when they are leaving home. For that reason, we cannot turn the fingerprint reader off. MedSpencer is also considering those patients who are considered hand icapped and are under supervision of a caretaker, so those caretakers are going to be linked to the patients info. As we are assuming that this device will be for domestic use only, the only people allowed will be the ones that live in the household, so t here must be enough room for the medication container of each one who takes medication regularly. These containers should be cylinders or prism that can bear enough medication. According to the section 211.56 for the FDA 57 sanitation, the containers should b e replaced every 6 months. From the many options online that fit the project's needs, the next one found on Amazon is the one that fits every criteria of cost and effectiveness. Figure 23. Plastic tube us ed for medication storage [29] Courtesy of Amazon The dispensing system will use the small servo motors SG90. As these motors only come with the pivoting arms, we must design our own filter. 5.1.3 Microcontroller Design The microcontroller, as the brains o f the operation, will have to communicate with every other module to coordinate their efforts. The display is connected to the microcontroller's GLCD controller. It has direct pinouts for the data enable (GEN), V -Sync (VSYNC), H -Sync (HSYNC), clock (GCLK) , and color data (GD<23:0>). These are the only data lines it needs to control the screen. The timing of the microcontroller's data signals is very important for a fully functioning screen. If the timing is off, then the image will be distorted, or may no t even show at all. Fortunately, the GLCD controller provides software and reference material support for properly setting up the synchronization. The horizontal and vertical synchronization (HSync and VSync) are calculated by the GLCD controller, but they require timing measurements for the display. These \"front porch\", \"back porch\", and \"blanking\" the display's datasheet. [14, 75] 58 Table 4. Timing values [ 14, 75 ] FPORCHX 800 + 210 BLANKINGX FPORCHX + 46 BPORCHX 480 + 22 FPORCHY + 23 BPORCHY 525 To operate the touchscreen, six pins will be needed on the microcontroller. Four pins will be digital outputs attached to the electrodes of the touchscreen, and two pins will be analog - to-digital converters (ADC). For this project, the output pins will be called X 1, X2, Y1, and Y2, and the ADCs will be ADC X and ADC Y. See Section 4.3.4 above for a primer on resistive touchscreens. When a dimension is trying to be measured (let's u se the X direction for this example), the X1 and X 2 output pins will be set to high and low, respectively. This results in a voltage of 3.3 V on X 1 and 0 V on X 2. Now, if there is a touch on the screen, ADC X should be able to measure a voltage whose value depends on the location of the touch. However, ADC X is connected to the same wire as Y 1 is, so if Y 1 was setting that line to some voltage, then ADC X would be measuring the output of Y 1, not the signal coming through the screen. To remedy this, Y 1 and Y 2 must be set to \"high -z\", or high impedance, when not needed. High impedance means that the pin is not outputting voltage and has an arbitrarily large resistance, effectively separating it from the circuit. How this is done in the microcontroller itself is still a bit fuzzy, but it should be possible. Something about setting the output pin to an input pin and disabling all the pull -up and pull -down resistors seems to be the most common method; more research is needed. Table 5. Pin se ttings for touchscreen measuring X Y X1 (V) 3.3V High X2 0V High -Z ADCX On Off ADCY Off On The other modules in the Medspencer will be connected over much more advance interfaces. The fingerprint scanner communicates via a UART connection. The datasheet explains all the commands you can send it and the format of its message frames. The Wi- Fi module and servo -motor controller will both be communicated with over SPI. This will be fast er than a UART connection. The PIC32 has 6 SPI modules, so it will be simple to set up. The speaker will run off of a PWM (pulse width modulation) signal from the microcontroller, which will then be run through a low -pass filter and audio amplifier. 59 5.1.4 Wi-Fi Module The following sections describes what devices can better communicate with the microcontroller to send data through Wi-Fi. The SimpleLink CC3220 Wi-Fi Internet -on-a-chip, as seen in Figure 24, has a Single -Chip with Two separate execution envi ronment, a user application dedicated ARM Cortex -M4 MCU and a network processor MCU to run all Wi-Fi and Internet Logical layers. In the Power Management Subsystem for the Digital DC -DC (Pin 44) Input a VBAT wide voltage (2.1 to 3.6 V) or preregulated 1.85 V. The ANA1 DC -DC (Pin 37) Input a VBAT wide voltage (2.1 to 3.6 V) however the preregulated 1.85 -V mode i s bypassed. [80 ] In the preregulated 1.85 -V mode, the regulator providing the 1.85 V must have the following characteristics. First, a load current c apacity 900 mA and Line and load regulation with <2% ripple with 500 -mA step current sand settling time of < 4 us with the load step. [ 28] GPIO Pins Except for 29, 30, 50, 52 and 53 High -level Output current is 6 -mA and the High -level Output voltage is t he supply voltage times 0.7 -V. High -level Input current is 5 - nA and the High -level Input Voltage is minimum 0.65 times supply voltage to 0.5 plus supplied voltage. GPIO Pins for 29, 30, 50, 52 and 53 for the High -level Output current is 3.5-mA and the High -level Output Voltage is the supply voltage times 0.7 -V. High -level Input current is 50 -nA and the High -level Input Voltage is minimum 0.65 times supply voltage to 0.5 plus supplied voltage. [ 28] Wi-Fi capability on receiving signal with CC3220 SimpleLink requires a minimum threshold of 2.1 -V to 3.6 -V. However, the preregulated 1.85 -V mode to give a sensitivity of 8% PER for 11b rates and 10% PER for 11g/11n rates is about 0.25 - to 1-dB lower for -71.5 dBm or -70.5 dBm. WLAN transmitter signal requires a m inimum threshold of 2.1 -V to 3.6 -V. However, to operate during a preregulated 1.85 -V mode requires a maximum TX power is 0.25 - 50 0.75-dB lower for modulations higher than 18 OFDM which includes the MCS7 for regular 802.11 b/g/n connections. 60 Figure 24. CC3220 LaunchPad EVM Overview Courtesy of Texas Instruments 5.1.5 Display Design The screen requires a number of signal and power lines to operate correctly. The GLCD controller on the microprocessor provides direct pinouts for the screen enable (DE), V - Sync (VS), H -Sync (HS), clock (DCLK), and color data (R<7:0>, G<7:0>, B<7:0>). Additionally, there are some data lines that will have to be hardwired. V COM, obviously, will just go to digital ground to tie the screen into the circuit . MODE should be pulled high to enable horizontal and vertical synchronization. The L/R and U/D should be high and low, respectively, to indicate up to down and left to right. RESET should be normally be pulled high, but if pulled low will cause the displa y to enter its reset state. The datasheet suggests attaching to an RC reset circuit, which seems reasonable. 61 Table 6. Pin Assignment [ 14] Pinout Symbol Power/Input Description 5,36,38,48 GND P Power ground 6,46 VCOM I Common voltage 7 DV DD P Power for digital circuit 8 MODE I DE/Sync mode select 9 DE I Data input enable 10 VS I Vertical sync input 11 HS I Horizontal sync input 12-19 B<7:0> I Blue data 20-27 G<7:0> I Green data 28-35 R<7:0> I Red data 37 DCLK I Sample clock 39 L/R I Left/right selection 40 U/D I Up/down selection 41 VGH P Gate ON voltage 42 VGL P Gate OFF voltage 43 AV DD P Power for Analog circuit 44 RESET I Global reset pin 47 DITHB I Dithering function Figure 25. Power supply connections for touchscreen display To power the analog circuit, the screen requires an AV DD at 10.4 V and IAV DD around 20 mA. V GH should be biased to 16 V and V GL should be biased to -7 V, with currents less than 1 mA. These voltage levels draw very little current because they bias the transistors that make up the screen ( thin film transistor display). The schematics used to connect the 20 V, 1 A power supply to the screen in puts are shown below in Figure 25 . A 12 V voltage regulator and c urrent limiting circuit with some voltage drop are used to provide power to 62 AV DD. An inverting op -amp can be used to provide the negative bias to V GL. A current limiting circuit with a voltage drop is used to provide bias to V GH. 5.1.6 Fingerprint Scanner The fingerprint scanner that we will utilize for this project is the R307 Fingerprint Identification Module by Hangzhou GROW [ 70]. This fingerprint scanner utilizes an optical sensor to scan the fingerprint and create a digital image. A picture of the R3 07 fingerprint module is displayed in Figure 26 . The specifications and ratings for th e R307 are summarized in Table 7 [70]. Figure 26. Picture of R307 fingerprint module [ 70] Courtesy of Hangzhou GROW Table 7. R307 Fingerprint Module Specifications and Ratings [ 70] Power input Working current Finger detection power Baud rate Image acquiring time Average search time Template size 4.2-6 V or 3.3 V 50 mA, <75-80 mA 3.3-5 V (5 A) 9600*N bps, N=1~12 (default N=6) <0.5 sec <1 sec (1:1000) 512 bytes The fingerprint module comes with a scanner, detection section, and four pins for connections, which include power supply, ground, RXD, and TXD. The module requires 200 msec for initialization, during which it cannot accept commands. Fingerprint processing involves two parts, fingerprint enrollment and fingerprint matching. When enrolling a fingerprint, the user must enter the fingerprint two times. The system will process the two finger images, then generate and store a template of the finger. When matching, the user enters the fingerprint and the system will generate a template of the finger and compare it with the templates in the fingerprint library. The matching mode can be either 1:1 or 1:N . For 1:1 matching, the fingerprint module will compare the live finger with a specific template designated in the module. Meanwhile for 1:N matching, or 63 searching, the system will search the entire fingerprint library for the matching finger. The system w ill return either a success or failure, depending on whether a match is found [ 70]. Figure 27. Exterior interface of the R307 fingerprint module [ 70] Courtesy of Hangzhou GROW The hardware interface is UART or USB. The R307 uses serial interfaces and TTL logic levels. Via the serial interface, the module may communicate with an MCU of 3.3 V or 5 V power. The hardware interface of the R307 fingerprint m odule is shown below in Figure 27. The module may be powered using either 3.3 V or 5 V (4.2 -6 V); to use 3.3 V operation, short the connection between the two contacts located next to the label \"3.3 V \" [42, 70 ]. The module has a working supply current of 50 mA (typical), or <75 -80 mA. The module may communicate with an MCU of 3.3 or 5 V via serial interface. To connect the module to the MCU, the R307's pin 3 (TXD) connects to the MCU's receiving pin, and the R307's pin 4 (RXD) connects to the MCU's transmitting pin [70]. Figure 28. Circuit diagram for the R307 fingerprint module 64 The circuit diagram in Figure 28 shows the connections between the R307 fingerprint module, the MCU, and 20 V power supply. The operating current is limited to 50 mA, using two resistors and two 2N2102 NPN transistors. A REG1117 vol tage regulator is used to limit the operating voltage to 5 V. RB is designed to have a voltage drop of 5 V, so that the voltage regulator will have a safe input voltage. 5.1.7 Motors & Dispensing The servo motors are the SG90 that are compatible with Arduino and MSP430 microprocessors. This little devices are small enough to fit within the MedSpencer enclosure. They come with different size arms but for the purpose of this project we are going to create a filter that allows to pass one or more medicati on, taking in consideration the dosage for the patient. By default this servo are only allowed a 180 degree turn, but we a minor \"hack\" we can allow it to make a 360 degree turn. This will not be necessary because the dispensing will only require small deg ree turns. This servo motors are appropriate for the project because they do not use too much voltage to operate. Their operating voltage are between 4.8V to 6V. That means that with a voltage power supply of 12V we may put in parallel a series of two ser vos that will be dispensing the dosage of each of the medication container. Figure 29. Servo motor with respective connection [ 86]. Courtesy of Amazon For this project we will be using just four patients and two of them will be a ssigned two medication container, that means two different servo motor will be available for those specific patients but then just one will be turned on at a specific medication schedule. All medication will be in containers and at the bottom of the contai ners will be the filter that will be powered by the servo. At the dispensing time, the filter will only allow to dispense the proper dosage (one or two pills) which will slide through a series of tubes to get to the base of the device. The MedSpencer will have an opening where the patient can introduce his or her hand to reach out the medication. If patients does not meet their schedule dosage, 65 the dispenser will neither dispense nor store -to-the-side, it will just not activate the servo. Remember that the MedSpencer will only dispense the proper medicine at the proper time only when it reads the corresponding fingerprint. The schematic for the servomotors is shown in Figure 30. Figure 30. Servo motor schematics Next is a detailed list of the different servos considered for this project and their respective prices. Table 8. Servos classified by price. Prices courtesy from Amazon Servo The difference between this servos is their capabilities. Most of them are only 180 degrees rotation, the most expensives are considered helicopter due to their capacity of 360 degrees rotation. Even though they range the same price, their features are quite d ifferent. The input voltage is a key feature to be considered when calculating power consumption and also how this is going to affect the client's' financial situation. 66 5.1.8 Speaker The main and solely purpose for the speakers is for the dispenser to aler t the patient to take the medicine, and it will continue sounding for 20 minutes after the schedule time or until the patient place his or her fingerprint to take the medicine. As the speaker only uses 5V we can place it in series with the fingerprint and in parallel with the voltage supply. Why consider a speaker rather than a buzzer? Because we want to alert the patient about the important medication, the buzzer will not be heard. While running some test on how the speakers will work, the following image shows the connection set when testing the speaker. Figure 31. Connection descripti on for an Arduino [58] Courtesy of Amazon It was considered to record an alert voice, but that will take more lines of code for the computer engin eers and that will result in a possible delay of the program. Compared to other speakers, this has better reviews and also did not use a lot of input voltage to power on. The project needs as smal l speakers as possible and the m arket offers a large variety of them but they are either too expensive or consume a lot of power. Table 9. Speaker modules according to prices. Prices courtesy from Amazon speaker price CQRANQI0007 US $7.87 DROK TDA7297 $15.58 CYT1027 $7.82 67 This speakers mentioned goes from speakers to buzzers. Their differences goes from a huge power consumption to their complexity to assemble it the main board. The CQRANQI0007 US was chosen due to its simplicity, low power consumption and its fast shipping option. On the next picture we are showing the schematic of the used speaker properly chosen for its features. Figure 32. Speaker schematic [56] Courtesy of Circuit Digest 5.1.9 Power Supply To power the Medspencer, we will use standard U.S. domestic power. We plan to purchase an AC to DC adapter and a DC power jack to mount on the PCB. The AC adapter we are looking for is a 20 V, 1 A adapter. It takes an AC input of 110 -240 V, and can give a DC output of 20 V and 1 A. The DC plugs are inner p ositive and outer negative. The female DC power jack will have ratings corresponding to the adapter output. The DC power jack has three pins, as shown below in Figure 3 3. Pin 1 is connected to positive power, and pin 2 is connected to ground. Pin 3 can be connected to a battery. When the plug is inserted, the connection between pins 3 and 2 breaks. If we choose not to use this backup power feature, we can leave pin 3 unconnected or grounded so it is permanently connected to pin 2. 68 Figure 33. 3-pin DC power barrel connector [ 32] Courtesy of Digi-Key The AC adapter converts the AC power to a 20 V, 1 A DC output. This corresponds to a power of 20 W, according to the relation P = I x V. However, each component used for this project has different voltage and current ratings. We will use voltage regulators and current limiting circuits to scale down the voltage and current, to avoid damaging any of our hardware components. 5.1.10 Power Regulation and Filtering The main DC powe r supply for the device is 20 W (20 V and 1 A), after undergoing transformation and AC -DC conversion. The power ratings of all the hardware components used for this p roject are summarized in Table 10 . To provide the correct voltages and currents to each co mponent, we must use voltage regulators and current limiting circuits. The PIC32MZ DA microcontroller datasheet recommends low -dropout (LDO) voltage regulators [ 68]. Table 10. Power ratings for various hardware components Vsupp (V) Isupp (A) I/O pin tolerance MCU PIC32MZ DA 2.2-3.6 V <300 mA 5 V 32 mA Fingerprint module R307 4.2-6 V or 3.3 V 50 (typ), <75 -80 mA 5 V or 3.3 V 5 A Touchscreen AT070TN90 10.4 (typ), <13.5 V module CC3220 3.6 V (typ) 80 mA (typ) 1.8 ~ 3.3 V Motor control AA51880 4.8 ~ 7 V 25 (typ), <28 mA Servomotor SG90 4.8 ~ 6.5 V 550 mA 3.3 ~ 5 V Speaker CQRANAI0007US 5 V 613 mA To ensure the correct voltage is supplied across each hardware component, LM78XX voltage regulators and LDO voltage regulators will be used. LM78XX voltage regulators 69 can provide various output voltages at 1 A. The electrical characteristics for a few of t he voltage regulators from the LM78XX family are shown below in Table 11 [61]. Table 11. Electrical Characteristics LM78XX Device VOUT (V) VIN, MAX (V) VIN, MIN (V) IOUT, PEAK (A) LM7805 5 35 7.5 2.2 LM7812 12 35 14.6 2.2 LM7815 15 35 17.7 2.2 We have decided to utilize LDO voltage regulators from the REG1117 family [ 71]. The available versions can provide 1.8 V, 2.5 V, 2.85 V, 3.3 V, 5 V, and adjustable regulation voltages. These regulators can handle currents of 800 mA or 1 A, and can take a maximum input voltage of +15 V. The electrical characteristics for the REG1117 family is shown below in Table 12 [71]. Table 12. Electrical Characteristics REG1117A Device VOUT (V) VIN, MAX (V) VIN, MIN (V) IOUT, PEAK (A) REG1117A -1.8 1.8 15 2.8 1 REG1117A -2.5 2.5 15 3.5 1 REG1117A -2.85 2.85 15 3.85 1 REG1117A -3.3 3.3 15 4.3 1 REG1117A -5 5 15 6 1 For a voltage regulator, there are three pins for V IN, V OUT, and Ground. The basic circuit connections for fixed -voltage voltage regul ators is shown below in Figure 34 . Figure 34. Basic connections for fixed -voltage voltage regulator To control the operating current for each hardware component, current limiting circuits utilizing BJT s and resistors will be used. The BJTs we use for this design are 2N2102, which are NPN transistors and have a V CE(sat) of 0.5 V [2]. The basic ci rcuit is shown below in Figure 35 and it includes two resisters and two NPN transistors. R SENSE is used as a 70 current sense resistor, and it monitors the collector -emitter current flowing through T3. The voltage drop over R SENSE increases as T3's collector -emitter current increases, until VRSENSE reaches V CE(sat) . Then, T4 will turn on and divert som e current from the base of T3, which limits T3's collector -emitter current since for a BJT, I E = (1+h FE)IB. Thus, the load current is limited to V CE(sat) / RSENSE . To design the resistor values, the used are I RBIAS = hFE, RBIAS = V RBIAS / , and R SENSE = V CE(sat) / ILOAD. The circuits were designed for a gain h FE corresponding to the desired load current (read from the transistor data sheet), and a voltage drop of 5 V across R BIAS at the desired load current. Figure 35. Basic current limiting circuit Decoupling capacitors will be used to filter out noise. The capacitors shall be placed in parallel with the voltage supply. The PIC32MZ DA datasheet recommends two parallel capacitors be used; a 0.01 F, and a 0. 1 F, 10 -20 V ceramic capacitor with low equivalent series resistance (ESR) and a resonance frequency > 20 MHz [ 68]. Additionally, a 0.001 F capacitor can be used for high -frequency noise, and a bulk capacitor of 4.7 -47 F can be used to improve power sup ply stability [ 68]. The capacitors should be placed as close as possible to each other, the device, and the power and ground pins. The power supply and ground connections for the PIC32MZ DA microcontroller are illustrated below in F igure 36 , including the decoupling capacitors that will be used. V SS, AV SS, and V SS1V8 are attached to ground. V DDIO connects to the supply for peripheral logic and I/O pins. V DDCORE is connected to 1.8 V supply for peripheral logic. The voltage on VDDIO must always be greater than or equal to the voltage of V DDCORE during power -up. AV DD is connected to the supply for analog modules, and can either be hard -wired to V DDIO or can be connected with an inductor; the inductor improves ADC noise rejection. The inductor's impedance should be less than 1 . V USB3V3 can be grounded, as we are not using USB connections. V BAT can connect to a battery backup source; if not used, then connect this node to V DDIO. VDDR1V8 is connected to 1.8 V supply for the DDR2 SDRAM memory; if DDR is not used, then connect this node to V SS with a 20 k series resistor. The MCLR pin low provides for two specific device functions: device reset, and device programming and debugging [ 68]. 71 Figure 36. PIC32MZ DA power supply and ground connections For the MCLR pin connections, the capacitor can be sized to prevent unintentional resets, and the resistor R 1 can be 470 - 1 k to limit any current flowing into MCLR from the capacitor. The PGECx and PGEDx pins on the PIC32MZ DA are used for in -circuit serial programming (ICSP). No pull -ups or bypass capacitors are permitted for active debug/program PGECx and PGEDx pins [ 68]. The connections a re illustrated below in Figure 37 . Figure 37. PIC32MZ DA pin connections for MCLR and PGECx/PGEDx 5.2 Software Design This section covers the software side of the Medspencer's functionality. Data structures, LCD controls, timing systems, databases, human interaction, and other aspects of the 72 software are examined and explained in detail. This chapter should result in a broad overview of every functionality of the Medspencer's software. 5.2.1 Software Block Diagram Upon startup, the program will go through an initialization phase. Once the initialization is finished, the program will enter the main loop. This loop contains sections for each of the major systems of the Medspencer 's software: the touch system, the page system, and the time event system. A global collection of flags and values are shared between these three systems. As an aside, this is not a true multi -threaded program: each system is operated sequentially in a loo p, so there is no danger of variables being accessed when they shouldn't. Figure 38. Main program loop The touch system is the most straightforward. If the ADC connected to the touchscreen is detecting a voltage, then it trigger s the ADC to read the X and Y voltage levels of the touch. Calibration and optimization for touch detection would go here. The coordinate data is saved to the global X and Y coordinates, and a flag is set indicating touch data needs to be processed. Figure 39. Touch system 73 The page system is possibly the most complex. The actual function of a page will be explored in Section 5.2.2. The most critical part of the page system is the \"page stack\". The page stack holds ordered refere nces to each page that has been called. When a page calls a new page, such as a \"Select Patient\" page calls a particular patient's page, then the new page gets pushed onto the stack and becomes the current page. If the flag indicating new touch data is set , then those coordinates are sent to the current page's events, and the flag is reset. The current page's events are run (most of which are triggered by touch events), and any that are triggered are processed. During those events, flags for a page stack pu sh (go to new page) or pop (return to previous page) could be set, and are handled subsequently. In either case, the new page's schema is run to set the display, and the stack is modified appropriately. Figure 40. Page system The time event system is dependent on the main timer, and will be explained in Section 5.2.?. The main timer triggers an interrupt every 15 minutes, and the time event system checks for it. When it detects the timer interrupt, it loops through the array of schedules, checking for time matches. Schedules will probably be set for more than this one time, so all the time event system checks for is a simple binary \"is this schedule set for this time?\" If that medicine is ready, then it gets saved to a global lis t of active schedule events that need to be processed. 74 Figure 41. Time Event system The software process will cover all the functionality of the Medspencer , managing the touch system, page system, and time event system. 5.2.2 User Interface The user interface will be the primary way for users to interact with the system. Built on the foundation of the LCD and touchscreen, the UI will give the user information, while also providing a way to receive information in return. The use r interface system will be made up of \"pages\", segments of code that contain graphical and functional information. Each page contains a \"schema\", code to construct the graphics of that page, as well as \"events\", code that is triggered by specific occurrenc es on the page. Pages are triggered within the event codes of other pages. This will tell the page system to open the new page on top of the current one, running the schema code immediately and loading the event code for running during the next page cycle . Pages can have parameters for input, like a string for a title, and output, like a reference to save a result to. Figure 42. Example page code A page's schema need not overwrite the entire screen. For instance, a keyboard page may only cover the bottom of the screen, leaving the top free to display. The approach to user page_number_one(const char* i_title, int* o_result) { // Schema to display page ... // Events to be triggered by items on page ... } 75 interface design using pages makes the software very modular, as any page needed for a specific purpose can be used wherever that purpose is needed. Most pages will have some return state in their event code, where their intent will be fulfilled and the system will go back to the previous page. For example, when viewing a patient's schedule, the administrator may wish to add a new medicine. Once that intent has been recognized (presumably through an \"Add Medicine\" button on the patient's page), the add_medicine page will be called. This page will be passed the patient's ID and a reference to save the medicine's ID into. Then, the new page will create a new medicin e, add it to the list of medicines (thereby generating a new ID), add it to the patient's list (using the passed -in patient ID), and return to the previous page once finished. The patient's schedule should now have a new medicine in it. Since pages can ca ll other pages, this creates a hierarchy of nested page calls, allowing for a user to always have the ability to navigate back to the root page. This root page will be called as part of system initialization, as no other page leads to it. The root page wil l be the default \"idle\" state, waiting for a timer event or screen interaction. The timer event system will be handled separately from the page system. 5.2.3 SQLite The Medspencer 's chosen data storage solution is a SQL database engine called SQLite. SQLi te is an open -source, serverless database system that is linked into the program at compile -time. Its resources are accessed through function calls instead of requests sent to alternate threads. All data, as well as the tables referencing it, are saved in one cross - platform file, which has an upper size limit of 140 terabytes, yet the library itself can be compiled down to nearly 500 kB. For the Medspencer , the library will be linked into the program code, while the database file itself will have to live on board an SD card. As the SQLite website stresses multiple times, most applications are served with the full amalgamation file that can be compiled on any Windows or Unix system without changes. However, highly tuned and specialized applications may wish t o customize their compilation, perhaps to change the multi -threading system, to reconfigure the memory allocator, or to modify the virtual file system. Many of these changes can be done by giving specific commands at compile -time. Most applications of SQL ite work fine in its default configuration, and even more should be served by compile -time config options. However, if a serious rework is necessary, such as porting the library to a new operating system, new code must be written. FOr proper functionality, the application must provide a working multi -threading system, a working memory allocation system, and a working virtual file system implementation. All of these things can be provided in a single auxiliary C code file then liked with the full amalgamatio n file to provide the application with a working SQLite build. In conclusion, it is entirely within the realm of possibility to use an implementation of SQLite in an embedded project. However, it may take extensive experimentation and rewriting to get it to function. 76 5.2.4 Wi-Fi Communication In the Wireless frequency inference network processor subsystem includes a dedicated ARM MCU to completely offload the host MCU along with an 802.11 b/g/n radio, baseband, and MAC with a powerful crypto engine for a f ast, secure WLAN and Internet connections with 256 -bit encryption. The CC3220x devices support station, AP, and Wi- Fi Direct modes. The device also supports WPA2 personal and enterprise security and WPS 2.0. The Wi-Fi network processor includes an embe dded IPv4 TCP/IP [25 ] The wireless frequency inference network processor subsystem has an enhances the security capabilities available for development of IoT devices, while completely offloading these activities from the MCU to the networking subsystem. There is also AES (WPA2 - PSK), TKIP (WPA -PSK) and WEP for personal standards. In order to operate these feature and requirement the software that are requirement is the SimpleLink Wi-Fi\u00ae Radio Testing Tool is a Windows -based software tool for RF evaluation and testing of SimpleLink Wi-Fi CC3220 designs during development and certification. The tool enables low -level radio testing capabilities by manually setting the radio into transmit or receive modes. Using the tool requires familiarity and kno wledge of radio circuit theory and radio test methods. Created for the Internet of Things (IoT), the SimpleLink Wi-Fi CC3220 family of devices includes on -chip Wi-Fi, Internet, and robust security protocols with no prior Wi-Fi experience needed for faster development. The Image Creator is a web application which is used to create a programming image; it can also write the programming image into the SimpleLink CC3220 devices. The programming image is a file which contains the SimpleLink device configurations and files required for the operation of the device. For the SimpleLink CC3220 wireless microcontroller, the Image Creator can also include the host application file. A new SimpleLink device should first be programmed by a programming image. The image, created by the Image Creator, can be programmed onto the device as part of the production procedure or when in development stage. And the CC3220 SDK contains drivers, many sample applications for Wi-Fi features and Internet, as well as documentation needed to use the CC3220 Internet -on-a-chip solution. This SDK can be used with TI's MSP432P401R LaunchPad development kit, or with the SimpleLink Studio, a PC tool that allows MCU development with CC3220. All sample applications in the SDK are supported on TI's M SP432P401R ultra -low-power MCUs with Code Composer Studio IDE and TIRTOS. In addition, many of the applications support IAR. [ 25] 5.2.5 Fingerprint Scanner As mentioned before, the fingerprint module can facilitate 1:1 matching or 1:N matching. For 1:N ma tching, or searching, the module will search the whole fingerprint library for a matching fingerprint. The module will return either a success or failure. When enrolling a new fingerprint, the user must enter their fingerprint two times. The system will th en process the two time fingerprint images, generate and store a template for the finger [70]. 77 The fingerprint module has built -in nonvolatile flash memory, which holds the fingerprint library and the notepad. The user's notepad consists of 512 bytes (16 p ages x 32 bytes) of memory set aside in the flash, and it can be read and written to by the user. The fingerprint template library is stored within the flash, and the library's capacity is 1000 fingerprint templates. Fingerprint templates are stored in seq uential order. Users can access fingerprint templates in the library by template number. An image buffer and two 512 byte character file buffers are located in the RAM. The buffers store images, character files, and template files. The image format is 256 x 288 pixels. The user can read and write to any of the buffers. Contents of the buffers will be lost when the module is powered off [ 70, 79]. For the R307 fingerprint module, we will utilize UART communication protocols. The serial communication is semi -duplex and asynchronous, with an adjustable Baud rate (default 57600 bps). The transferring frame format is 10 bits, and consists of a low -level starting bit, 8 bits of data (with the LSB transmitted first), and an ending bit [ 70]. At startup, the system c hecks whether a handshaking password is required. If the default setting is active, then the module does not require password verification and will enter into normal operation module. The password length is four bytes and the default value is 0FFH. If the password was modified using SetPwd , then the handshaking password must be verified before the module will enter into normal operation mode [ 70]. The system parameters can be modified or accessed with the instructions SetSysPara . When parameters are modifie d, the new configuration is recorded into flash, so they system will run with the new configuration at the next startup. To modify a parameter, specify the Parameter number and then specify the modification. The Baud rate is controlled via Parameter number 4, and can be an integer from N = 1 -12; the corresponding Baud rate is 9600 x N bps. Parameter number 5 indicates the security level, and controls the matching threshold value for fingerprint searching and matching. Parameter number 6 indicates the data p ackage length, and controls the max length of the transferring data package when communicating with the MCU. Its value can be 0, 1, 2, or 3, corresponding to 32, 64, 128, or 256 bytes. The system status register can be read using the instruction ReadSysPar a to view the current operation status of the module [ 70]. When communicating, the transferring and receiving of command/data/result are all wrapped in a data pack age format, as shown in Figure 43 . Commands are sent from the MCU to the fingerprint module, and the module acknowledges commands. Within the data package, the Header is 2 bytes and it signifies the start of the package; it has a fixed value of 0xEF01. Each module has an identifying address. The data package indicates the address with Addr ; the mo dule only responds to data packages whose address item value matches its identifying address. Addr's size is 4 bytes, and the value can be modified by the command SetAddr (default Addr value is 0xFFFFFFFF). The high byte is transferred first. The Package i dentifier 's size is one byte, and it can signify the command packet (value = 01H), data packet (value = 02H), acknowledge packet (value = 07H), or end of data packet (value = 08H). The Package length 's size is 2 bytes, and it refers to the length of the Package content plus Checksum; the maximum length is 256 bytes. The high byte is transferred first. The Package content can hold commands, data (such as a fingerprint character value or a fingerprint template), command parameters, or acknowledge result. 78 The Checksum is 2 bytes, and equals the arithmetic sum of the Package identifier, Package length, and Package content. The high byte is transferred first. Command packages can be sent from the MCU to the fingerprint module, and the module will send back an acknowledge packet with a confirmation code and the returned parameter [70, 79 ]. Header (2 bytes) Addr (4 bytes) Package Identifier (1 byte) Package length (2 bytes) Package content (max 254 bytes) Checksum (2 bytes) Figure 43. Data package format of R307 fingerprint module Upon receipt of commands, the module will report the execution status and results to the MCU through an acknowledge packet. The acknowledge packet includes a one byte confirmation code, and may also include a retu rned parameter. There could also be a following data packet [ 70]. The R30X series provides 23 instructions to realize fingerprint authentication functions. However, the most important functions that we will utilize are: collecting a fingerprint image; gene rating a character file from that image; generating a template for the character file; store the template in the library; and searching the library [ 70, 79 ]. The package formats for commands and acknowledgements for the basic instructions we wil l use are summarized in Tables 13 and 14. The instructions are described in detail below. In this paragraph, we discuss the relevant fingerprint processing instructions. The data package formats for these instructions are summarized in Table 13. To collect the finger image, we use the command GenImg . It involves detecting the finger, storing the detected finger image in the Image buffer, and returning a confirmation code. The confirmation code reports whether the finger collection was a success or failure, whether the re was an error when receiving package, or whether the module can't detect the finger. If there is no finger, then the module will indicate that it can't detect a finger. To generate a character file from an image, we will use the command Img2Tz . This com mand generates a character file from the original finger image in the Image buffer and stores the file in character file buffer 1 or 2. The required input parameter is the buffer ID (1 B), which indicates the character file buffer; the value can be 1h (buf fer 1) or 2h (buffer 2). The returned confirmation code indicates whether the character file generation is complete, there was an error receiving the package, or whether it failed to generate a character file, due to the over -disorderly fingerprint image; small size of fingerprint image; or lack of valid primary image. RegModel is the instruction to generate a template. It combines the character file information from character file buffers 1 and 2 to generate a template, which is then stored back into the c haracter file buffers. The returned confirmation code indicates whether the operation was a success, there was an error receiving the package, or it failed to combine the character files, because the character files do not belong to one finger. The Store instruction is to store a template. This instruction stores the template in either character file buffer 1 or 2 into the designated location in the fingerprint library. The input parameters include the buffer ID (1 B) and page ID (2 B). Page ID indicates th e fingerprint library location, and the high byte is transferred first. The confirmation code indicates whether 79 storage was a success, there was an error receiving the package, the page ID location is beyond the library's size, or there was an error writin g to memory. The instruction LoadChar reads a template from the fingerprint library. This involves loading a template from the specified location in the flash library into a character file buffer. The input parameters are the buffer ID and page ID. The con firmation code indicates whether the load was a success, there was an error when receiving package, error reading the template, or page ID is beyond the library's size. The instruction DeletChar is to delete a template. The input parameters are page ID and N, which indicates the number of templates to be deleted. The confirmation code indicates whether the deletion was a success, there was an error receiving the package, or it failed to delete the templates. The instruction Empty is used to empty the entire fingerprint library. The confirmation code indicates whether it was a success, there was an error receiving the package, or it failed to clear the library. The instruction Match carries out precise 1:1 matching of two fingerprint templates that are held i n the character file buffers. The return parameters include a confirmation code and a matching score (2 B). The confirmation code indicates whether the templates match, there was an error receiving the package, or the templates don't match. The instruction Search searches the fingerprint library. It searches the whole library for a template that matches the template in character file buffer 1 or 2. The input parameters are buffer ID, Startpg (2 B, the start address to start searching), and Pagenum (2 B, sea rching numbers). The return parameters are the confirmation code, matching score, and page ID (indicating the matching template's location). The confirmation code indicates whether a matching finger was found, there was an error receiving the package, or n o matching finger was found (the page ID and matching score are both 0). Other available instructions include UpImage to upload an image from the image buffer to the MCU; DownImage to download an image from the MCU to the image buffer; UpChar to upload a t emplate from a character file buffer to the MCU; DownChar to download a template from the MCU to a character file buffer; WriteNotepad for the MCU to write data to the notepad in module's flash; and ReadNotepad to read from the notepad in module's flash [ 70]. Table 13. R307 Package Formats for Fingerprint Processing Instructions Command Name Header (2 B) Module address (4 B) Package identifier (1 B) Package length (2 B) Instruction/ Confirmation code (1 B) Param Check sum (2 score Sum There are several system -related instructions we may use, and the corresponding data package formats are su mmarized in Table 14 . To set and verify the module's handshaking password, the commands are VfyPwd and SetPwd . For our project, we probably won't use this function. SetAddr is used to set the module address. The input parameter is NewAddr (4 B), which specifies the new module address. The confirmation code indicates whether the operation is compl eted or there was an error. SetSysPara allows one to set the module's parameters. The input parameter is ParaNum (1 B, indicates the parameter number), and contents (1 B, indicates new parameter value). The confirmation code indicates whether the operation is completed, there was an error, or register number was invalid. Control 81 allows the user to specify whether the UART port I \"on\" or \"off\". The input parameter is Ctrl (1 B). Table 14. R307 Package Formats for System -related Instr uctions Command Name Header (2 B) Module address (4 B) Package identifier (1 B) Package length (2 B) Instruction/ Confirmation code (1 B) Param Check sum (2 Patient Identification & Adding/Removing a Patient To maintain and management patient's information or identity to the medication and medication schedule will be stored in a database which will be easy access for the MCU to process and transfer. In the requirements to use mySQL database is a 32 bit processor or higher and an SD micro Card with about 4 GB or storage capacity. The database will contain a unique identification alphanumeric sequence or in medical terms a Chart number. This will be used to identify and protect the patient's information. The database will have the medication name (band name not the generic name), dosing, where would the medication be taken, how ma ny times or at what time, and how long will they be taking it. This database will also record and store the data so weekly will send a report to the doctor by email. The method to add a patient is to first turn on the device, the administrator or caretaker will scan there fingerprint, given him or her access to add a new patient. In this section, the caretaker will first enter in the chart number, the first and last name of the patient, the Date of Birth of the patient, and cell phone of the patient. The m ethod to remove a patient is first the caretaker must be login to his or her account by using their fingerprint. They will select the patient that they need to delete and push the delete button. 82 5.2.7 Prescription Parameters and Schedules From the conversa tion with Dr. Jacobs, the EMR (Electronic Medical Records) has a very unique schedule system for the do ctors , as shown below in Figure 44 . This figure show s that any user can select what is described on a prescription bottle into the Medspencer. Figure 44. Schedule Selection Screen The Figure 45 is a prescription label sample on a prescription bottle, and using the simple guide in Figure 45 a caretaker or a reliable family member can select the exact directions that the patient h as been prescribed. Figure 45. Sample prescription label 83 5.2.8 As -needed Medication Requests In order to follow the as needed request or as needed for pain, specific requirement and specification must be followed in the FDA and doctor's recommended plans. However, doctor's do have a tenancy to go off label to benefit the patient's health. This is where the benefit outweigh the risk even though the FDA states not to do so because of complications and serious results. 5.2.9 Fixed -schedule Medicine Notifications and Requests Once the medication has been assigned to the container, the user or caretaker will follow the Prescription parameters and Schedule section to enter how many times, starting at what time and how many pills to take a each moment. In the research, the Food and Drug Administration standards varies between medications and dosage of the medications. They state to take your medication at the same time every day, Tie taking your medications with a daily routine like brush ing your teeth or getting ready for bed. Before choosing mealtime for your routine, check if your medication should be taken on a full or empty stomach, keep a \"medicine calendar\" with your pill bottles and note each time you take a dose, Use a pill contai ner. Some types have sections for multiple doses at different times, such as morning, lunch, evening, and night, when using a pill container, refill it at the same time each week. For example, every Sunday morning after breakfast, purchase timer caps for y our pill bottles and set them to go off when your next dose is due. Some pill boxes also have timer functions, when travelling, be certain to bring enough of your medication, plus a few days extra, in case your return is delayed, if you're flying, keep you r medication in your carry - on bag to avoid lost luggage. Temperatures inside the cargo hold could damage your medication. [ 85] In the project the device would reduce the reminding but sounding alarms and other sounds on when to take the medication, the dis play will show if the patient has taken the medication or not. The alarm will sound off every 5 mins for 90 mins until the patient push the button and the medication can be dispensed. If the patient does not press the button after 90 mins the medication wi ll not be dispense and will be recorded and send an email to the doctor's office. The fixed schedule will be an increments of morning at 0800, lunch at 1200, evening at 1500, and night at 1900. However, these time will change depending on the sleep pattern of the patient and their work schedule. If the patient request a m edication the display will advis e them what is the medication that they are requesting. The database will contain the information when the medication can be dis pensed after a limited interv al. The minim um interval is an hour to 24 hours due to the medication complexity and chemical structure. 5.2.10 Rescheduling Doses In the rescheduling dosing section, the caretaker will remove the container where the medication is store to show the medica l profession that the patient is taking or not taking the medication and the weekly reports that are send to the office for the visit. If the medical 84 profession, decide to refill the medication they will need to take the container to the pharmacist to get it replace and refill with the new medication or the old medication. Once that process is done the caretaker will re -enter the direction of the same or new medication in the slot where the container will be stored in. This will notify the pharmacist and physician of the updated change and the slot is a clean and new slot. 5.2.11 Recording events in Schedule & Summary Reports The SimpleLink CC3220 Microcontroller will submit a report every week showing the Chart number of the patient, date of birth, medicati on name, taken at what time and date, and the amount taken at that time and date. This report will automatic be send to the email of the office so when the patient goes to the office visit they will not need to take more things them just themself and any o ther problems. In a side note, this report can be upload to the application of the caretaker to receive alerts and problems that they need to monitor and inform the doctor or the office staff. 85 6.0 Prototype Construction This chapter details the first steps that have been taken to construct a prototype. Not much has been purchased yet, and even less has been rigorously tested, but this is the roadmap for how the Medspencer will eventually be assembled. 6.1 Parts Acquisition and Bill of Materials Table 15 b elow shows all expected prices take n from different websites like Amazon or Alibaba. The components will be acquired separately instead of a whole purchase, with that we are trying to avoid to overspent and do unnecessary purchase. The billing will not be complete until all the parts and their respective shipping are charged and added to the final budget. While looking and comparing for the different necessary components, we noticed that there are a wide variety of option and most of the time is the same pr oduct with different price or from a different country. Discussing with the group, it is obvious that one goal is to save money while getting the parts, but we have to consider if the provider and cost are worth the wait because most of the cheaper compone nts can take up to 15 business days. Table 15. Parts prices for final product Part Number Description Vendor Unit price Amount Total price R307 Fingerprint aliexpress.com unit Microchip $15.00 1 $15.00 PIC32MZ DA Starter Kit Development board for Microchip $130 ESP8266 ~$40 1 $40 Total $267.06 86 For the PCB manufacture, we have compared different websites, but on Table 16 there shows just the price for manufacturing excluding designing. Table 16. Designing companies Quote Company Price per PCB Advanced circuits $33 OSH park $20 ($1.67 x sq. inch) BITTELE (chinese company) $55.67 Next is the prices for the breadboard testing. Most of these parts were purchased before the project started, but they were still useful for current applications. Table 17. Products for breadboard testing Product Price Resistors (100 - The company EPECTEC, more than just manufacture and assemble PCBs, they also offer injection molded plastic that may work for the enclosure of the project and give it a nice and professional touch. Since that molding needs very precise measures and feature s, it was very difficult for us to get an estimate for this service. We are only going to build our own enclosure using materials from The Home Depot. 6.2 Printed Circuit Board From software exclusively programmed to design PCBs that offers real -world com ponents to websites that offer either to design or designing companies, this section will show which option is better according to the project needs. To design the board according to the project and sponsor expectations will be a very meticulous process be cause of the theoretically test that has to be done before send it to manufacture. In the event of a mistake, it will result in 87 financial and time consequences, that is the reason to consider to do a homemade PCB manufacture. 6.2.1 PCB Vendor What a vendor needs to know about the project is the PCB layout. While designing the circuit on Eagle software, there is the option to export it to a digital board. That layout will describe all the connections that will be etched to the board. Here three companies tha t meet our project criteria for design and also manufacture. The manufacturer Advanced Circuits (4PCB.com) is an American company that offers discounts for university students. They offer a two -layer board for $33 per piece. There is no minimum purchase required. 4PCB also offers a PCB design check tool for free. This can prove to be extremely beneficial because it can dete rmine if there are any flaws in the design before the order is placed. The prices starts $33 per board (no minimum number required). Lead -free solder finish. Minimum design rules: 0.006\" line/space, no internal cut-outs, min 0.015\" hole size (maximum 35 dr illed holes per square inch). For a board that is 3\" x 5\", five of this boards will cost $95. Epec is a North American company that offer services for manufacturability and design that are no limited just to PCB but also for user interface integration. That feature will benefit the project because the MedSpencer will be user friendly with its touchscreen display. Epec off ers user interoperability through rubber keypads, LCD touchscreen integration, and high tech light guide film. Epec also offers services for power supply, injection model plastics and fans and motors, necessary for the cooling system and enclosure of the p roject. OSH Park is an America n PCB manufacture company that offers free shipping to anywhere in the world. Shipping may take up to 12 day from the day of the purchase. The shipping time of a four -layer board will be about two weeks after the order. This i s a relatively quick service that is beneficial due to the time constraints of the project. Below are a list of specifications and pricing details: $5 per square inch, includes three copies, free shipping for two -layers. Board Thickness: 1.6mm. FRF4 substr ate, purple mask over bare copper. ENIG (immersion gold) finish. Minimum design rules: 6 mil trace clearance, 6 mil trace width, 13 mil drill size and 7 mil annular ring. During the research for a vendor, we found many local designing companies that we cou ld use in the event of doing a last minute change on the schematic or debugging. More than just manufacture the product, they also offer professional advice in every stage of the creation of the project. These companies are Saturnpcb and Fermitron. 6.2.2 P CB Design Designing the final PCB may take time and will push us to consider not just cost but also effectiveness in our project. The way we place all the components and to use the proper parts will play an important role in the designing procedure. In ord er to achieve this goal, Autodesk Eagle will be the software to create the schematics and also the board layout. 88 Eagle has many libraries already pre -installed but for purpose of our project, we may need to download more. For lack of libraries that involve the fingerprint reader, the servo motor and the touchscreen, we may replace this components by their respective connections. As stated in section 3.2.7, the parts needed for the project are the fingerprint reader, servo motor SG90, touchscreen display an d the cooling fan. All these components carefully selected from many because of their features on voltage usage, cost and reviews, will be hard-wired to the final PCB. Every component was properly tested individually in order to ensure its functionality wh en the time of the final assemble comes. As many components were tested on an Arduino board, we know which connections will require a resistor and which can be directly connected. The main microprocessor a PIC32MZ DA with 146 connectors, will be used in th e center of the PCB. This component will control so as the hardware and as the software part of the project. We expect no big delays due to its 32 MB DDR2 DRAM. In the situation of running out of time and/or lack of financial resources, we can always manuf acture our own PCB board according to some instructions found in tutorials. Next is the price list for the products needed when manufacturing a PCB at home. Table 18. Homemade PCB manufacture products Product Price Presensitized bo ard (4\"x6\") $14.30 MG chemical developer liquid $13.66 MG Chemicals Ferric Etchant Solution $16.75 12000 RPM $39.95 ANBES soldering iron kit $19.99 6.3 Prototype Constraints Regarding the prototype, we have focused in separate the whole project in different modules. As recommended by the tutors, divide and conquer, the key is to be sure that every module works perfect independently. To understand how every module works in essential, that way the complete device can easily be assembled. While running some tests, we had to get different microprocessors that runs on different software. Our first prototype will be extremely limited. We are trying to accomplish that the dispenser w ill be able to read any fingerprint and to dispense. For the fingerprint reader, we were connecting it to an Arduino microprocessor and run it through its respective software. As the Arduino has enough connection slots to connect more components, we attach ed a servo motor to another port. We use the Arduino microprocessor because is easy to use and to program, but this will not be used in the main project. The purpose of using 89 a microprocessor to run the first steps of the MedSpencer is to use this connecti ons as a template for the future main board. It is software concern to program the frequency of the servo motors. We have to assign different ports to the different servo motors. For purpose of this project, the main board will not have more than 6 servo motor connections. As the MedSpencer will have the chance to interact with the patient through a touchscreen display, the main board will have a data bus connection. Before we build the box for the dispenser, we have to make sure that all modules and compo nents work fine. As it is mentioned in section 5.1.2, th e measures for the box will be 20\"x10\"x24\". Those measures are tentative because we may need more room for the holders for the medication capsules and for the main PCB. We have thought many ways how t o dispense the medicine and how it will be the most effective. After reviewing many other prototypes and also many patents that concern to our project, the most simple way is to place one servo motor at the bottom of each medication container that works as a filter. One difference between this project and the existing products is the ability to display time, patient's name and type of medication dispensed. The MedSpencer will count with a 7\" touchscreen display that enables not just see the information ment ioned before, it will also help the administrator to input new data or to edit the existing one. For the prototype, we need only to display the patient's information so as the time. An alert display will also be programmed to show when the schedule medicat ion matches the time. Figure 46. Innolux AT070TN94 [53] 90 Table 19. displa y option according to prices. Courtesy of Aliexpress Display Price AT070TN94 7 inch $57.90 All of these displays were the option from Aliexpress website and not Amazon website because of its huge variety and prices. The only downside is the waiting for the part. It takes an average of 15 business days . The part considered when the Divide and Conquer document as written now is $54.53. 6.4 Potential Issues This section outlines various problems that the team could face. Device problems fall into one of two categories: hardware or software. With some forethought, hopefully these problems can be avoided or considered before they become serious. 6.4.1 Hardware Issues From the many possible situations that can come up during the prototype assembly, for instance: a short, a mistaken connection or a microprocessor with no enough capacity, there are many other issues that will come to light with a finished product. After all those constraints while building the prototype, there is the maintenance or updating part where most of the components will be replaced for some other newer or the complete system will change. As soon as the project is complete, the market will ask for improveme nts, updates or extra features. One of the issues that will face the project is to find an enclosure that can keep an ideal temperature inside for the medication. For purpose of showing that the electrical and software part works, the proj ect will only count with an enclosure made of wood or carton. Following the design of the competitors and similar projects like the Phillips brand, the enclosure will be made of a base material that keeps the medication cool inside of the dispenser. While building the prototype, all the measures taken were tentative because the inside components needs to be arranged in certain way that can fit everything within and also leave some room for more medications to be stored. The dimensions of the dispenser shoul d be adequate for the domestic use because some patients may need it to be closer to 91 bedrooms and/or others may need it in a central place, so it should accommodate wherever needed. With the dimensions fixed we can have a better view of the product and its weight. The final product should be light enough to be carried or screwed to the wall. Comparing to different products that are hanged on the walls like a fire extinguisher or a mirror, the MedSpencer should not exceed the 9 pounds, so it can be easily ma nipulated. There we are only considering the enclosure and the medication that are the pa rts that weighs more. The plastic medication container should be replaced constantly according to FDA regulations. The dispenser have to be constantly visited by the a dministrator to replace the containers because as new medication comes in, even if it is same medication, the traces the old ones can compromise the effectiveness of the new ones. According to the section 211.56 for the FDA sanitation, the containers shoul d be replaced every 6 months. Figure 47. Medication containers according to FDA [ 76] Courtesy of the US Department of Health and Human Services When requesting the final PCB, we still need to do some test and check the project will need different values than the theoretical ones. We do not only need to check also for the resistance or voltage values, but for any unexpected glitches as well. The next picture shows a very common mistake done when asse mbly the components to the PCB . 92 Figure 48. Solder accidentally bridging pins [4] Courtesy of Optimus Design 6.4.2 Software Issues Software issues that can be encounter are software comparability where one module the software can read and write its own softwar e but the results of this module can not be transfer or translated to more or less sophisticated software. Another issues is the fingerprint scanner not able to identity the correct the fingerprint pointers that can identity who is the patient versus the ca retaker or which patient is the fingerprint scanned is related to. Another software issues is the Wi-Fi module to the send and receive data like the correct time or to send the report to the physician weekly on the schedule of the patient if the patient is taking the medication at the given amount and time or forgetting the medication in all. Another issue with the Wi-Fi module is it will be connected to the database where the module will upload and download data from the fingerprint scanner and transfer to the main MCU to release the medication and what slot and how much at a given time. The transfer of data from one module to the next and receiving the correct feedback information is crucial for the patient to receive the correct medication, at the correct time and at the correct dosage. A big issue in software is security, meaning would the correct patient get the correct medication at the correct time and at the correct dosage. In addition, report needs to send to the physician who prescribe the medicatio n as well as the other medications the same patient is taking. 93 7.0 Prototype Testing This chapter discusses how we will test our various components during our prototyping phase. This involves testing physical hardware components and circuits to ensure that we use appropriate operating levels, and testing the designed software implementation. It is important to test each component to ensure that the device will work properly and accurately and none of the components will get damaged. Each component will be t ested individually to make sure that nothing is overlooked. 7.1 Hardware Testing In this section, we detail the procedures that we will use to test our various hardware components for this Medspencer project. We will test to ensure that our design circuit s and interconnections are valid implementations. This involves making sure that the operating current and voltage levels are appropriate. The operating current and voltage levels are specified in the data sheets for each individual hardware component. The circuits we have designed in order to connect our components to power supply and to each other are specified in Chapter 5. We will use the resources available at the electronics labs at the University of Central Florida in order to test our components. Re sources we may use include DC voltage supply, digital multimeters, breadboards, wires, and so on. 7.1.1 Breadboard and Development Board In order to have a final PCB either designed or already manufactured, we first need to draw a schematic specifying all its components. A rough circuitry drawn on paper can be the first step of designing the project. The purpose of this step is to move from a schematic, pass through breadboard implementation and to get a final PCB layout. This steps will help us to simulat e and get experimental values that may not be got during theoretical calculations. To design on breadboard is an important procedure because we may encounter glitches or unexpected situations like sudden drops of voltage or a component required more voltag e to power. The next picture shows the basic implementation of the MedSpencer, with this prototype we tried to power the servo when the fingerprint reader signal was positive. 94 Figure 49. Breadboard of the first test of servo inte rconnected with a fingerprint There are some missing parts like the cooling fan and the touchscreen display that were not purchased yet, but on further prototypes they will be added to run a complete test. In order to run the microprocessor PIC32MZ DA, as it is a very expensive piece, we will leave it to the final PCB. For testing purposes we may get the internal electronic components in order to be tested on the breadboard. As for the final product, it will contain the Wi-Fi module, the cooling system and the voltage regulator. It is imperative to run some test before soldering this components definitely to the main PCB. For the voltage supply for the breadboard stage, it will be connected straight to the power through the voltage regulator. 7.1.2 PCB Testing This section goes into how we will test the PCB to ensure that each component should receive the correct input voltage and current. This is important so as to ensure that the components work to their product specifications, and to avoid damaging any of the components. In order to test the PCB, we will include test points in the PCB design. The test points will allow us to verify whether each mounted piece is receiving the correct voltage and current 95 levels. To design a PCB test point, we will place an open connector hole with a positive and negative terminal on the PCB. The test point sites can be through -hole leads, dedicated pads, or small diameter vias. Breakout pins could also be utilized to apply connectors or clamps for testing. The test points wi ll be distributed around the board, so that the operating levels for every component can be tested. Test points provide the tester the ability to easily connect to locations where tests may be needed. These are advantageous, as opposed to probing the solde r locations. Solder locations are not ideal for testing purposes due to their variable shape and contact surface. For each test point, we will verify whether the correct DC voltage and current levels are passing through them. The desired levels will depen d on which component is supposed to be supplied power. First, we will check that the circuit is receiving the correct voltage level. To do so, we will measure the voltage using a digital multimeter set to voltage range. We will check whether the measured v oltage equals the desired voltage level. Then the current will be measured using the digital multimeter to ensure that the desired current should go through the load. In the case that PCB testing shows voltage and current levels that are not desired, then troubleshooting may be required. There may be insecure connections or soldering mistakes, or there could be some components that have issues. This is assuming that the circuit layout was already tested and verified on a breadboard, so that should not be th e issue when it comes to PCB testing. 7.1.3 Testing Procedure Running the tests for the MedSpencer involved from testing of each of the components individually with their own microcontroller ( Arduino , MSP430) to assemble them together in one customized PCB . As many of this components only required lines of codes and a proper connection to the microcontroller, this was just the easy part of it. Many tutorials are available on Youtube about how the connections should be made in order to run or improve the per formance of the component. For a complete view of the and design of the main PCB, as taught on digital systems class, the group had to identify the inputs of the dispenser and how they will trigger the different procedures of it. One of the MedSpencer's in puts is the fingerprint and it can trigger the patients procedure or the administrator procedure. The first test to be done was that the fingerprint reader not just only identifies but to store in the memory and assign a different roll. As the fingerprint is a R307 model, it has a capacity for 1000 fingerprints, so there is plenty of memory for patients, caretakers and administrators. The software section will describe with details the codes used to store and assign roles for each one of the people involved . 96 Figure 50. Connection testing procedures For the servo motors, they were tested first individually on an Arduino microprocessor. The code was not that complicated because with the proper library and understanding, it can run with no problems. The servo motor SG90 came with three different size arms, but for our purposes, we have to design our own filter. Once the s ervos were tested, they will be assigned to one individual port. It is code concern that each port will be assign to each patient. While coding and assigning the patients to each medication container the programmer should also consider the dosage of each s pecific medication to each specific patient. That task can be accomplished by programming the cycle. The prototype will only run from reading the fingerprint of any patient and that triggers the servo motors. Later on the project will be improved to recogn ize each fingerprint and only run the assigned servo motors. The main purpose for the touchscreen display is for the administrator to input the patients data. The group considered to leave just a LED display and add a keyboard but that would add more power consumption to the project. There are many options on the market and all of them can be tested on an Arduino microcontroller, but this project will have its own software. For the software testing, the computer engineers will need to run many times the so ftware they are creating with the components connected. Let us remember that the inputs for our projects are time (got from the Wi-Fi module) and fingerprint, so the software should be reading this components constantly. When the true event happens, time m arches and fingerprint matches, the program should redirect the voltage to the respective servo. 97 Once the software is tested and certified that runs properly, it should be coded to work with a touchscreen display. The touchscreen display will only interac t with the caretaker and the administrator. The extensive coding for the touchscreen usage will be for the administrator options because they are the ones who must enter the patients and medication info, set alarms and set medication slots into the memory. 7.1.4 Microcontroller Testing The testing of the PIC32MZ DA will be done in three phases: unit testing, integration testing, and system testing. Unit testing is done to ensure that each module of the project works independently. Modules will have their ow n host of test cases, engineered to rigorously test any expected input and output. Integration testing facilitates the combination of modules into a functioning whole, ensuring that proper functionality occurs at each step along the amalgamation process. F inally, system testing proves the complete functionality of the system: does this system do what it is supposed to? This testing should result in a complete product that is ready for the end user. There are two categories of modules that need to be tested as they relate to the microcontroller: software functionality and peripheral functionality. Software functionality will be unit tested using software, obviously. This involves taking the written software module, providing it with test inputs, and checking whether the results meet expectations. If a particular code module does not give the expected results, then it is obvious where the problem is. The large system operations, the main program loop, touch system, page system, time event system, will have to be tested rigorously, as they are very important. However, smaller code modules will also have to be tested. Each page will have to be run to see if its contents resolve in the expected way. A number of different medicine schedule configurations will have to be run through the time event system to see how they react in that environment, to make sure a broad range of time events work properly. The touch system is rather simple on the software side, but it still needs to be rigorously tested. Peripheral func tionality unit testing, as it relates to the microcontroller, is focused around the interfaces between the microcontroller and the peripheral itself. Unit testing assumes the peripheral works properly, and tests to see how the microcontroller works with th ose inputs. Keep in mind that some of these peripherals are not necessarily external to the microcontroller. Ensuring the software code interacts properly with ADCs or UART communicator is just as important as whether those peripherals interact with the touchscreen or the fingerprint scanner. Once the unit testing has been finished, then the time for integration testing arrives. This is the process where fully tested modules are combined into larger working wholes, and this aggregation process must be test ed at every step in the hierarchy. 98 Table 20. Example unit test cases related to touch sensing Test Case Summary Prerequisites Test Procedure Test Data Expected Result Test Environment ADC interrupt trigger The ADC must be initialized, and ADC1 must be enabled Apply a test voltage to ADC1. Test voltage between 0V and 3.6V. The ADC interrupt should trigger, taking control of the main processor momentarily. PIC32MZ DA with MPLAB Harmony X IDE Touchscre en sensor accuracy ADC1 must be enabled, and the touchscreen should be wired to it Apply a voltage gradient across the touchscreen . Touch the screen. Record the voltage detected. A set distance across the touchscree n to touch. The ratio of the detected voltage to the max voltage should be the fraction of distance across the screen where it was touched. PIC32MZ DA with attached touchscreen and MPLAB Harmony X IDE Touch system loop ADC must be enabled, and the touchscreen should be wired to it. Start the main loop. Touch the screen. A set location on the touchscree n to touch. The global \"touch data\" flag should be set, and the global coordinates variables should match the touch location. PIC32MZ DA with attached touchscreen and MPLAB Harmony X IDE Software module combinations are not much more difficult to test than their module counterparts. However, these tests usually require more testing data, and more analysis, to determine what the expected result would be. At this stage, the actual functional ity of the program is starting to take shape, and this means the results may be related to more than just code considerations. At this stage, a page would be tested for how it relates to other pages: what data is being given to a new page from its parent, what data is the parent expecting to receive, how does the active page react to the touch system and the time event system, etc. These sorts of considerations affect every part of the software system, as many of these modules will have an effect on each ot her. 99 Table 21. Example integration test cases related to page interaction Test Case Summary Prerequisites Test Procedure Test Data Expected Result Test Environment Page creation and data passing An active page must call a new page and pass it data. Make the current page call a new page, and pass it an integer to display. A test integer. The new page will display the passed integer. PIC32MZ DA with MPLAB Harmony X IDE Page registerin g touch event An active page must have an event that triggers from touch data. Touch data must be set. Run the active page and see if it reacts to the touch data. A set of coordinates to represent a touchscree n event. The touch coordinates will trigger a specific page event. PIC32MZ DA with MPLAB Harmony X IDE Page registerin g time event An active page must have an event that triggers from a time event. A time event must be set. Run the active page and see if it reacts to the time event. A time event for the active page to react to. The time event will trigger a specific page event. PIC32MZ DA with MPLAB Harmony X IDE Integration testing the peripherals is where the real functionality starts to come together. Once all the different connecting systems are assembled, then the peripherals can be slotted into their appropriate spot in the system. The microcontroller constructs a command, which is sent to the UART, which is transmitted to the fingerprint scanner. All of those connections are being tested and solidified i n this stage. System testing is where the two categories of modules come together: does the software run the hardware? Here, the testing team will be asking questions like \"Can a patient check their medicine level?\" \"What happens when a fingerprint isn't recognized by the system?\" \"Does the onscreen keyboard properly relay text to the box it was intended to?\" These sorts of tests not only check to see if the various modules work together, but if the product is in a usable state. 100 Table 22. Example system test cases Test Case Summary Prerequisites Test Procedure Test Data Expected Result Test Environmen t Patient check medicine level The database must contain a test patient and test medicine. Using the touchscreen, the test patient must navigate to their medicine page and view its status. The level of the test medicine. The medicine's status page will display the correct level of medicine remaining. PIC32MZ DA with touchscreen Fingerprin t not recognize d The fingerprint library must be enabled, but not contain the test fingerprint. The unrecognize d finger must be placed on the fingerprint scanner. An unrecognize d fingerprint. The system should refuse the unrecognized fingerprint and tell the user it is unrecognized . PIC32MZ DA w ith fingerprint reader Keyboard return text properly An active page must contain a call to the keyboard, and then must display the return text. The active page must initiate the call to the keyboard, and the test user must enter in a string of characters and return to the active page. A test string to enter on the keyboard. The test string will appear on the page that called the keyboard. PIC32MZ DA with touchscreen The microcontroller testing will be occurring throughout much of the development process of the Medspencer as modules are completed, then as whole systems are assembled. Testing during development helps to keep things moving, and it also brings alert to problems early so they can be fixed early in the development cycle. 101 7.1.5 Touchscreen Testing The touchscreen begins with the user. The user's finger, pen, or other pointing utensil touches the screen, triggering an electrical connection between two conducti ve layers. The electrodes on each side of each layer are wired to inputs and outputs on the microcontroller. Each of these interfaces needs to be tested. Some basic tests will be done to the screen with a multimeter while it is hooked up to a power supply, while more detailed tests are done when the touchscreen is wired to the microcontroller. The first test cases will be focused on the microcontroller itself, with a voltage difference between the electrodes on one layer and a multimeter measuring the volt age on the other layer. Some of these tests might include \"How much does the voltage change between set points?\" \"Does the voltage drop linearly across the entire screen, or are parts of the screen more resistant?\" \"How much force is required on a touch to trigger an electrical connection?\" \"How close to the source voltages does a touch at the edge of the screen measure?\" All of these tests are designed to improve the team's knowledge about the screen, and give a benchmark for later tests that invol ve the m icrocontroller itself. Table 23. Test cases relating to electrical properties of the touchscreen Test Case Summary Prerequisite s Test Procedure Test Data Test Environment Voltage change between points A voltage difference between the two electrodes of the touchscreen' s top layer. Touch the screen at the set locations. Measure the voltage of the bottom layer's electrodes. Set voltages on the electrodes. Consistent points on the screen to touch. Same amount of force with each touch. Touchscreen with power supply attached to top layer and multimeter attached to bottom layer. Voltage rate of change A voltage difference between the two electrodes of the touchscreen' s top layer. Touch the screen at a number of equally spaced points. Measure the voltage of the bottom layer's electrodes. Calculate the rate of change of voltage. Set voltages on the electrodes. Consistent equally spaced points on the screen to touch. Same amount of force with each touch. Touchscreen with power supply attached to top layer and multimeter attached to bottom layer. 102 Measuring the margins of the touchscreen A voltage difference between the two electrodes of the touchscreen' s top layer. While measuring the voltage of the bottom layer's electrodes, see how close to the margins of the screen a touch will still make an electrical connection. Note the voltage at which it stops. Compare margin voltage with the rail voltages. Set voltages on the electrodes. Same amount of force with each touch. Touchscreen with power supply attached to top layer and multimeter attached to bottom layer. With the assurance that the electrical properties of the screen are correct, the testing phase can move on to integrating the touchscreen with the microcontroller. Simple test cases would involve ensuring electrical continuity between screen and microcontr oller, and testing the microcontroller's ADC detection. Once everything is properly hooked up, then more complex tests can be performed. These new tests ask questions like \"How quickly can the software read a finger touch?\" \"How accurate are the generated coordinates in relation to the touch location?\" These tests depend not only on the electrical properties of the touchscreen, but also the functionality of the microcontroller's hardware, and the efficiency of the software code. As the hardware and softwar e systems are designed, it is important to be constantly testing new setups. This ensures that proper data has been gathered for further development, and finds problems in finished components before other modules depend on them. Table 24. Test cases relating to the software performance of the touchscreen Test Case Summary Prerequisites Test Procedure Test Data Test Environment Electrical continuity between touchscreen and microcontroller A touchscreen and a microcontroller wired together. Using a multimeter, test every connection for electrical continuity and excess resistance. A reasonable resistance threshold to be under. Touchscreen wired to PIC32MZ DA, tested with a multimeter. 103 Touch response speed test A touchscreen and a microcontroller wired together, with code to measure voltages with the ADC. Measure the time it takes for a touch on the screen to result in a change in status. Consistent points on the screen to touch. Touchscreen wired to PIC32MZ DA. Touch coordinates accuracy test A touchscreen and a microcontroller wired together, with code to draw a crosshair at the touch location. Touch the screen and see where the crosshair appears. A wide spread of touch locations to test. Touchscreen wired to PIC32MZ DA. 7.1.6 Display Testing The display system involves two very different components: the microcontroller's LCD controller and the screen itself, along with the wires that connect them. However, it would be difficult to test the LCD controller without an LCD to cont rol, so testing will focus on the display's hardware first, then move on to the controller's software. The LCD chosen for this project has a number of different requirements: specific power inputs, proper wiring designs, signal timing characteristics, etc . When designing the circuits for the screen, consideration must be taken for these factors. Power obviously is important, as too little would result in a non -functioning screen and too much would result in a broken screen, so a good test case for the scre en could be \"The analog power circuit will provide a voltage between 10.2 and 10.6 volts, and be able to source currents up to 50 mA.\" Similar cases could be made for the other power inputs. It is important to remember that some wires on this screen are de signed to source power and some are data communication lines. For instance, the screen has both a Power Ground pin and a Common Voltage pin. In some applications, it can be very important to keep your signal and power circuits separated to eliminate noise, so one good test could be \"The power lines do not create noise in the data lines.\" These sorts of tests ensure that the circuits designed to power and run this LCD will fulfill the requirements set forth in the datasheet and will result in proper performa nce. Once the LCD is wired up to a power source and to the microcontroller correctly, then it is time to work with the LCD controller in code. One of the most important things that allows the controller to properly communicate with the LCD is timing infor mation. The LCD's datasheet has multiple pages containing very specific timing instructions, like how fast to run the clock, how many pulses to have in between lines, when to trigger a new line or new column, etc. So, a great test case would be \"Does the L CD controller's timing information result in a perfectly displayed image?\" 104 Table 25. Test cases relating to the LCD Test Case Summary Prerequisites Test Procedure Test Data Test Environment Proper power provided A circuit has been constructed to provide power to the LCD. Connect a multimeter to the power outputs of the circuit. Measure the voltage output and the max current it provides. The output voltage should be between 10.2 and 10.6 V, and should be able to source current up to 50 mA. Constructed power circuit measured via multimeter. Noise insulation between signal and power lines An LCD that is hooked up to power and data lines. While the screen is running, use an oscilloscope to ensure there is no cross - contamination of noise in the data lines. The data lines should be either 0 V or 3.6 V. LCD wired to power source and microcontroller . LCD Controller timing An LCD that is connected to an LCD controller. The LCD controller should send the screen image data. See if the screen displays the image correctly. A test image. LCD wired to power source and microcontroller . 7.1.7 Wi-Fi module testing When starting to the configure a wireless frequency interference microcontroller, read from the user guide on the essential commands and parameters. In addition, Download the newest version of Code Composer Studio, Download the latest CC3220SDK or CC3120SD K, Download the latest UniFlash tool, Download the latest CC3220 service pack, and Install the SimpleLink Starter Pro on your mobile phone. To start the SimpleLink Wi-Fi device, set the enable pin, opening the communication interface, and waiting the compl ete indication of the device initialization. Power Connections on the board can be powered by using the onboard micro USB connector. An onboard DC -DC converter provides 3.3 V for the CC3220 and the rest of the board to operate. This supply can be isolated from the DC -DC using the jumpers on the board. 105 Table 26. Jumper Setting for CC33220 Launchpad Power Reference A Reference B Use Comments J14 J5 OPAMP EN If the jumper is uninstalled, the power supply to the OPAMP is cut off. This can be used to enable low - current measurements. Ensure that this jumper is on to use the OPAMP to drive the input to the ADC. The reference voltage of the ADC is 1.47 V, so up to 3.48 V can be applied to the input of the OPAMP. J21 J10 GND Ground section J19 J12 Current measurement Measures the current flowing into the CC3220 device. Also includes the serial flash and any stacked BoosterPack. J17 J13 Board power Short: Supply the board power from the onboard DC -DC converter. The board power includes the sensors, LED, and the OPAMP used to drive the ADC input. J18 J28 VSENSE Used to power the level shifters on the emulator side of the board. The level shifters can be powered by shorting this jumper. Removing this jumper enables low -current measurement. The CC3220 can be set to operate in four different modes, based on the state of the sense - on-power (SOP) lines. These SOP lines are pins 21, 34, and 35 on the CC3220 device. 106 Table 27. Sense on Power Binary Value Function 000 Functional mode and 4 -wire JTAG 001 Functional mode and 2 -wire JTAG 010 Functional mode and flash programming 011 Factory default 100 Flash programming Figure 51. Sense on Power Jumper Courtesy of Texas Instruments Configure the board supports a USB -based virtual COM port, using the TivaTM ARM\u00ae MCU. The LaunchPad is shipped with the UART lines from the CC3220 connected to the UART on th e Tiva MCU. The CC3220 UART can also be routed to the 20 -pin connector for use as a GPIO or external UART. The selection is performed using jumpers on t he board shown in Figure 52 . 107 Figure 52. UART Routed to USB COM Port Courtesy of Texas Instruments To measure the current draw of the CC3220 when powering with a USB cable, use the VBAT jumper on the jumper isolation block (J19). The current measured in this mode includes only the CC3220 current and the serial flash current, and no external blocks. However, if a GPIO of the CC3220 is driving a high -current load such as an LED, then that is also included in this measurement. Connecting to the Onboar d Antenna shown in Figure 5 3, A miniature UMC connector (Murata MM8030 -2610) provides a way to test in the lab using a compatible cable. Alternately, for testing the conducted measurement a U.FL connector is provided on the board. A rework must be performed before this connector can be used; this involves swapping the position of a resistor. Figure 53. Board modified for Antenna Connections Courtesy of Texas Instruments 108 In programming the software in C language some requirement are essential including TCP/Ip stack routines #include <8xtcpip.h> which contains the f unction prototypes (declarations) and error code definitions. Also the library such as \"83WLAN.lib\", \"83BNEP.lib\", \"80WLAN.lib\" and \"80BNEP.lib\". Before bringing up (initializing) the network, some related parameters must be configured. These parameters ar e grouped into a structure, NETCONFIG or BTCONFIG or GSMCONFIG or PPPCONFIG structure, and are saved in the system. They are kept by the system during normal operations and power on/off cycles. [ 78] 7.1.8 Fingerprint module testing The fingerprint module must be tested to ensure that it undergoes proper operation according to the product specifications. The R307 fingerprint module may be powered using either 3.3 V or 4.2 -6 V. The working current should be around 50 mA. The module may communicate with an MCU of 3.3 V or 5 V via UART. To do the initial testing to verify the circuit design and user operation for the fingerprint module, the circuit will be built on a breadboard and verified. The design circuit will be tested to ensure th at the output voltage and output current to the load match the desired values. The output voltage levels of the MCU's general input/output pins will also be tested to check that they output the appropriate voltage level of 3.3 V. Once the circuit design is verified on the breadboard, the circuit plan for the fingerprint module can be finalized for the PCB. Once the PCB is received, the voltage and current levels will again be tested to ensure that everything is connected properly and that the components all work properly. Testing will also involve sending basic commands from the MCU to the fingerprint module. This will allow us to verify the functionality of the fingerprint module. The basic commands used will include system -related commands as well as fing erprint analysis related commands, which include collecting a fingerprint image, enrolling a new fingerprint, and searching the library for matching fingerprints. The instruction format is specified within the Software Design section of Chapter 5. 7.1.9 Power Supply T esting The objective of power supply testing is to test our method of power supply for the system, and to test the power inputs going into each hardware component, in order to ensure that safe voltage and safe current levels are applied to the system and each of its hardware components. Before we can test the overall power supply to the Medspencer system, we will have to purchase an AC -to-DC converter that can convert U.S. standard domestic power. We will also purchase a power jack that can be connected to our PCB. To test that the correct power is being supplied to the system, we will connect the AC -to-DC converter to the PCB via the power jack. Then we will measure the voltage supplied using a digital multimeter set to voltage range. We will c onnect the multimeter to the PCB through one of the designed 109 PCB test points. This will allow us to check whether the correct voltage is being supplied to the system. We also need to test the voltage and current levels being supplied to each individual component, such as the fingerprint module, touchscreen display, servomotors, servomotor control unit, Wi-Fi module, and speaker. Each component has specific circuits that were designed to convert the power levels to appropriate operating levels. These circuit s are displayed in the Hardware Design section of Chapter 5. In order to test that the correct power level is applied across a component, first the circuits will be constructed on a breadboard to simulate what the final implementation will look like. This physical test will require a breadboard and a DC power supply, as well as a digital mult imeter to make measurements. The output of the circuit will be tested using a digital multimeter set to voltage range, in order to ensure that the correct voltage level will be applied across the component. Then the load will be connected on the breadboard. The voltage will be applied and the current will be measured with the digital multimeter in order to test that there is an appropriate operating current. In the case that measured voltage and current levels do not correspond to the desired levels, then it is possible that the circuit design may need to be altered, or a component is not working properly, or the connections are not secure. Troubleshooting may be required . After the circuits are tested and verified on the breadboard, the PCB will be designed using Eagle and then printed. After the PCB is printed and obtained, we will have to solder on various components. The same tests should be repeated utilizing the PCB test points in order to ensure that the correct voltage and current levels will be applied to each component. Utilizing the multiple test points on the PCB will allow us to reduce the total testing time for the PCB. It also makes troubleshooting easier, as it will take less time to identify the integrated circuit or component that has failed. 7.2 Software Testing In this section, tests will be outlined to ensure the quality of the Medspencer's software. These tests are either simulated in the development e nvironment, or run as code on the microcontroller itself. 7.2.1 IDE U sed The IDE used is the CC3220 SimpleLink LaunchPad Development Kit (CC3220 - LAUNCHXL) which have TI's Eclipse -based Code Composer Studio (CCS) integrated development environment (IDE) a nd IAR Embedded Workbench\u00ae. The CC3220 LaunchPad has maximum RF power transmitted in each WLAN 2.4 -GHz band is 17.5 dBM. The CC3220 LaunchPad, referred to by its part number CC3220 - LAUNCHXL, is a low -cost evaluation platform for ARM Cortex -M4-based MCUs. T he LaunchPad design highlights the CC3220 -on-a chip solution and Wi-Fi capabilities. The CC3220 LaunchPad also features temperature and accelerometer sensors, programmable user buttons, three LEDs for custom applications, and onboard emulation 110 for debugging. The stackable headers of the CC3220 LaunchPad XL interface demonstrate how easy it is to expand the functionality of the LaunchPad when interfacing with other peripherals on many existing BoosterPack add -on boards, such as graphical displays, a udio codecs, antenna selection, environmental sensing, and more. [ 26] 7.2.2 Testing Procedure Once the CC3220 SimpleLink LanuchPad Development Kit is installed then read through the given code after selecting the the correct model and type. Once in the giv en code, read and understand what each command, code and parameters that are in the code. Then get more inform from the manuals and jumper needed to turn on and the functionality of the CC3220 SimpleLink device. Next start off by using the buttons and leds lights with the jumpers to identify each function of the CC3220. Next use the UART to write code properly and comment each mean ingful command. Using Table 28 and 29, to know when to reset (which we wont need to) or use the GPIO_13. Table 28. Push -Button Definitions Courtesy of Texas Instruments Reference (Rev. A) Reference (Rev. B) Use Comment SW1 SW1 RESET This is used to reset the CC3220 device. This signal is also output on the 20 -pin connector to reset any exte rnal BoosterPack with may be stacked. The reset can be isolated using the jumper block at the center of the board. SW2 SW3 GPIO_13 When pushed, GPIO_13 is pulled to SW4 SW4 Factory default Pressing this button and toggling RESET restores the factory default image on the serial flash. This can be used to recover a corrupted serial flash, provided the s -flash was programming with a recovery image. 111 Table 29. LED Ind icators Courtesy of Texas Instruments Reference (Rev. A) Reference (Rev. B) Color Use Comments D1, D2 D2, D9 Green and Red Debug Indicates the state of the JTAG emulator. For TI use only D3 D1 Yellow nRESET Indicates the state of the nRESET pin. If this LED is on, the device is functional D6 D8 Red Factory Reset Indicates that the push -button for the factory reset is pressed D7 D4 Red Power Indicates when the 3.3 -V power is supplied to the board D8 D5 Green GPIO_11 On when the GPIO is D9 D6 D10 D7 Red GPIO_09 On when the GPIO is logic -1 Afterward, the LanuchPad is designed to work with USB power however, the configure of the jump will help to determine the use of the CC3220 SimpleLink and what will be power for shown in Figure 54 . In the future , to add a battery to the device I will need to configure the CC3220 to be plug into the J17 and J19 shown in the Figure 55 . Figure 54. Power by Battery Jumper Settings Courtesy of Texas Instruments 112 Figure 55. Power by USB Jumper Settings Courtesy of Texas Instruments After having power either by USB or battery, now is to turn the AP connection. By default, the CC3220 has an onboard chip antenna shown in Figure 56. However, a miniature UMC connector or Murata MM8030 -2610 provides a way to test in the lab using a compatible cable. Alternately, for testing the conducted measurement a U.FL connector is provided on the board. A rework must be performed before this connector can be used; this involves swapping the position of a resistor shown in Figure 57. 113 Figure 56. Onboard Antenna Courtesy of Texas Instruments Figure 57. External Antenna Connections Courtesy of Texas Instruments 7.2.3 Simulated Testing In the simulated testing area, the CC3220 SimpleLink will be connected first to a CC3100 - CC3200 -Radio -Test which is a Windows -based software tool for RF evaluation and testing of SimpleLink Wi-Fi CC31xx and CC32xx designs during development and certificati on. The tool enables low -level radio testing capabilities by manually setting the radio into transmit or receive modes. Usage of the tool requires familiarity and knowledge of radio circuit theory and radio test methods. Which some of the features like Wo rks seamlessly with SimpleLink Wi-Fi CC32xx LaunchPad and CC31xx BoosterPack, uses 4 - 114 wire UART for control and communication, transmit Wi-Fi packets in packetized and continuous modes, Graphical User Interface (GUI) for configuration and display, user - defined configuration of channel, power level, transmit rate, preamble type, data pattern, packet size, delay between packets, CCA override and destination MAC address in transmit mode, and display of receive Wi-Fi packets including information on valid receiv ed packets, FCS error packets, address mismatch packets, averaged RSSI for management frames, averaged RSSI for other frames, RSSI histogram and rate histogram. With these feature of the Radio -Test can help verify the software capable of knowing that the CC32220 is working properly. 7.2.4 Physical Testing In physical testing, first make sure that the code composer is installed and has the correct the model and type of the microcontroller unit CC3220 SimpleLink. Second, move the jumper to the correct setting for the turning on the CC3220 SimpleLink by USB and turn on the wireless frequency module. Next, set up the home router and connect to the SSID and password. Check if the CC3220 is able to receive data. In addition, start to configure the CC3220 to unders tand the data as what it is for. 115 8.0 Administrative Content This chapter details the administrative content to facilitate organizing and planning out the Medspencer project. This chapter includes section such as a milestones discussion, division of labor, and budget and finance discussion. The milestones discussion details the various milestones we have outlined for the completion of the Medspencer project. Breaking the project down into smaller tasks makes working on the project more manageable. We also set goals for when each milestone should be completed. The division of labor section discusses which members take responsibility for the various components of the project. Lastly, the individual costs for different components and the overall budget are discu ssed. 8.1 Milestone Discussion Discussing the different approaches of how the project will be idealized and created, the group has created a list of milestones with their respective dates to complete. The initial report: Divide and Conquer was due January 28 and its content was a brief description of the project including a table where describes the cost of all components. The House of quality in which the project showed the relation of the market features with the technical features and how they will be i mproved. That table showed that in order to expand our project to handle more patients it will require the expansion of dimension and a more powerful microprocessor for all information. An interview with Dr. Fredesvinda Alvarez, our sponsor, was set to Feb ruary 24 in order to have a better understanding of this medical field and how our product can get into the market and how it will impact with the improvements and updates discussed. That interview set the confidence of the sponsor in our group. As the int erview kept going and all the questions and answers from both parts were discussed, there was also room for suggestions that the group kindly considered knowing the limitation of time. The table of contents was due March 20 and it gave us a broad view of w hat our research should aim. The table of contents shows all the topics and sub -topics of the project. It can be considered as a checklist of all the documentation needed and all the steps taken from planning, research and development of the project. The f act that a topic, out of the group's area of expertise, is mentioned on the table of contents is a clear message that more of a research there will be interviews. A first draft is due for April 9 with half of the final 120 pages to deliver. This is to show that all research and test were properly documented and considered under the proper standards. As the project was divided into different modules, both majors chose the topics to describe in a very detailed way. While researching, different standards and p revious work were found, so the project was constantly evolving in order to get a better impact on the market. The research guide the group through to a considerably large number of components that may work better than the ones mentioned on the Divide and Conquer document. In here, the group is taking in consideration the delivery time vs the effective work vs the cost of each component needed. 116 The final document is due for April 26 and then a properly documented, researched and cited project is expected. T he 120 page document is not just limited to research and theory but to test and a final schematic. The final schematic is the final diagram of how the project will work and will include the final PCB connected through certain electronic components to the different modules (fingerprint reader, servo motors, touchscreen display). For the final presentation of the project the following semester Summer 2018, the project should be running properly without any help from a pre -assembled microcontroller and also w ith a proper enclosure that get the attention of the judges. The final documentation by then should be edited with all new tests and new data acquired while building the project. This final document will have more explanation about how the different module s work for the entire project but now using the experience of running the tests rather than theory . Table 30. Milestone chart Number Task Start End Status Responsible Senior Design I 1 Ideas 1/15/2018 1/17/2018 Completed Group 6 2 Project Selection & Role Assignments 1/15/2018 1/24/2018 Completed Group 6 3 Initial Document - Divide & Conquer 1/18/2018 1/28/2018 Completed Group 6 4 Research with Psychiatrist and Pharmacist 2/3/2018 2/24/2018 Completed Group 6 5 Table of Contents 3/10/2018 3/20/2018 Completed Group 6 6 First Draft 3/15/2018 4/1/2018 Completed Group 6 7 Final Document 3/20/2018 4/26/2018 Completed Group 6 8 Schematics and Dispenser design 4/1/2018 4/26/2018 Completed Group 6 9 Recording & Data abstraction (Order and test parts) 3/18/2018 4/26/2018 Completed Group 6 Senior Design II 10 Order & Test Parts 5/1/2018 5/15/2018 In Progress Group 6 117 11 Design Prototype & PCB Layout 5/15/2018 6/1/2018 In Progress Group 6 12 Build Prototype 5/15/2018 6/15/2018 In Progress Group 6 13 Testing & Redesign 6/15/2018 7/15/2018 In Progress Group 6 14 Finalize Prototype 7/15/2018 7/30/2018 In Progress Group 6 15 Final Report 6/15/2018 8/3/2018 In Progress Group 6 16 Final Presentation 7/15/2018 8/3/2018 In Progress Group 6 8.2 Division of Labor The product is too broad that involves more than electrical and computer engineering. The materials for the enclosure and the medication containers are topics for the chemical and industrial engineers. As our group is made of two electrical engineers, one computer and one double major, they will focus on certain modules that concern their area of expertise. For the electrical engineers, their area involves from the soldering standards to the schematics. Everything that relates connections, components, digital diagrams are part of the electrical duties. Regarding the standards, they are relevant whe n manufacturing the main board and running the tests. For the computer engineers, their area invol ves programming language standards and features for microprocessors. They have to consider which microprocessor is powerful enough to handle the whole program and what instructions take less cycles to run and make an effective program. A flow chart is esse ntial for both majors because it gives a very descriptive narration of the sequence and conditions of the project. According to this \"map\" either electrical and computer engineers can follow and have an idea of which components and lines of codes to use. W hile looking for which components to get for the project, the electricals should consider the power usage and input voltage. Having knowledge of that information, a more precise and accurate schematic can be drawn in which all components are labeled and calculations are close to practice measurements. The map can also help computer engineers to improve the code and get a better time response. The picture 8.2.1 shows us the main responsibilities of the project and it is divided according to the major (electr ical engineering, computer engineering) and also with a distinctive color the mutual responsibilities. Those responsibilities are only the ones considered before starting the project because when the project has started and the assembly and programming beg ins, many other tasks should come up. That is why the mutual responsibility of research is imperative. A extensive research within the field can either clarify or question more project needs. 118 There may be some responsibilities that does not fall in anyone' s hands, like the PCB design, because we will hire a company that will provide us three boards to avoid a higher probability of glitches. In the event of glitching, breaking, losing or wasting the boards, there are tutorials online that explain how to crea te a PCB with the proper tools and equipment. In that case, the responsibility of creating a new PCB would fall upon the electrical engineers. That would be the scenario and responsibilities if the purpose is to avoid the waiting or to avoid the overspendi ng. An overnight request will affect the products price and also that would mean a lack of responsibility from the group part to the sponsor. When the time of assemble and program the project begins, each individual member should be responsible of their ow n tools, computer software and computer good performance. It may sound that it has nothing to do with the project but it is a good sign and a good review to the sponsor that a prepared and organize team is taking care of a project that has the potential to leave a mark in the industry. For instance, it is recommended that the group should not rely on a single computer, but to share the documentation and have the same access to software. That the project is divided for a faster compliance, does not mean that the responsibilities are individual, it means that every person is focusing more on a specific topic but also helping to the partners. Figure 58. Division of labor The testing part can be considered as a play -around or get -to-know stage because all members are testing each module and pushing them to the limits. For computer engineers, they are changing codes, adding instruction, program in different languages, getting translators from assembly language to high level language. F or electrical engineers, the test 119 can be from making the servo motors to rotate and check all connections for each component. When running some tests for the main board, many glitches can show up and sometimes the fastest solution is to hard -wire ports. W hile soldering, an excess of tin lead can create a short circuit; meanwhile assembling all components together, the voltage given to one of those may not be enough to power them up. The values for the voltages and power will be different from the theoretic al and sometimes the arrangements made on the schematic have to redistributed while building the final product. 8.3 Budget and Finance Discussion The project will be financed by Dr. Fredesvinda Alvarez, head of Esperanza Behavioral Health and Services in Orlando. As this project will have a good impact at the health industry, Dr. Alvarez will predict that this project will have a good demand on years to come. As the project will not exceed the cost of $300, the group is costing it for the testing and proto type stage and the sponsor will return all investment when the final product is finished. Table 3 1 shows all the components necessary and researched throughout many websites. After considering the reviews, the cost and the performance, the following were the one parts chosen to be part of the project. Table 31. Investment done per member Member Product Total I nvested Sakeenah Fingerprint reader $14.00 Ivan 0 Gustavo A000066 Arduino $19.99 There may be many other elements that are not listed and will be acquired on the run while building the prototype. The group also considered that most of the components will take longer than others, so for that reason the shipping cost is not adde d because it will be necessary later on to pay for an overnight shipping. For the prototype building and testing, the group acquired the Arduino , the servo motors and the fingerprint reader. Those were the cheaper components to get and also the ones for which the test s were easy to run. The final PCB will be bought at the end of May 2018 because the schematics for it should run a perfect simulation. The component that cost more is the microcontroller PIC32MZ because this is the responsible to run the whole project with a very small time delay. 120 As a group we have discussed during our meetings the prospective compone nts and where to get them for ac commodate price. The necessary components can be get from aliexpress, as mentioned on the Table 30 , but with the r estriction that they take at least 15 business days to get to the United States from China and India. Even though the prices are affordable, we still need to discuss if the components will be used or they can be replaced or something else. Another topic that involves financing but is different from sharing expenses, is how easy can people get benefit from this project. Regarding to how the patient may get this sort of service, an interview with Xavier Ortega, medical visitor from the company Prime -Care Home -Care located in Saint Petersburg, that sends nurses, therapist and social workers to visit patients, check for their compliance and report to the physician in charge. A key topic mentioned during the interview was how this services are cov ered, they work with Medicare , so the patient have to either pay as low as he or she can or nothing. This service is pretty similar to what the final product is going to offer. Considering this company and job, it gives us an idea that the product may be e ligible for being covered by the insurances companies and let it be introduced to the market. 121 9.0 Conclusion For our senior design project, we have decided to create the Medspencer. The main goal of the Medspencer is to increase medication compliance in pa tients, by providing automated support and reminders at home. The Medspencer organizes the patient's various medications, schedules the doses, and reminds the patient when it is time to take a dose. The Medspencer should also reschedule doses in the case o f a missed dose and send reports on the patient's medication compliance to the PCP. During our first semester of senior design, the team was tasked with designing the Medspencer and planning its construction. The first step in this process was conducting extensive research. We researched similar products on the market and met with medical professionals in order to get a better idea of what patients and medical professionals need, and what is currently available to them. This helped us solidify our overall goals for the Medspencer and what features to include to best meet those goals. Then we researched existing technologies that we could use to create the Medspencer. To do so, we considered the features we want to include in the Medspencer and researched th e different technologies available in order to provide those features. Then we went into the design phase. This involved figuring out the specs we need and choosing physical hardware components to purchase that meet those specs. We planned the hardware and circuit design and the interconnections between the MCU, power supply, and various hardware components. We also planned the software design for the Medspencer system. Lastly, we laid out the prototype construction plans and testing procedures we plan to g o through as we verify our designs to create the final Medspencer product. Through the writing of this report, we have laid out good plans and a foundation that we will use during the next semester of senior design to facilitate our prototyping and final construction of the Medspencer. Our plans were carefully made considering the overarching goals and objectives we hope to accomplish. 122 Appendix A: Citations [1] \"16-Bit PIC Microcontroller \"2N2102/2N2102A: NPN Silicon -42211.pdf [3] \"32-Bit PIC and SAM Microcontrollers Microchip Technology, July 2017, ww1.microchip.com/downloads/en/DeviceDoc/60001455c.pdf [4] \"3 Most Common [6] Association Connecting Electronic Industries. Requirements and Acceptance for Cable and Wire Harness Assemblies. Arlington Heights, Illinois, Mar. 2002. [7] Association Connecting Electronics Industries. Rework, Modification, and Repair of Electronics Assemblies. Bannockburn, Illinois, Nov. 2007. [8] Association Connecting Electronics Industries. Acceptability of Printed Boards . Northbrook, Nov. 1999. PDF. [9] Assoc iation Connecting Electronics Industries. Acceptability Standard for Manufacture Inspection and Testing of Electronic Enclosures . Bannockburn, Sept. 2013. PDF. [10] Association Connecting Electronics Industries. Generic Standard on Printed Board Design . Northb rook, Feb. 1998. PDF. [11] Association Connecting Electronics Industries. Performance Test Methods and Qualification Requirements for Surface Mount Solder Attachments . Bannockburn, Jan. 2002. PDF. [12] Association Connecting Electronics Industries. Requirements for Soldered Electrical and Electronic Assemblies . Northbrook, Feb. 2012. PDF. [13] Association Connecting Electronics Industries. Specification for Base Materials for Rigid and Multilayer Printed Boards . Bannockburn, Dec. 1997. PDF. B.A. \"The Environmental Side Effects of Medication.\" US National Library of Medicine , 5 Dec. 2014, www.ncbi.nlm.nih.gov/pmc/articles/PMC12992 01/ [22] Brown, Marie T, and Jennifer K Bussell. \"Medication Adherence: WHO Cares?\" Mayo Clinic Proceedings , Apr. US National Library of Medicine , https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3068890/ [23] \"Brushless DC Motors vs. Servo Motors vs. Inverters. \" Oriental Motor , \"CC3220 SimpleLink Wi-Fi Wireless and Internet -of-Things Solution, a Dec. 5, 2017. PDF file. [28] \"CC3220 SimpleLink Wi-Fi and Solution, Feb. Medication Dispensers.\" The Senior List The Senior List, LLC, 2017, www.theseniorlist.com/2017/09/automated \"Medication Use in the Transition from Hospital to Home.\" US National Library of Medicine , 19 Feb. 2013, www.ncbi.nlm .nih.gov/pmc/articles/PMC3575742/ [32] \"Electronics II Laboratory Manual.\" Department of Electrical & Computer Engineering , University of Central Florida, Jan. 2012, http://www.ece.ucf.edu/files/labs/EEL%204309%20Jan%202012.pdf [38] \"e-Pill Med -O-Wheel Computer, Feb. 2012, http://www.dirtycomputer.com/?p=21 Drug Safety Communication: Revised Recommendations for Celexa (Citalopram Hydrobromide) Related to a Potential Risk of Abnormal Heart Rhythms with High Doses.\" U.S. Food & Drug Administration , 24 Aug. 2011, www.fda.gov/Drugs/DrugSafety/ucm297391.htm [41] \"FH12 Series Industries. Perf. Adafruit Industries. 2012. Youtube. [46] Segmented Display Solutions.\" Microchip Technology, Mar. 2018, Scan Holly, et al. \"Drug Overdose Deaths in the United States, 1999 - 2016.\" Centers for Disease Control and Prevention , US Department of Health and Services, IEEE, Dec. 2007, https://web.archive.org/web/20080203190557/http://standards.ieee.org/announceme IEEE, 1:2018 .\" 2018, www.iso.org/standard/74911.html [56] Jayant. \"Small [58] \"JST - PH2.0 Interface Stereo Enclosed Speaker (2 PCS), 3 W, 8 Ohm. Applied to All Kinds of Audio Production, Raspberry Pi and Arduino DIY Projects.\" - Taking Your Meds as Directed.\" America n Hear t Association , America n Heart Association, Sept. 2016, Orenda. \"Introduction to Simplex, 2017, ww1.microchip.com/downloads/en/DeviceDoc/70005311A.pdf [68] Fingerprint Mod ule User Manual.\" Hangzhou Grow Technology Co., Ltd., Feb. 2011, https://www.dropbox.com/sh/orprmb3bgb6lqb6/AACpiIXOF91R7 - RQ9OkD4JXha?dl=0 [71] \"REG1117/REG1117A: 800mA And 1A Low Dropout Positive Regulator.\" Burr - Brown Products , Texas Instruments, July 2004, www.ti.com/lit/ds/symlink/reg1117.pdf [72] Saarni SI, Gylling HA. Evidence based medicine guidelines: a solution to rationing or politics disguised as science? Journal of Medical Ethics 2004; 30:171-175. [73] Sabat\u00e9, Eduardo, editor. Adherence to Long -Term Therapies: Evidence for Action . World Health Organization, 2003, http://www.who.int/chp/knowledge/publications/adherence_full_report.pdf 126 [74] \"Section 22. 12 -Bit High -Speed Successive Approximation Register (SAR) Analog - Te July 2017, ww1.microchip.com/downloads/en/DeviceDoc/54_GLCD_60001379A.pdf [76] Services, U.S. Department of Health an d Human. Guidance for Industry Container Closure Systems for Packaging . Rockville: Food and Drug Administration, 1999. for Additive Manufactured Medical Devices, Guidance for Industry and Food and Drug Administration Staff.\" December 5, 2017. PDF file. [81] Thakkar, Danny. Difference Between an Illegal and a Controlled Substance.\" Foundation Recovery Network , 24 Apr. -between of Part 1304 - Records and Reports of Registrants.\" Diversion Control Division , US Department of Justice, July www.deadiversion.usdoj.gov/21cfr/cfr/1304/1304_11.htm [84] -N: Technical Take Your Medications as Prescribed or Instructed.\" U.S. Food & Drug Administration , 16 Feb. 2016, www.fda.gov/Drugs/ResourcesForYou/SpecialFeatures/ucm485545.htm [86] RC Helicopter Airplane Boat Robot Amazon , www. Texas Instruments Circuit Basics 128 e-pill Digi-key 129 US Department of Health & Human Services Circuit Digest "}