{"title": "PDF", "author": "PDF", "url": "https://openaccess.uoc.edu/bitstream/10609/95507/8/svazquezcoTFG0619memoria.pdf", "hostname": "PDF", "description": "PDF", "sitename": "PDF", "date": "PDF", "cleaned_text": "Desarrollo de una red social para personas que disfrutan de una comida saludable Susana V\u00e1zquez Corte Ingenier\u00eda de software Desarrollo de aplicaci\u00f3n web Gregorio Robles Mart\u00ednez Santi Caballe Llobet Fecha de entrega: 12 de junio de 2019Esta obra est\u00e1 sujeta a una licencia de Reconocimiento-NoComercial-CompartirIgual 3.0 Espa\u00f1a de Creative CommonsFICHA DEL TRABAJO FINAL T\u00edtulo del trabajo:Desarrollo de una red social para personas que disfrutan de una vida/comida saludable Nombre del autor: Susana V\u00e1zquez Corte Nombre del consultor/a: Gregorio Robles Mart\u00ednez Nombre del PRA: Santi Caballe Llobet Fecha de entrega (mm/aaaa): 01/06/19 Titulaci\u00f3n::Ingenier\u00eda de software \u00c1rea del Trabajo Final: Desarrollo web Idioma del trabajo: Espa\u00f1ol Palabras clavetecnolog\u00edas web, aplicaciones web, Django, red social, alimentaci\u00f3n saludable. Resumen del Trabajo: La finalidad de este Trabajo Final de Grado es la creaci\u00f3n de una red social para personas que llevan o quieren llevar una vida saludable. Esta red social permite a las personas tener un espacio donde compartir sus dudas sobre si los alimentos o las recetas que consumen son saludables y se pueden consumir habitualmente o no. Para el desarrollo del proyecto se utiliza una metodolog\u00eda en cascada en la que se establecen cuatro hitos de entrega. La aplicaci\u00f3n se ha desarrollado con Django, PostgreSQL y Docker. Realizar este proyecto ha sido muy satisfactorio, por un lado he podido asentar los conocimientos adquiridos durante todo el grado y por otro lado he aprendido nuevas tecnolog\u00edas que me ayudar\u00e1n en el \u00e1mbito laboral. Abstract: The purpose of this Final Degree Project is the creation of a social network for people who lead or want to lead a healthy life. This social network allows people to have a space to share their doubts about whether the food or the recipes they consume are healthy and can be consumed habitually or not. For the development of the project, a cascade methodology is used in which four delivery milestones are established. The application has been developed with Django, PostgreSQL and Docker. Carry out this project has been very satisfactory, on the one hand I have been able to establish the knowledge acquired during the whole degree and by the other hand I have learned new technologies that will help me in the workplace. Agradecimientos Ahora que llega el final, no puedo irme sin aprovechar para expresar todos los agradecimientos que no he podido expresar durante todos estos a\u00f1os de grado. Muchas gracias a la UOC, por apostar por un formato de estudios no presencial. A su personal, profesores y consultores, gracias a vuestro trabajo, muchas personas como yo pueden estudiar las cosas que les gusta y labrarse un buen futuro laboral. A mi gran compa\u00f1ero de estudios, Javi, parec\u00eda que no pero al final lo hemos conseguido, gracias por los \u00e1nimos y por ayudarme siempre que lo he necesitado. A mis grandes amigos, por vuestra paciencia, vuestros \u00e1nimos y por entender mi vida de d\u00edas de entregas y de ex\u00e1menes. Y sobre todo a mis tres pilares fundamentales, Mam\u00e1, Iv\u00e1n, Paqui. Gracias por tantos a\u00f1os apoy\u00e1ndome, ayud\u00e1ndome y d\u00e1ndome \u00e1nimos, por soportar mis nervios y mis d\u00edas de cansancio, por adaptar vuestras agendas a mi calendario escolar, gracias por todo! De verdad que sin vosotros esto nunca hubiera sido posible.\u00cdndice 1. Introducci\u00f3n ...................................................................................................... 1 1.1 Contexto y justificaci\u00f3n del Trabajo ............................................................. 1 1.2 Objetivos ...................................................................................................... 2 1.3 Enfoque y m\u00e9todo seguido .......................................................................... 2 1.4 Planificaci\u00f3n del Trabajo .............................................................................. 3 1.5 Estructura de la memoria ............................................................................. 4 2. Dise\u00f1o ............................................................................................................... 5 2.1 Requisitos .................................................................................................... 5 2.2 Casos de uso ............................................................................................... 6 2.3 Modelado de datos .................................................................................... 12 3. Implementaci\u00f3n ............................................................................................... 13 3.1 Herramientas y tecnolog\u00edas utilizadas ....................................................... 13 3.2 Estructura de la aplicaci\u00f3n ......................................................................... 15 3.3 Despliegue de la aplicaci\u00f3n ....................................................................... 18 4. Plan de pruebas .............................................................................................. 21 5. Conclusiones y futuros trabajos ...................................................................... 26 5.1 Conclusiones ............................................................................................. 26 5.2 Futuros trabajos ......................................................................................... 27 6. Bibliograf\u00eda ...................................................................................................... 28Lista de figuras Ilustraci\u00f3n 1: Diagrama de Gantt .......................................................................... 3 Ilustraci\u00f3n 2: Casos de uso .................................................................................. 6 Ilustraci\u00f3n 3: Diagrama de clases ....................................................................... 12 Ilustraci\u00f3n 4: Patr\u00f3n Modelo-Vista-Template ..................................................... 14 IIlustraci\u00f3n 5: Estructura final de aplicaci\u00f3n ................................................... 15 Ilustraci\u00f3n 6: Estructura directorio socialNetwork ............................................... Estructura ............................................. 9: Heroku ............................................................................ 19 de entorno ...................................................... 19 IIlustraci\u00f3n 11: Home entorno de producci\u00f3n ..................................................... 201. Introducci\u00f3n 1.1 Contexto y justificaci\u00f3n del Trabajo2,3 Cada vez es m\u00e1s frecuente ver en restaurantes, en la publicidad o en los supermercados alimentos denominados Healthy o saludables. La sociedad est\u00e1 cambiando sus h\u00e1bitos de alimentaci\u00f3n, de no preocuparse por los alimentos que ingiere o su procedencia, a buscar alimentos no procesados, con ingredientes naturales y sin az\u00facares a\u00f1adidos. Esto se produce como consecuencia de la toma de conciencia de las personas sobre los que tiene para la salud este tipo de alimentaci\u00f3n seg\u00fan recientes estudios ci\u00e9ntificos1: Prevenci\u00f3n de la obesidad. Prevenci\u00f3n de enfermedades cr\u00f3nicas como el colesterol y la diabetes. Mejora en el descanso. Mejora en el estado de \u00e1nimo. Mayor concentraci\u00f3n. Para muchas personas el cambiar de un estilo de alimentaci\u00f3n a otro no es f\u00e1cil ya que no disponen de herramientas o de informaci\u00f3n suficiente para saber si un alimento es saludable o no. No est\u00e1n habituadas a leer los ingredientes de los productos que compran y le surgen dudas de si un producto es realmente saludable o no. Adem\u00e1s, cada vez es m\u00e1s frecuente encontrar productos en los supermercados denominados como \"naturales\" o \"sin az\u00facares a\u00f1adidos\" que est\u00e1n llenos de ingredientes procesados o de otros ingredientes no denominados az\u00facar pero que tienen los mismos efectos. Como consecuencia, cada vez es m\u00e1s frecuente encontrar en internet (blogs, redes sociales,...) preguntas de usuarios sobre si un alimento o incluso una receta es saludable y si se puede consumir cada d\u00eda, de manera ocasional o nunca. En definitiva, es necesaria una red social que agrupe a este perfil de usuarios, donde puedan compartir sus inquietudes y buscar informaci\u00f3n sobre los alimentos y/o recetas que consume. P\u00e1g.- 11.2 Objetivos El objetivo principal del proyecto es crear una red social para todas las personas que disfrutan o quieren disfrutar de una alimentaci\u00f3n saludable donde los usuarios puedan a\u00f1adir las etiquetas de los productos o de las recetas que quieran cocinar para que el resto de usuarios puedan evaluar si se puede consumir diariamente, ocasionalmente o nunca, adem\u00e1s puedan evaluar los productos o recetas de otros usuarios e incluso puedan hacer amigos. A nivel personal, los objetivos son: Asentar los conocimientos adquiridos durante todo el grado. Profundizar en Python, uno de mis lenguajes favoritos. Conocer Django, un framework que se utiliza cada d\u00eda m\u00e1s y que tengo mucho inter\u00e9s en aprender. Desplegar una aplicaci\u00f3n en un entorno de producci\u00f3n. 1.3 Enfoque y m\u00e9todo seguido A pesar de que todos los desarrollos de software tienen la misma finalidad, no todos tienen las mismas caracter\u00edsticas, necesidades, recursos, equipos de desarrollo,... Es por esto que existen diferentes metodolog\u00edas, seg\u00fan su enfoque se pueden dividir en metodolog\u00edas tradicionales y metodolog\u00edas \u00e1giles. Las metodolog\u00edas tradicionales se caracterizan por tener una fuerte planificaci\u00f3n que es definida en la fase inicial del proyecto. Mientras que las metodolog\u00edas \u00e1giles est\u00e1n basadas en el trabajo incremental e iterativo y est\u00e1n enfocadas a proyectos que necesiten cierta flexibilidad y puedan cambiar en el tiempo. Teniendo en cuenta que este proyecto tiene establecido por defecto cuatro hitos y que hasta el \u00faltimo no se realiza la entrega total del proyecto, se considera utilizar una metodolog\u00eda tradicional, en concreto, la metodolog\u00eda en cascada. En la primera fase se definir\u00e1 el plan de trabajo, donde se definir\u00e1 el problema que se pretende resolver, el trabajo que se llevar\u00e1 a cabo y las fases del proyecto. La segunda fase est\u00e1 enfocada en la parte del dise\u00f1o de la aplicaci\u00f3n, se establecen los requisitos, se definen los casos de uso, se realiza el modelado de datos y la definici\u00f3n de las vistas. Adem\u00e1s en esta fase se inicia la implementaci\u00f3n y se crea la estructura del proyecto. La tercera fase ser\u00e1 dedica a realizar la implementaci\u00f3n del proyecto, las pruebas de test y el despliegue de la aplicaci\u00f3n en un entorno de producci\u00f3n. P\u00e1g.- 2Por \u00faltimo, la cuarta fase conlleva la elaboraci\u00f3n de la memoria, la creaci\u00f3n de la presentaci\u00f3n as\u00ed como la entrega del proyecto. 1.4 Planificaci\u00f3n del Trabajo Hitos: Fecha inicioFecha finHito Tareas 20/02/1906/03/19PEC1: Plan de trabajo- Creaci\u00f3n del plan de proyecto, contiene: Problema que se pretende resolver. Trabajo que se llevar\u00e1 a cabo. Tareas e hitos. 07/03/1910/04/19PEC2: Hito intermedio- Establecimiento de requisitos. - Especificaci\u00f3n de los casos de uso. - Modelado de datos. - Inicio de implementaci\u00f3n. 11/04/1929/05/19PEC3: Hito intermedio- Desarrollo de la aplicaci\u00f3n. - Test. 30/05/1912/06/19PEC4: Memoria final - Creaci\u00f3n de memoria. - Creaci\u00f3n de la presentaci\u00f3n del TFG. - Entrega del proyecto. Diagrama de Gantt 4: P\u00e1g.- 3Ilustraci\u00f3n 1: Diagrama de Gantt 1.5 Estructura de la memoria Para finalizar la introducci\u00f3n, se detalla a continuaci\u00f3n un breve resumen sobre el contenido de los cap\u00edtulos de la memoria. Cap\u00edtulo 1: introducci\u00f3n de la memoria, se realiza la presentaci\u00f3n del proyecto y los objetivos. Adem\u00e1s se determina cual es la metodolog\u00eda a seguir y la planificaci\u00f3n del proyecto. Cap\u00edtulo 2: se definen los requisitos del proyecto, casos de uso y el modelado de datos. Cap\u00edtulo 3: se define las tecnolog\u00edas utilizadas en el proyecto, la estructura y las diferentes maneras de desplegar la aplicaci\u00f3n. Cap\u00edtulo 4: se detalla el plan de pruebas a realizar una vez acabada la implementaci\u00f3n. Cap\u00edtulo 5: contiene las conclusiones una vez finalizado el proyecto. Cap\u00edtulo 6: se recoge la bibliograf\u00eda utilizada para el desarrollo de la memoria. P\u00e1g.- 42. Dise\u00f1o 2.1 Requisitos A continuaci\u00f3n se detallan los requisitos funcionales y no funcionales de la aplicaci\u00f3n web. 1.Requisitos funcionales: RF-01: el usuario debe tener la posibilidad de registrarse en el sistema mediante un correo electr\u00f3nico que servir\u00e1 de identificador, una contrase\u00f1a y un nombre. Adem\u00e1s de manera opcional podr\u00e1 indicar su a\u00f1o de nacimiento y su tipo de dieta. RF-02: el usuario podr\u00e1 editar sus datos. RF-03: el usuario debe estar registrado en el sistema para poder acceder. RF-04: el sistema tendr\u00e1 un tipo de rol, administrador. Puede existir m\u00e1s de un usuario con rol administrador. RF-05: el usuario se autenticar\u00e1 con su correo y contrase\u00f1a, adem\u00e1s podr\u00e1 recuperar su contrase\u00f1a. RF-06: solo un usuario con rol administrador podr\u00e1 a\u00f1adir a otros administradores. RF-07: el administrador puede a\u00f1adir tipos de dietas. RF-08: el administrador podr\u00e1 eliminar im\u00e1genes y recetas de cualquier usuario. RF-09: el administrador podr\u00e1 eliminar valoraciones. RF-10: una vez el usuario inicie sesi\u00f3n en el sistema tendr\u00e1 acceso a las siguientes secciones: Valoraci\u00f3n de productos: im\u00e1genes con los ingredientes de los productos que los usuarios podr\u00e1n valorar como: apto para consumo diario, consumo espor\u00e1dico / ocasional o no consumir. Recetas: recetas que suben los usuarios y que podr\u00e1n ser etiquetadas como: aptas para consumo diario, consumo espor\u00e1dico / ocasional o no consumir. Favoritos: usuarios marcados como favoritos. RF-11: el usuario podr\u00e1 publicar una imagen con los ingredientes de un producto para ser valorado. RF-12: el usuario podr\u00e1 valorar las im\u00e1genes de otros usuarios. RF-13: el usuario podr\u00e1 editar y eliminar solo sus propias im\u00e1genes. RF-14: el usuario tendr\u00e1 acceso a las im\u00e1genes de todos los usuarios, podr\u00e1 filtrar por tipo de producto. RF-15: el usuario podr\u00e1 publicar una receta indicando nombre, ingredientes, tiempo de preparaci\u00f3n y etiqueta. RF-16: el usuario podr\u00e1 editar y eliminar solo sus recetas. RF-17: el usuario podr\u00e1 valorar una receta de cualquier usuario. P\u00e1g.- 5RF-18: el usuario tendr\u00e1 acceso a las recetas de todos los usuarios, adem\u00e1s podr\u00e1 filtrar por usuario y por etiqueta. RF-19: el usuario se podr\u00e1 dar de baja. 2.Requisitos no funcionales: RNF-01: el sistema debe ser compatible con todos los navegadores. RNF-02: el sistema debe adaptarse a dispositivos m\u00f3viles. 2.2 Casos de uso Leyenda: UnknownUser: usuario no registrado en el sistema. User: usuario registrado en el sistema. Admin: usuario registrado en el sistema con perfil de administrador. P\u00e1g.- 6Ilustraci\u00f3n 2: Casos de uso CU-000: Register user Caso de uso: registro de un usuario en el sistema Actor: usuario desconocido Precondici\u00f3n: el usuario no debe tener iniciada su sesi\u00f3n en el sistema Escenario principal : 1.El usuario accede a la p\u00e1gina de registro 2.El sistema solicita los datos para el registro 3.El usuario introduce los datos de registro 4.El sistema notifica que el registro ha sido satisfactorio Extensiones: 4.1: el sistema muestra error de registro Post-condici\u00f3n: se registra el usuario en el sistema CU-001: Login Caso de uso: acceder al sistema Actor: usuario Precondici\u00f3n: el usuario debe estar registrado en el sistema Escenario principal : 1.El sistema solicita correo electr\u00f3nico y contrase\u00f1a del usuario 2.El usuario introduce los datos 3.El sistema muestra la p\u00e1gina de inicio Extensiones: 2.1: el sistema muestra mensaje de error, no existe usuario con los datos introducidos Post-condici\u00f3n: - CU-002: Logout Caso de uso: salir del sistema Actor: usuario Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El usuario solicita salir del sistema 2.El sistema cierra la sesi\u00f3n del usuario Extensiones: - Post-condici\u00f3n: - CU-003: Delete User Account Caso de uso: el usuario elimina su cuenta Actor: usuario Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El usuario solicita dar de baja su cuenta 2.El sistema solicita la contrase\u00f1a del usuario 3.El usuario introduce la contrase\u00f1a 4.El sistema solicita confirmaci\u00f3n de eliminaci\u00f3n de cuenta 5.El sistema elimina la cuenta del usuario y muestra la pantalla de inicio P\u00e1g.- 7Extensiones: 3.1: el usuario cancela la eliminaci\u00f3n de la cuenta 4.1: el usuario cancela la eliminaci\u00f3n de la cuenta Excepciones: 3: el usuario introduce una contrase\u00f1a err\u00f3nea E1: el sistema notifica el error y vuelve al paso 2 Post-condici\u00f3n: - CU-004: Edit Profile Caso de uso: el usuario edita los datos de su perfil Actor: usuario Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El usuario introduce los nuevos datos en el sistema 2.El sistema modifica los datos del usuario Extensiones: - Post-condici\u00f3n: - CU-005: Add Picture Caso de uso: el usuario a\u00f1ade una imagen a su perfil Actor: usuario Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El sistema solicita al usuario la imagen que a\u00f1adir 2.El usuario selecciona la imagen 3.El sistema a\u00f1ade la nueva foto Extensiones: 2.1: El usuario cancela la operaci\u00f3n Post-condici\u00f3n: - CU-006: Delete Own Picture Caso de uso: el usuario elimina una imagen a su perfil Actor: usuario Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El sistema muestra las im\u00e1genes del usuario 2.El usuario selecciona la imagen 3.El sistema pide confirmaci\u00f3n 4.El sistema elimina la imagen Extensiones: 2.1: El usuario cancela la operaci\u00f3n 3.1: El usuario cancela la operaci\u00f3n Post-condici\u00f3n: - CU-007: Edit Own Picture Caso de uso: el usuario edita una imagen a\u00f1adida a su perfil Actor: usuario P\u00e1g.- 8Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El sistema muestra las im\u00e1genes del usuario 2.El usuario selecciona la imagen 3.El sistema solicita la nueva imagen 4.El usuario a\u00f1ade la imagen 5.El sistema edita la imagen Extensiones: 2.1: el usuario cancela la operaci\u00f3n 4.1: el usuario cancela la operaci\u00f3n CU-008: Add Picture Evaluation Caso de uso: el usuario a\u00f1ade una valoraci\u00f3n a una imagen Actor: usuario Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El usuario selecciona la imagen a valorar 2.El usuario valora la imagen 3.El sistema a\u00f1ade la valoraci\u00f3n a la imagen Extensiones: 2.1: El usuario cancela la operaci\u00f3n CU-009: Add Recipe Caso de uso: el usuario a\u00f1ade una receta a su perfil Actor: usuario Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El sistema solicita los datos de la receta (nombre, ingredientes, tiempo de preparaci\u00f3n y etiqueta) 2.El usuario introduce los datos 3.El sistema a\u00f1ade la receta al sistema Extensiones: 2.1: El usuario cancela la operaci\u00f3n CU-010: Edit Own Recipe Caso de uso: el usuario edita una receta a\u00f1adida a su perfil Actor: usuario Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El sistema solicita al usuario la receta que quiere editar 2.El usuario selecciona la receta 3.El usuario edita los datos de la receta 4.El sistema edita la imagen Extensiones: 2.1: El usuario cancela la operaci\u00f3n 3.1: El usuario cancela la operaci\u00f3n P\u00e1g.- 9CU-011: Delete Own Recipe Caso de uso: el usuario elimina una receta de su perfil Actor: usuario Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El usuario selecciona la receta a eliminar 2.El sistema elimina la imagen Extensiones: 2.1: El usuario cancela la operaci\u00f3n CU-012: Add Recipe Evaluation Caso de uso: el usuario a\u00f1ade una valoraci\u00f3n a una receta Actor: usuario Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El usuario selecciona la receta a valorar 2.El usuario a\u00f1ade su valoraci\u00f3n 3.El sistema a\u00f1ade la valoraci\u00f3n a la receta Extensiones: 1.1: El usuario cancela la operaci\u00f3n 2.1: El usuario cancela la operaci\u00f3n CU-013: Recipe List Caso de uso: el usuario lista todas las recetas Actor: usuario Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El usuario selecciona mostrar todas las recetas 2.El sistema muestra todas las recetas CU-014: Picture List Caso de uso: el usuario lista todas las im\u00e1genes Actor: usuario Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El usuario selecciona mostrar todas las im\u00e1genes 2.El sistema muestra todas las im\u00e1genes CU-015: Delete Picture Caso de uso: el administrador elimina una imagen de un usuario Actor: usuario con rol administrador Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El usuario selecciona la imagen que quiere eliminar 2.El sistema solicita confirmaci\u00f3n 3.El sistema elimina la imagen P\u00e1g.- 10Extensiones: 2.1: El usuario cancela la operaci\u00f3n CU-016: Delete Recipe Caso de uso: el administrador elimina una receta de un usuario Actor: usuario con rol administrador Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema y haber subido al menos una receta Escenario principal : 1.El usuario selecciona la receta que quiere eliminar 2.El sistema solicita confirmaci\u00f3n 3.El sistema elimina la receta Extensiones: 2.1: El usuario cancela la operaci\u00f3n CU-017: Delete Picture Evaluation Caso de uso: el administrador elimina una valoraci\u00f3n de la imagen de un usuario Actor: usuario con rol administrador Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El usuario selecciona la imagen a la que quiere eliminar la valoraci\u00f3n 2.El usuario selecciona la valoraci\u00f3n a eliminar 3.El sistema solicita confirmaci\u00f3n 4.El sistema elimina la valoraci\u00f3n de la imagen Extensiones: 2.1: El usuario cancela la operaci\u00f3n 3.1: El usuario cancela la operaci\u00f3n CU-018: Delete Recipe Evaluation Caso de uso: el administrador elimina una valoraci\u00f3n de la receta de un usuario Actor: usuario con rol administrador Precondici\u00f3n: el usuario debe haber iniciado sesi\u00f3n en el sistema Escenario principal : 1.El usuario selecciona la receta a la que quiere eliminar la valoraci\u00f3n 2.El usuario selecciona la valoraci\u00f3n a eliminar 3.El sistema solicita confirmaci\u00f3n 4.El sistema elimina la valoraci\u00f3n de la receta Extensiones: 2.1: El usuario cancela la operaci\u00f3n 3.1: El usuario cancela la operaci\u00f3n P\u00e1g.- 112.3 Modelado de datos Definici\u00f3n de clases: User: clase que contiene los datos de los usuarios registrados. Post: clase abstracta de la que heredan las class Picture y Recipe. Picture: tabla que contiene las im\u00e1genes de los usuarios. Recipe: tabla que contiene las recetas de los usuarios. PostEvaluations: tabla que contiene las valoraciones de los usuarios. DietTypes: tabla que contiene los tipos de dietas disponibles. EvaluationTypes: tabla que contiene los tipos de valoraciones disponibles. P\u00e1g.- 12Ilustraci\u00f3n 3: Diagrama de clases 3. Implementaci\u00f3n A lo largo de este cap\u00edtulo se detallan las herramientas y tecnolog\u00edas utilizadas para el desarrollo de la aplicaci\u00f3n web, se describe la estructura del proyecto y como poder desplegar la aplicaci\u00f3n tanto en un entorno de desarrollo como en un entorno de producci\u00f3n. 3.1 Herramientas y tecnolog\u00edas utilizadas El desarrollo de la aplicaci\u00f3n se realiza mediante Django y Python como lenguaje de programaci\u00f3n. A nivel de dise\u00f1o se utiliza Bootstrap. Los datos de la aplicaci\u00f3n ser\u00e1n guardados en PostgreSQL. Se decide utilizar esta base de datos relacional debido a que es el sistema m\u00e1s completo con licencia BSD, en contra de MySQL que tiene licencia dual, adem\u00e1s es la m\u00e1s compatible con las migraciones de modelos en Django. Dado que la implementaci\u00f3n de la aplicaci\u00f3n se realizar\u00e1 en diferentes ordenadores, se decide utilizar Docker como entorno de desarrollo y GitHub como plataforma de desarrollo, de esta manera se podr\u00e1 tener acceso al c\u00f3digo desde cualquier dispositivo. Por \u00faltimo, se utiliza Heroku como plataforma de despliegue mediante Docker. A continuaci\u00f3n se detallan las caracter\u00edsticas principales de las herramientas y tecnolog\u00edas utilizadas: PyCharm 2019.1.2 ( Professional Edition )5 : entorno de desarrollo multiplataforma que facilita el desarrollo de aplicaciones. Django6 : framework web de alto nivel de c\u00f3digo abierto para la creaci\u00f3n de aplicaciones web escrito en Python. Est\u00e1 pensado para trabajar bajo un patr\u00f3n MVT, modelo-vista-template o modelo-vista-plantilla, est\u00e1 basado en el MVC, cada capa tiene su responsabilidad permitiendo la reutilizaci\u00f3n de c\u00f3digo. En la capa modelo se definen los datos de la aplicaci\u00f3n, la capa plantilla contiene la informaci\u00f3n de como mostrar los datos y en la capa de las vistas se define la l\u00f3gica que accede al modelo y la delega en la plantilla asignada. P\u00e1g.- 13Django permite el desarrollo de una aplicaci\u00f3n web de manera r\u00e1pida y c\u00f3moda, facilita gracias a las siguientes caracter\u00edsticas: Incluye un ORM ( Oriented Relational Model ) que permite interactuar con la base de datos de forma simple. Utiliza un dise\u00f1o de URL limpio y elegante. Fomenta la reutilizaci\u00f3n de c\u00f3digo ( DRY). Incorpora por defecto un sistema de administraci\u00f3n que permite crear, editar, eliminar datos. Es escalable y modular. Es seguro, incluye por defecto medidas para que no se pueda hacer inyecciones SQL ( SQL Injection) y ataques de falsificaci\u00f3n de petici\u00f3n en sitios cruzados, Cross Site Request Forgery. Bootstrap7: se trata de una framework de desarrollo para dise\u00f1o web. Entre sus caracter\u00edsticas destaca: Es responsive. Incluye Grid System permitiendo maquetar por columnas. Se integra f\u00e1cilmente con JavaScript. Utiliza Less. Python 3.78: lenguaje de programaci\u00f3n interpretado, no compilado, tipado din\u00e1mico, fuertemente tipado y multiplataforma. Adem\u00e1s es multiparadigma, soporta orientaci\u00f3n de objetos, programaci\u00f3n imperativa y funcional. PostgreSQL9: Se trata de un sistema gestor de base de datos relacional orientado a objetos. Sus principales caracter\u00edsticas son: P\u00e1g.- 14 Ilustraci\u00f3n 4: Patr\u00f3n Modelo-Vista-TemplatePermite alta concurrencia. Es multiplataforma. Usa arquitectura cliente / servidor. Es Full ACID compliant. Es escalable, soporta gran cantidad de peticiones simultaneas. Docker10 / Docker Compose11: se puede definir Docker como una herramienta que permite el despliegue de aplicaciones mediante contenedores. Estos contenedores incluyen todo lo necesario para que la aplicaci\u00f3n funcione de manera aislada y sin dependencia con el sistema operativo que lo est\u00e1 ejecutando. Heroku12: se trata de un una plataforma como servicio o PaaS ( Plataform as Service). Permite a los usuarios el despliegue de una aplicaci\u00f3n sin tener que preocuparse por el hardware y software necesario para que funcione. Internamente funciona con los llamados Dynos, contenedores independientes que se gestionan en tiempo de ejecuci\u00f3n. Soporta m\u00faltiples lenguajes de programaci\u00f3n y frameworks. Github13: plataforma de desarrollo que permite alojar proyectos utilizando el sistema de control de versiones de Git. 3.2 Estructura de la aplicaci\u00f3n A continuaci\u00f3n se detalla brevemente la estructura utilizada para la aplicaci\u00f3n: P\u00e1g.- 15 Ilustraci\u00f3n5: Estructura final de la aplicaci\u00f3ndoc: contiene los ficheros en PlantUMLde los casos de uso y el modelo de datos. socialNetwork: contiene todos los ficheros y directorios de la aplicaci\u00f3n. migrations: directorio que contiene los ficheros para la creaci\u00f3n de la base de datos y las migraciones. static: ficheros est\u00e1ticos, contiene el template de Bootstrap. templates: plantillas html de las vistas usadas por el controlador. templatetags: etiquetas para plantillas, permiten insertar elementos Python dentro del html. admin.py: contiene la configuraci\u00f3n de los modelos que estar\u00e1n disponibles desde la interfaz de administraci\u00f3n. forms.py: contiene la definici\u00f3n de los formularios para cada uno de los modelos. models.py: contiene las clases con la definici\u00f3n de los atributos de cada clase. urls.py: contiene el mapeo entre las urls y la vista . views.py: incluye la l\u00f3gica de la aplicaci\u00f3n. P\u00e1g.- 16 Ilustraci\u00f3n6: Estructura directorio socialNetworkWebapplication: settings.py: fichero con la configuraci\u00f3n b\u00e1sica para iniciar la aplicaci\u00f3n. Este fichero es importado desde los ficheros settings_dev.py y settings_prod.py. settings_dev.py: fichero que incluye la configuraci\u00f3n espec\u00edfica para iniciar la aplicaci\u00f3n en modo desarrollo. settings_prod.py: fichero que incluye la configuraci\u00f3n espec\u00edfica para iniciar la aplicaci\u00f3n en el entorno de desarrollo. .gitignore: ficheros que se excluyen de subir a Github. docker-compose.dev.yml: define la configuraci\u00f3n de los servicios, redes y vol\u00famenes de los contenedores Docker para el entorno de desarrollo. docker-compose.yml: define la configuraci\u00f3n de los servicios, redes y vol\u00famenes de los contenedores Docker para el entorno de producci\u00f3n. Dockerfile: incluye la definici\u00f3n del entorno de aplicaciones. init.sql: script que se utiliza en la creaci\u00f3n del contenedor de la base de datos. manage.py: script que ayuda con la administraci\u00f3n de la aplicaci\u00f3n. Algunas de las funciones que podemos realizar son: Crear ficheros de migraci\u00f3n (makemigrations). Realizar migraciones en la base de datos (migrate). Iniciar la aplicaci\u00f3n (runserver). Crear una aplicaci\u00f3n dentro del proyecto (startapp). requirements.txt: contiene las librer\u00edas necesarias para la aplicaci\u00f3n. P\u00e1g.- 17Ilustraci\u00f3n7: Estructura directorio webapplication 3.3 Despliegue de la aplicaci\u00f3n El proyecto est\u00e1 preparado para hacer el despliegue de la aplicaci\u00f3n en cualquier entorno de desarrollo, el \u00fanico requisito es tener instalado en la m\u00e1quina Docker Compose. La instalaci\u00f3n se puede realizar siguiendo la documentaci\u00f3n oficial de la p\u00e1gina.14 A continuaci\u00f3n se describen los pasos a seguir para el despliegue de la aplicaci\u00f3n seg\u00fan el entorno. Entorno local / desarrollo: Para iniciar el servicio se debe acceder a la ruta que contiene el fichero docker- compose.yml y ejecutar los siguientes comandos en up El primer comando construye la imagen seg\u00fan la configuraci\u00f3n del fichero Dockerfile y el segundo arranca el contenedor con los servicios indicados en el fichero docker-compose. Una vez iniciados los contenedores, es necesario crear los modelos en la base de datos, esta operaci\u00f3n solo es necesario realizarla la primera vez o en el caso de que se haga alguna modificaci\u00f3n en los modelos. Para ello es necesario ejecutar los siguientes comandos: $ docker-compose exec web /bin/bash $ python manage.py migrate Finalmente, podemos acceder a la aplicaci\u00f3n mediante la url http://0.0.0:8000 Entorno de producci\u00f3n: Tal como se ha comentado en cap\u00edtulos anteriores, el entorno de producci\u00f3n est\u00e1 desplegado en Heroku. P\u00e1g.- 18 I Ilustraci\u00f3n 8: Home entorno localLa primera vez que se crea el entorno de producci\u00f3n es necesario crear una aplicaci\u00f3n en Heroku e instalar el add-on Heroku Postgres. Heroku se encargar\u00e1 internamente de utilizar esta base de datos con la aplicaci\u00f3n. Una vez a\u00f1adida la base de datos, es necesario a\u00f1adir las siguientes variables de entorno: DJANGO_SETTINGS_MODULE SECRET_KEY Una vez configurada la aplicaci\u00f3n se puede proceder a realizar el despliegue de la aplicaci\u00f3n mediante los siguientes comandos: Iniciar login en Heroku $ heroku login Iniciar login en el contenedor $ heroku container:login y $ heroku container:push web -app heroku container:release web -app NombreApp Si es la primera vez que se despliega la aplicaci\u00f3n, es necesario crear los modelos en la base de datos, para esto debe ejecutar los siguientes comandos: $ heroku run bash -app NombreApp $ python manage.py migrate Con el primer comando se accede al bash del Dynos de la aplicaci\u00f3n. Con el segundo comando se ejecuta el script para crear los modelos en la base de datos. Por \u00faltimo, ejecutaremos el siguiente comando para a\u00f1adir el usuario administrador de la aplicaci\u00f3n: $ python manage.py createsuperuser A partir de este momento ya est\u00e1 el entorno de producci\u00f3n preparado para poder acceder mediante el bot\u00f3n \"Open app\" en Heroku o accediendo directamente a la url https://nombreApp.herokuapp.com P\u00e1g.- 20 Ilustraci\u00f3n 11: Home entorno de producci\u00f3n4. Plan de pruebas N\u00fam.Entrada Acci\u00f3n esperada Resultado 1Registrarse como usuario con campo email, nombre, contrase\u00f1a, fecha de nacimiento y tipo de dietaEl sistema crea el usuario en el sistema y redirige a la pantalla de login 2Registrase como usuario con campo email, nombre y contrase\u00f1aEl sistema crea el usuario en el sistema y redirige a la pantalla de login 3Registrarse como usuario con un formato de email incorrectoEl sistema muestra mensaje de error 4Modificar como usuario el email por uno no existente en el sistemaEl sistema guarda el nuevo email del usuario 5Modificar como usuario el email por uno existente El sistema muestra mensaje de error y no guarda los cambios 6Modificar como usuario el nombreEl sistema guarda el nuevo nombre del usuario 7Modificar como usuario el nombre dejando campo nombre en blancoEl sistema muestra mensaje de error y no guarda los cambios 8Modificar como usuario la contrase\u00f1aEl sistema guarda la nueva contrase\u00f1aNo implementado 9Modificar como usuario la fecha de nacimientoEl sistema guarda la nueva fecha de nacimiento P\u00e1g.- 21 10Modificar como usuario el tipo de dietaEl sistema guarda el nuevo tipo de dieta 11Hacer login con email y contrase\u00f1a correctasEl sistema muestra p\u00e1gina de inicio 12Hacer login con email incorrectoEl sistema muestra mensaje de error 13Hacer login con email correcto y contrase\u00f1a incorrectaEl sistema muestra mensaje de error 14Intentar acceder a una p\u00e1gina sin hacer loginEl sistema redirige a pantalla de login 15Como usuario administrador a\u00f1adir tipos de dietasEl sistema guarda el nuevo tipo de dieta 16Como usuario a\u00f1adir tipos de dietasEl sistema no permite a\u00f1adir tipos de dietas 17Como usuario administrador eliminar receta de otro usuarioEl sistema elimina la receta y sus valoraciones 18Como usuario no administrador eliminar receta de otro usuarioEl sistema no permite eliminar la receta 19Como usuario administrador eliminar imagen de otro usuarioEl sistema elimina la imagen y sus valoraciones P\u00e1g.- 22 20Como usuario no administrador eliminar imagen de otro usuarioEl sistema no permite eliminar la imagen 21Como usuario administrador eliminar valoraci\u00f3n de una recetaEl sistema elimina la valoraci\u00f3n de la receta 22Como usuario no administrador eliminar valoraci\u00f3n de una recetaEl sistema no permite eliminar la valoraci\u00f3n 23Como usuario administrador eliminar valoraci\u00f3n de una imagenEl sistema elimina la valoraci\u00f3n de la imagen 24Como usuario no administrador eliminar valoraci\u00f3n de una imagenEl sistema no permite eliminar la valoraci\u00f3n 25Listar recetas El sistema lista todas las recetas 26Listar im\u00e1genes El sistema lista todas las im\u00e1genes 27Como usuario a\u00f1adir una imagenEl sistema guarda la imagen 28Como usuario editar una imagenEl sistema guarda la imagen con los datos nuevos 29Como usuario eliminar una imagen propiaEl sistema elimina la imagen y sus valoraciones P\u00e1g.- 23 30Como usuario a\u00f1adir una receta cumplimentando t\u00edtulo, ingredientes, tiempo de preparaci\u00f3n, fotoEl sistema guarda la receta 31Como usuario a\u00f1adir una receta sin cumplimentar el campo t\u00edtuloEl sistema genera un error y no guarda la receta 32Como usuario a\u00f1adir una receta sin cumplimentar campo ingredientesEl sistema genera un error y no guarda la receta 33Como usuario a\u00f1adir una receta sin cumplimentar campo tiempo de preparaci\u00f3nEl sistema genera un error y no guarda la receta 34Como usuario editar una receta propiaEl sistema guarda la receta con los nuevos datos 35Como usuario editar una receta de otro usuarioEl sistema no permite editar la receta de otra usuario 36Como usuario valorar una recetaEl sistema guarda la valoraci\u00f3n 37Darse de baja como usuario El sistema elimina el usuarioNo implementado 38Abrir aplicaci\u00f3n web en Google ChromeLa aplicaci\u00f3n se muestra correctamente 39Abrir aplicaci\u00f3n web en Safari La aplicaci\u00f3n se muestra correctamente P\u00e1g.- 24 40Abrir aplicaci\u00f3n web en Internet ExplorerLa aplicaci\u00f3n se muestra correctamente 41Abrir aplicaci\u00f3n en tel\u00e9fono m\u00f3vilLa aplicaci\u00f3n se muestra correctamente El resultado del plan de pruebas es el siguiente: Satisfactorias: 37 - 90% No satisfactorias: 2 - 5% No implementadas: 2 - 5% P\u00e1g.- 25 5. Conclusiones y futuros trabajos 5.1 Conclusiones Una vez terminado el trabajo, teniendo en cuenta el resultado final y el plan de pruebas, se puede considerar en t\u00e9rminos generales que el objetivo principal establecido al inicio, crear una red social, se ha cumplido satisfactoriamente. En cuanto a los objetivos personales puedo destacar que: He aprendido a trabajar con Django, uno de los principales objetivos personales, a pesar de que la inversi\u00f3n de tiempo en conocer el framework ha sido mayor de lo que esperaba. He podido desplegar la aplicaci\u00f3n en un entorno de producci\u00f3n, adem\u00e1s me ha permitido conocer la plataforma Heroku, he disfrutado mucho aprendiendo a usarla y seguramente la utilice en futuros proyectos. He profundizado conocimientos en Bootstrap y sacar como conclusi\u00f3n que es un framework muy potente y que permite hacer dise\u00f1os \u00e1giles a personas que tienen pocos conocimientos sobre desarrollo Frontend. Por otro lado, a pesar de que la valoraci\u00f3n global ha sido positiva, hay que tener en cuenta que dos funcionalidades establecidas en los requisitos no se han implementado. En concreto: El sistema de seguimiento de usuarios. Restablecer contrase\u00f1a: requer\u00eda la configuraci\u00f3n para el env\u00edo de correos que debido a la complejidad de la implementaci\u00f3n se decidi\u00f3 aplazarla a una segunda fase. Una inversi\u00f3n de horas mayor de la prevista para el aprendizaje del framework Django y algunas complicaciones a la hora de desplegar el sistema en producci\u00f3n han provocado que se decidiese dejar la implementaci\u00f3n de est\u00e1s funcionalidades para una segunda fase. Se consider\u00f3 que, para esta primera versi\u00f3n de la aplicaci\u00f3n, estas funcionalidades no eran cr\u00edticas para el funcionamiento global de la aplicaci\u00f3n. Hay que destacar que la elecci\u00f3n de la metodolog\u00eda en cascada ha permitido, a pesar de los imprevistos, reaccionar a tiempo y llegar a las fechas de entrega establecidas. Dadas las limitaciones de tiempo y los recursos disponibles, planificar el proyecto, acotar las funcionalidades al principio del proyecto y sobretodo establecer los hitos intermedios han sido piezas clave para lograr los objetivos. P\u00e1g.- 265.2 Futuros trabajos A pesar de que la aplicaci\u00f3n es funcional y se puede usar sin problemas, en una siguiente fase se deber\u00edan de implementar las funcionalidades que han quedado pendientes en esta versi\u00f3n: Sistema de seguimiento de usuarios. Recuperaci\u00f3n de contrase\u00f1a. Adem\u00e1s, se citan a continuaci\u00f3n una serie de mejoras y funcionalidades que har\u00edan que la aplicaci\u00f3n fuese m\u00e1s atractiva para los usuarios. A nivel t\u00e9cnico: A\u00f1adir una servidor de fichero en la nube para el contenido a\u00f1adido por los usuarios, por ejemplo un bucket en S3 de AWS15. Creaci\u00f3n de test unitarios y de integraci\u00f3n para facilitar el desarrollo de nuevas funcionalidades. A nivel funcional: Mejoras de dise\u00f1o para el navegador Internet Explorer y para dispositivos m\u00f3viles. A\u00f1adir la posibilidad de hacer comentarios en las im\u00e1genes y las recetas. A\u00f1adir paginaci\u00f3n en las listas de im\u00e1genes, recetas y usuarios. A\u00f1adir un marco del color de la valoraci\u00f3n m\u00e1s votada a la foto o receta que permita a simple vista la frecuencia con la que se puede consumir un alimento o una receta. A\u00f1adir un sistema de mensajes privados entre usuarios. P\u00e1g.- 276. Bibliograf\u00eda [1]Art\u00edculo: AJ. Cala\u00f1as-Continente*, D. Bellido. Bases cient\u00edficas de una alimentaci\u00f3n saludable. Revista de medicina. Universidad de Navarra, Vol 50, N\u00ba 4, 2006. [2] Art\u00edculo: Sociedad Espa\u00f1ola de Nutrici\u00f3n Comunitar\u00eda. Gu\u00eda de la alimentaci\u00f3n saludable. 2004. [3] Art\u00edculo: SENC. Gu\u00eda pr\u00e1ctica sobre h\u00e1bitos de Alimentaci\u00f3n y Salud. Madrid, SENC-Instituto Omega Pixabay: https://pixabay.com . Im\u00e1genes utilizadas en la aplicaci\u00f3n. P\u00e1g.- 28 "}